(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 2));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArrayLimit(arr, i) {if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}

var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function isFn(fn) {
  return typeof fn === 'function';
}

function isStr(str) {
  return typeof str === 'string';
}

function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

function noop() {}

/**
                    * Create a cached version of a pure function.
                    */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
   * Camelize a hyphen-delimited string.
   */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});
});

var HOOKS = [
'invoke',
'success',
'fail',
'complete',
'returnValue'];


var globalInterceptors = {};
var scopedInterceptors = {};

function mergeHook(parentVal, childVal) {
  var res = childVal ?
  parentVal ?
  parentVal.concat(childVal) :
  Array.isArray(childVal) ?
  childVal : [childVal] :
  parentVal;
  return res ?
  dedupeHooks(res) :
  res;
}

function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}

function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}

function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}

function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}

function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}

function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}

function wrapperHook(hook) {
  return function (data) {
    return hook(data) || data;
  };
}

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}

function queue(hooks, data) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook));
    } else {
      var res = hook(data);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {} };

      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    } };

}

function wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}

function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}

function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}

function invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}

var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return res.then(function (res) {
      return res[1];
    }).catch(function (res) {
      return res[0];
    });
  } };


var SYNC_API_RE =
/^\$|sendNativeEvent|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;

var CONTEXT_API_RE = /^create|Manager$/;

// Context例外情况
var CONTEXT_API_RE_EXC = ['createBLEConnection'];

// 同步例外情况
var ASYNC_API = ['createBLEConnection'];

var CALLBACK_API_RE = /^on|^off/;

function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}

function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}

function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).
  catch(function (err) {return [err];});
}

function shouldPromise(name) {
  if (
  isContextApi(name) ||
  isSyncApi(name) ||
  isCallbackApi(name))
  {
    return false;
  }
  return true;
}

/* eslint-disable no-extend-native */
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(
    function (value) {return promise.resolve(callback()).then(function () {return value;});},
    function (reason) {return promise.resolve(callback()).then(function () {
        throw reason;
      });});

  };
}

function promisify(name, api) {
  if (!shouldPromise(name)) {
    return api;
  }
  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject })].concat(
      params));
    })));
  };
}

var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;

function checkDeviceWidth() {var _wx$getSystemInfoSync =




  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}

function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }

  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}

var interceptors = {
  promiseInterceptor: promiseInterceptor };


var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor,
  interceptors: interceptors });


function findExistsPageIndex(url) {
  var pages = getCurrentPages();
  var len = pages.length;
  while (len--) {
    var page = pages[len];
    if (page.$page && page.$page.fullPath === url) {
      return len;
    }
  }
  return -1;
}

var redirectTo = {
  name: function name(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.delta) {
      return 'navigateBack';
    }
    return 'redirectTo';
  },
  args: function args(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.url) {
      var existsPageIndex = findExistsPageIndex(fromArgs.url);
      if (existsPageIndex !== -1) {
        var delta = getCurrentPages().length - 1 - existsPageIndex;
        if (delta > 0) {
          fromArgs.delta = delta;
        }
      }
    }
  } };


var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(
      function (item, index) {return index < currentIndex ? item !== urls[currentIndex] : true;});

    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false };

  } };


// import navigateTo from 'uni-helpers/navigate-to'

function addSafeAreaInsets(result) {
  if (result.safeArea) {
    var safeArea = result.safeArea;
    result.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: result.windowWidth - safeArea.right,
      bottom: result.windowHeight - safeArea.bottom };

  }
}
var protocols = {
  redirectTo: redirectTo,
  // navigateTo,  // 由于在微信开发者工具的页面参数，会显示__id__参数，因此暂时关闭mp-weixin对于navigateTo的AOP
  previewImage: previewImage,
  getSystemInfo: {
    returnValue: addSafeAreaInsets },

  getSystemInfoSync: {
    returnValue: addSafeAreaInsets } };


var todos = [
'vibrate',
'preloadPage',
'unPreloadPage',
'loadSubPackage'];

var canIUses = [];

var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];

function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}

function processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {// 不支持的参数
          console.warn("\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F ".concat(methodName, "\u6682\u4E0D\u652F\u6301").concat(key));
        } else if (isStr(keyOption)) {// 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        if (isFn(fromArgs[key])) {
          toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
        }
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}

function processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {// 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}

function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {// 暂不支持的 api
      return function () {
        console.error("\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F \u6682\u4E0D\u652F\u6301".concat(methodName));
      };
    }
    return function (arg1, arg2) {// 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }

      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);

      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      if (isFn(options.name)) {
        methodName = options.name(arg1);
      } else if (isStr(options.name)) {
        methodName = options.name;
      }
      var returnValue = wx[methodName].apply(wx, args);
      if (isSyncApi(methodName)) {// 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}

var todoApis = Object.create(null);

var TODOS = [
'onTabBarMidButtonTap',
'subscribePush',
'unsubscribePush',
'onPush',
'offPush',
'share'];


function createTodoApi(name) {
  return function todoApi(_ref)


  {var fail = _ref.fail,complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail:\u6682\u4E0D\u652F\u6301 ").concat(name, " \u65B9\u6CD5") };

    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}

TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});

var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin'] };


function getProvider(_ref2)




{var service = _ref2.service,success = _ref2.success,fail = _ref2.fail,complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service] };

    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail:服务[' + service + ']不存在' };

    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}

var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider });


var getEmitter = function () {
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();

function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}

function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}

var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit });


var api = /*#__PURE__*/Object.freeze({
  __proto__: null });


var MPPage = Page;
var MPComponent = Component;

var customizeRE = /:/g;

var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});

function initTriggerEvent(mpInstance) {
  {
    if (!wx.canIUse('nextTick')) {
      return;
    }
  }
  var oldTriggerEvent = mpInstance.triggerEvent;
  mpInstance.triggerEvent = function (event) {for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {args[_key3 - 1] = arguments[_key3];}
    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));
  };
}

function initHook(name, options) {
  var oldHook = options[name];
  if (!oldHook) {
    options[name] = function () {
      initTriggerEvent(this);
    };
  } else {
    options[name] = function () {
      initTriggerEvent(this);for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}
      return oldHook.apply(this, args);
    };
  }
}

Page = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  initHook('onLoad', options);
  return MPPage(options);
};

Component = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  initHook('created', options);
  return MPComponent(options);
};

var PAGE_EVENT_HOOKS = [
'onPullDownRefresh',
'onReachBottom',
'onAddToFavorites',
'onShareTimeline',
'onShareAppMessage',
'onPageScroll',
'onResize',
'onTabItemTap'];


function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}

function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }

  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }

  vueOptions = vueOptions.default || vueOptions;

  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super &&
    vueOptions.super.options &&
    Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }

  if (isFn(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});
  }
}

function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}

function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  vueOptions = VueComponent.options;
  return [VueComponent, vueOptions];
}

function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}

function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;

  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}

function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};

  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"NODE_ENV":"development","VUE_APP_NAME":"68_yibeitong","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }

  if (!isPlainObject(data)) {
    data = {};
  }

  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });

  return data;
}

var PROP_TYPES = [String, Number, Boolean, Object, Array, null];

function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions.behaviors;
  var vueExtends = vueOptions.extends;
  var vueMixins = vueOptions.mixins;

  var vueProps = vueOptions.props;

  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }

  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps.name = {
            type: String,
            default: '' };

          vueProps.value = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: '' };

        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(
    initBehavior({
      properties: initProperties(vueExtends.props, true) }));


  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(
        initBehavior({
          properties: initProperties(vueMixin.props, true) }));


      }
    });
  }
  return behaviors;
}

function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}

function initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: '' };

    // 用于字节跳动小程序模拟抽象节点
    properties.generic = {
      type: Object,
      value: null };

    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots });

      } };

  }
  if (Array.isArray(props)) {// ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key) };

    });
  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {// title:{type:String,default:''}
        var value = opts.default;
        if (isFn(value)) {
          value = value();
        }

        opts.type = parsePropType(key, opts.type);

        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key) };

      } else {// content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key) };

      }
    });
  }
  return properties;
}

function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}

  event.stopPropagation = noop;
  event.preventDefault = noop;

  event.target = event.target || {};

  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }

  if (hasOwn(event, 'markerId')) {
    event.detail = typeof event.detail === 'object' ? event.detail : {};
    event.detail.markerId = event.markerId;
  }

  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }

  return event;
}

function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];

      var vFor;
      if (Number.isInteger(dataPath)) {
        vFor = dataPath;
      } else if (!dataPath) {
        vFor = context;
      } else if (typeof dataPath === 'string' && dataPath) {
        if (dataPath.indexOf('#s#') === 0) {
          vFor = dataPath.substr(3);
        } else {
          vFor = vm.__get_value(dataPath, context);
        }
      }

      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }

      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}

function processEventExtra(vm, extra, event) {
  var extraObj = {};

  if (Array.isArray(extra) && extra.length) {
    /**
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *'test'
                                              */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {// model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {// $event
            extraObj['$' + index] = event;
          } else if (dataPath === 'arguments') {
            if (event.detail && event.detail.__args__) {
              extraObj['$' + index] = event.detail.__args__;
            } else {
              extraObj['$' + index] = [event];
            }
          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }

  return extraObj;
}

function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}

function processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象
  if (isCustom) {// 自定义事件
    isCustomMPEvent = event.currentTarget &&
    event.currentTarget.dataset &&
    event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {// 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return event.detail.__args__ || event.detail;
    }
  }

  var extraObj = processEventExtra(vm, extra, event);

  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {// input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(event.detail.__args__[0]);
        } else {// wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });

  return ret;
}

var ONCE = '~';
var CUSTOM = '^';

function isMatchEventType(eventType, optType) {
  return eventType === optType ||

  optType === 'regionchange' && (

  eventType === 'begin' ||
  eventType === 'end');


}

function getContextVm(vm) {
  var $parent = vm.$parent;
  // 父组件是 scoped slots 或者其他自定义组件时继续查找
  while ($parent && $parent.$parent && ($parent.$options.generic || $parent.$parent.$options.generic || $parent.$scope._$vuePid)) {
    $parent = $parent.$parent;
  }
  return $parent && $parent.$parent;
}

function handleEvent(event) {var _this = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn('事件信息不存在');
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn('事件信息不存在');
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;

  var ret = [];

  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];

    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;

    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this.$vm;
          if (handlerCtx.$options.generic) {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = getContextVm(handlerCtx) || handlerCtx;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx,
            processEventArgs(
            _this.$vm,
            event,
            eventArray[1],
            eventArray[2],
            isCustom,
            methodName));

            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            throw new Error(" _vm.".concat(methodName, " is not a function"));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          var params = processEventArgs(
          _this.$vm,
          event,
          eventArray[1],
          eventArray[2],
          isCustom,
          methodName);

          // 参数尾部增加原始事件对象用于复杂表达式内获取额外数据
          // eslint-disable-next-line no-sparse-arrays
          ret.push(handler.apply(handlerCtx, (Array.isArray(params) ? params : []).concat([,,,,,,,,,, event])));
        }
      });
    }
  });

  if (
  eventType === 'input' &&
  ret.length === 1 &&
  typeof ret[0] !== 'undefined')
  {
    return ret[0];
  }
}

var hooks = [
'onShow',
'onHide',
'onError',
'onPageNotFound',
'onThemeChange',
'onUnhandledRejection'];


function parseBaseApp(vm, _ref3)


{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }

  _vue.default.prototype.mpHost = "mp-weixin";

  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }

      this.mpType = this.$options.mpType;

      this.$mp = _defineProperty({
        data: {} },
      this.mpType, this.$options.mpInstance);


      this.$scope = this.$options.mpInstance;

      delete this.$options.mpType;
      delete this.$options.mpInstance;

      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    } });


  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (!wx.canIUse('nextTick')) {// 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }

      this.$vm = vm;

      this.$vm.$mp = {
        app: this };


      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;

      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);

      this.$vm.__call_hook('onLaunch', args);
    } };


  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }

  initHooks(appOptions, hooks);

  return appOptions;
}

var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];

function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}

function initBehavior(options) {
  return Behavior(options);
}

function isPage() {
  return !!this.route;
}

function initRelation(detail) {
  this.triggerEvent('__l', detail);
}

function selectAllComponents(mpInstance, selector, $refs) {
  var components = mpInstance.selectAllComponents(selector);
  components.forEach(function (component) {
    var ref = component.dataset.ref;
    $refs[ref] = component.$vm || component;
    {
      if (component.dataset.vueGeneric === 'scoped') {
        component.selectAllComponents('.scoped-ref').forEach(function (scopedComponent) {
          selectAllComponents(scopedComponent, selector, $refs);
        });
      }
    }
  });
}

function initRefs(vm) {
  var mpInstance = vm.$scope;
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      selectAllComponents(mpInstance, '.vue-ref', $refs);
      // TODO 暂不考虑 for 中的 scoped
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || component);
      });
      return $refs;
    } });

}

function handleLink(event) {var _ref4 =



  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;

  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }

  if (!parentVm) {
    parentVm = this.$vm;
  }

  vueOptions.parent = parentVm;
}

function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs });

}

var eventChannels = {};

var eventChannelStack = [];

function getEventChannel(id) {
  if (id) {
    var eventChannel = eventChannels[id];
    delete eventChannels[id];
    return eventChannel;
  }
  return eventChannelStack.shift();
}

function createApp(vm) {
  _vue.default.prototype.getOpenerEventChannel = function () {
    // 微信小程序使用自身getOpenerEventChannel
    {
      return this.$scope.getOpenerEventChannel();
    }
  };
  var callHook = _vue.default.prototype.__call_hook;
  _vue.default.prototype.__call_hook = function (hook, args) {
    if (hook === 'onLoad' && args && args.__id__) {
      this.__eventChannel__ = getEventChannel(args.__id__);
      delete args.__id__;
    }
    return callHook.call(this, hook, args);
  };
  App(parseApp(vm));
  return vm;
}

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function encodeReserveReplacer(c) {return '%' + c.charCodeAt(0).toString(16);};
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function encode(str) {return encodeURIComponent(str).
  replace(encodeReserveRE, encodeReserveReplacer).
  replace(commaRE, ',');};

function stringifyQuery(obj) {var encodeStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : encode;
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];

    if (val === undefined) {
      return '';
    }

    if (val === null) {
      return encodeStr(key);
    }

    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return;
        }
        if (val2 === null) {
          result.push(encodeStr(key));
        } else {
          result.push(encodeStr(key) + '=' + encodeStr(val2));
        }
      });
      return result.join('&');
    }

    return encodeStr(key) + '=' + encodeStr(val);
  }).filter(function (x) {return x.length > 0;}).join('&') : null;
  return res ? "?".concat(res) : '';
}

function parseBaseComponent(vueComponentOptions)


{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =
  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];

  var options = _objectSpread({
    multipleSlots: true,
    addGlobalClass: true },
  vueOptions.options || {});


  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin'].options) {
      Object.assign(options, vueOptions['mp-weixin'].options);
    }
  }

  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;

        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties };


        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options });


        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm && this.$vm.$destroy();
      } },

    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      } },

    methods: {
      __l: handleLink,
      __e: handleEvent } };


  // externalClasses
  if (vueOptions.externalClasses) {
    componentOptions.externalClasses = vueOptions.externalClasses;
  }

  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }

  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}

function parseComponent(vueComponentOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

var hooks$1 = [
'onShow',
'onHide',
'onUnload'];


hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);

function parseBasePage(vuePageOptions, _ref6)


{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;
  var pageOptions = parseComponent(vuePageOptions);

  initHooks(pageOptions.methods, hooks$1, vuePageOptions);

  pageOptions.methods.onLoad = function (query) {
    this.options = query;
    var copyQuery = Object.assign({}, query);
    delete copyQuery.__id__;
    this.$page = {
      fullPath: '/' + (this.route || this.is) + stringifyQuery(copyQuery) };

    this.$vm.$mp.query = query; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', query);
  };

  return pageOptions;
}

function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}

function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}

todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});

canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :
  canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});

var uni = {};

if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (hasOwn(target, name)) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {
        return;
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    } });

} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });

  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
  }

  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });

  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });

  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}

wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;

var uni$1 = uni;var _default =

uni$1;exports.default = _default;

/***/ }),

/***/ 10:
/*!********************************************!*\
  !*** ./node_modules/vuex/dist/vuex.esm.js ***!
  \********************************************/
/*! exports provided: default, Store, createNamespacedHelpers, install, mapActions, mapGetters, mapMutations, mapState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Store", function() { return Store; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNamespacedHelpers", function() { return createNamespacedHelpers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "install", function() { return install; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapActions", function() { return mapActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapGetters", function() { return mapGetters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapMutations", function() { return mapMutations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapState", function() { return mapState; });
/*!
 * vuex v3.4.0
 * (c) 2020 Evan You
 * @license MIT
 */
function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  }, { prepend: true });

  store.subscribeAction(function (action, state) {
    devtoolHook.emit('vuex:action', action, state);
  }, { prepend: true });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.hasChild = function hasChild (key) {
  return key in this._children
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if ((true)) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (!parent.getChild(key).runtime) { return }

  parent.removeChild(key);
};

ModuleCollection.prototype.isRegistered = function isRegistered (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];

  return parent.hasChild(key)
};

function update (path, targetModule, newModule) {
  if ((true)) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if ((true)) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if ((true)) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();
  this._makeLocalGettersCache = Object.create(null);

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if ((true)) {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });

  this._subscribers
    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
    .forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    ( true) &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  try {
    this._actionSubscribers
      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if ((true)) {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e);
    }
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return new Promise(function (resolve, reject) {
    result.then(function (res) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.after; })
          .forEach(function (sub) { return sub.after(action, this$1.state); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in after action subscribers: ");
          console.error(e);
        }
      }
      resolve(res);
    }, function (error) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.error; })
          .forEach(function (sub) { return sub.error(action, this$1.state, error); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in error action subscribers: ");
          console.error(e);
        }
      }
      reject(error);
    });
  })
};

Store.prototype.subscribe = function subscribe (fn, options) {
  return genericSubscribe(fn, this._subscribers, options)
};

Store.prototype.subscribeAction = function subscribeAction (fn, options) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers, options)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if ((true)) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hasModule = function hasModule (path) {
  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  return this._modules.isRegistered(path)
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs, options) {
  if (subs.indexOf(fn) < 0) {
    options && options.prepend
      ? subs.unshift(fn)
      : subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  // reset local getters cache
  store._makeLocalGettersCache = Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure environment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    if (store._modulesNamespaceMap[namespace] && ("development" !== 'production')) {
      console.error(("[vuex] duplicate namespace " + namespace + " for the namespaced module " + (path.join('/'))));
    }
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      if ((true)) {
        if (moduleName in parentState) {
          console.warn(
            ("[vuex] state field \"" + moduleName + "\" was overridden by a module with the same name at \"" + (path.join('.')) + "\"")
          );
        }
      }
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function (type) {
      // skip if the target getter is not match this namespace
      if (type.slice(0, splitPos) !== namespace) { return }

      // extract local getter type
      var localType = type.slice(splitPos);

      // Add a port to the getters proxy.
      // Define as getter property because
      // we do not want to evaluate the getters in this time.
      Object.defineProperty(gettersProxy, localType, {
        get: function () { return store.getters[type]; },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }

  return store._makeLocalGettersCache[namespace]
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if ((true)) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if ((true)) {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.reduce(function (state, key) { return state[key]; }, state)
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if ((true)) {
    assert(typeof type === 'string', ("expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if ((true)) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  if (( true) && !isValidMap(states)) {
    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept anthor params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  if (( true) && !isValidMap(mutations)) {
    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  if (( true) && !isValidMap(getters)) {
    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (( true) && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  if (( true) && !isValidMap(actions)) {
    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  if (!isValidMap(map)) {
    return []
  }
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Validate whether given map is valid or not
 * @param {*} map
 * @return {Boolean}
 */
function isValidMap (map) {
  return Array.isArray(map) || isObject(map)
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (( true) && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

var index = {
  Store: Store,
  install: install,
  version: '3.4.0',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers
};

/* harmony default export */ __webpack_exports__["default"] = (index);


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 11:
/*!****************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/common/event.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var listener = new Map();
var fire_event = {
  on: function on(page, type, callBack) {
    if (!listener.hasOwnProperty(page)) {
      listener[page] = new Map();
    }
    //if(!listener[page].hasOwnProperty(type)){
    listener[page][type] = callBack;
    //}
    return fire_event;
  },
  trigger: function trigger(options) {
    var myObj = {
      type: options.type,
      page: options.page || 'all' };

    //debugger;
    if (myObj.page == 'all') {
      for (var key in listener) {
        if (listener[key][myObj.type]) {
          var ret = listener[key][myObj.type].call(this, options);
          if (options.success) {ret ? options.success(ret) : options.success();}
        }
      }
    } else {
      if (listener.hasOwnProperty(myObj.page)) {
        if (listener[myObj.page][myObj.type]) {
          var ret = listener[myObj.page][myObj.type].call(this, options);
          if (options.success) {ret ? options.success(ret) : options.success();}
        }
      }
    }
  },
  remove: function remove(page, type) {
    if (page) {
      if (type) {
        delete listener[page][type];
      } else {
        delete listener[page];
      }
    }
  } };



module.exports = fire_event;

/***/ }),

/***/ 14:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 15:
/*!**********************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/node_modules/tim-wx-sdk/tim-wx.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {!function (e, t) { true ? module.exports = t() : undefined;}(this, function () {var e = { SDK_READY: "sdkStateReady", SDK_NOT_READY: "sdkStateNotReady", SDK_DESTROY: "sdkDestroy", MESSAGE_RECEIVED: "onMessageReceived", MESSAGE_REVOKED: "onMessageRevoked", MESSAGE_READ_BY_PEER: "onMessageReadByPeer", CONVERSATION_LIST_UPDATED: "onConversationListUpdated", GROUP_LIST_UPDATED: "onGroupListUpdated", GROUP_SYSTEM_NOTICE_RECEIVED: "receiveGroupSystemNotice", PROFILE_UPDATED: "onProfileUpdated", BLACKLIST_UPDATED: "blacklistUpdated", KICKED_OUT: "kickedOut", ERROR: "error", NET_STATE_CHANGE: "netStateChange" },t = { MSG_TEXT: "TIMTextElem", MSG_IMAGE: "TIMImageElem", MSG_SOUND: "TIMSoundElem", MSG_AUDIO: "TIMSoundElem", MSG_FILE: "TIMFileElem", MSG_FACE: "TIMFaceElem", MSG_VIDEO: "TIMVideoFileElem", MSG_GEO: "TIMLocationElem", MSG_GRP_TIP: "TIMGroupTipElem", MSG_GRP_SYS_NOTICE: "TIMGroupSystemNoticeElem", MSG_CUSTOM: "TIMCustomElem", MSG_PRIORITY_HIGH: "High", MSG_PRIORITY_NORMAL: "Normal", MSG_PRIORITY_LOW: "Low", MSG_PRIORITY_LOWEST: "Lowest", CONV_C2C: "C2C", CONV_GROUP: "GROUP", CONV_SYSTEM: "@TIM#SYSTEM", GRP_PRIVATE: "Private", GRP_WORK: "Private", GRP_PUBLIC: "Public", GRP_CHATROOM: "ChatRoom", GRP_MEETING: "ChatRoom", GRP_AVCHATROOM: "AVChatRoom", GRP_MBR_ROLE_OWNER: "Owner", GRP_MBR_ROLE_ADMIN: "Admin", GRP_MBR_ROLE_MEMBER: "Member", GRP_TIP_MBR_JOIN: 1, GRP_TIP_MBR_QUIT: 2, GRP_TIP_MBR_KICKED_OUT: 3, GRP_TIP_MBR_SET_ADMIN: 4, GRP_TIP_MBR_CANCELED_ADMIN: 5, GRP_TIP_GRP_PROFILE_UPDATED: 6, GRP_TIP_MBR_PROFILE_UPDATED: 7, MSG_REMIND_ACPT_AND_NOTE: "AcceptAndNotify", MSG_REMIND_ACPT_NOT_NOTE: "AcceptNotNotify", MSG_REMIND_DISCARD: "Discard", GENDER_UNKNOWN: "Gender_Type_Unknown", GENDER_FEMALE: "Gender_Type_Female", GENDER_MALE: "Gender_Type_Male", KICKED_OUT_MULT_ACCOUNT: "multipleAccount", KICKED_OUT_MULT_DEVICE: "multipleDevice", KICKED_OUT_USERSIG_EXPIRED: "userSigExpired", ALLOW_TYPE_ALLOW_ANY: "AllowType_Type_AllowAny", ALLOW_TYPE_NEED_CONFIRM: "AllowType_Type_NeedConfirm", ALLOW_TYPE_DENY_ANY: "AllowType_Type_DenyAny", FORBID_TYPE_NONE: "AdminForbid_Type_None", FORBID_TYPE_SEND_OUT: "AdminForbid_Type_SendOut", JOIN_OPTIONS_FREE_ACCESS: "FreeAccess", JOIN_OPTIONS_NEED_PERMISSION: "NeedPermission", JOIN_OPTIONS_DISABLE_APPLY: "DisableApply", JOIN_STATUS_SUCCESS: "JoinedSuccess", JOIN_STATUS_ALREADY_IN_GROUP: "AlreadyInGroup", JOIN_STATUS_WAIT_APPROVAL: "WaitAdminApproval", GRP_PROFILE_OWNER_ID: "ownerID", GRP_PROFILE_CREATE_TIME: "createTime", GRP_PROFILE_LAST_INFO_TIME: "lastInfoTime", GRP_PROFILE_MEMBER_NUM: "memberNum", GRP_PROFILE_MAX_MEMBER_NUM: "maxMemberNum", GRP_PROFILE_JOIN_OPTION: "joinOption", GRP_PROFILE_INTRODUCTION: "introduction", GRP_PROFILE_NOTIFICATION: "notification", GRP_PROFILE_MUTE_ALL_MBRS: "muteAllMembers", NET_STATE_CONNECTED: "connected", NET_STATE_CONNECTING: "connecting", NET_STATE_DISCONNECTED: "disconnected" };function n(e) {return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {return typeof e;} : function (e) {return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;})(e);}function r(e, t) {if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");}function o(e, t) {for (var n = 0; n < t.length; n++) {var r = t[n];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);}}function i(e, t, n) {return t && o(e.prototype, t), n && o(e, n), e;}function s(e, t, n) {return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;}function a(e, t) {var n = Object.keys(e);if (Object.getOwnPropertySymbols) {var r = Object.getOwnPropertySymbols(e);t && (r = r.filter(function (t) {return Object.getOwnPropertyDescriptor(e, t).enumerable;})), n.push.apply(n, r);}return n;}function u(e) {for (var t = 1; t < arguments.length; t++) {var n = null != arguments[t] ? arguments[t] : {};t % 2 ? a(Object(n), !0).forEach(function (t) {s(e, t, n[t]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : a(Object(n)).forEach(function (t) {Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));});}return e;}function c(e, t) {if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), t && p(e, t);}function l(e) {return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {return e.__proto__ || Object.getPrototypeOf(e);})(e);}function p(e, t) {return (p = Object.setPrototypeOf || function (e, t) {return e.__proto__ = t, e;})(e, t);}function h() {if ("undefined" == typeof Reflect || !Reflect.construct) return !1;if (Reflect.construct.sham) return !1;if ("function" == typeof Proxy) return !0;try {return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;} catch (e) {return !1;}}function d(e, t, n) {return (d = h() ? Reflect.construct : function (e, t, n) {var r = [null];r.push.apply(r, t);var o = new (Function.bind.apply(e, r))();return n && p(o, n.prototype), o;}).apply(null, arguments);}function f(e) {var t = "function" == typeof Map ? new Map() : void 0;return (f = function f(e) {if (null === e || (n = e, -1 === Function.toString.call(n).indexOf("[native code]"))) return e;var n;if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");if (void 0 !== t) {if (t.has(e)) return t.get(e);t.set(e, r);}function r() {return d(e, arguments, l(this).constructor);}return r.prototype = Object.create(e.prototype, { constructor: { value: r, enumerable: !1, writable: !0, configurable: !0 } }), p(r, e);})(e);}function g(e) {if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;}function m(e, t) {return !t || "object" != typeof t && "function" != typeof t ? g(e) : t;}function _(e) {return function () {var t,n = l(e);if (h()) {var r = l(this).constructor;t = Reflect.construct(n, arguments, r);} else t = n.apply(this, arguments);return m(this, t);};}function y(e, t) {return function (e) {if (Array.isArray(e)) return e;}(e) || function (e, t) {if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e))) return;var n = [],r = !0,o = !1,i = void 0;try {for (var s, a = e[Symbol.iterator](); !(r = (s = a.next()).done) && (n.push(s.value), !t || n.length !== t); r = !0) {;}} catch (u) {o = !0, i = u;} finally {try {r || null == a.return || a.return();} finally {if (o) throw i;}}return n;}(e, t) || I(e, t) || function () {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}();}function v(e) {return function (e) {if (Array.isArray(e)) return M(e);}(e) || function (e) {if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);}(e) || I(e) || function () {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}();}function I(e, t) {if (e) {if ("string" == typeof e) return M(e, t);var n = Object.prototype.toString.call(e).slice(8, -1);return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? M(e, t) : void 0;}}function M(e, t) {(null == t || t > e.length) && (t = e.length);for (var n = 0, r = new Array(t); n < t; n++) {r[n] = e[n];}return r;}function C(e) {if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {if (Array.isArray(e) || (e = I(e))) {var t = 0,n = function n() {};return { s: n, n: function n() {return t >= e.length ? { done: !0 } : { done: !1, value: e[t++] };}, e: function e(_e2) {throw _e2;}, f: n };}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var r,o,i = !0,s = !1;return { s: function s() {r = e[Symbol.iterator]();}, n: function n() {var e = r.next();return i = e.done, e;}, e: function e(_e3) {s = !0, o = _e3;}, f: function f() {try {i || null == r.return || r.return();} finally {if (s) throw o;}} };}var E = function () {function e() {r(this, e), this.cache = [], this.options = null;}return i(e, [{ key: "use", value: function value(e) {if ("function" != typeof e) throw "middleware must be a function";return this.cache.push(e), this;} }, { key: "next", value: function value(e) {if (this.middlewares && this.middlewares.length > 0) return this.middlewares.shift().call(this, this.options, this.next.bind(this));} }, { key: "run", value: function value(e) {return this.middlewares = this.cache.map(function (e) {return e;}), this.options = e, this.next();} }]), e;}(),S = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};function T(e, t) {return e(t = { exports: {} }, t.exports), t.exports;}var D,A,k,R = T(function (e, t) {var n, r, o, i, s, a, u, c, l, p, h, d, f, g, m, _, y, v;e.exports = (n = "function" == typeof Promise, r = "object" == typeof self ? self : S, o = "undefined" != typeof Symbol, i = "undefined" != typeof Map, s = "undefined" != typeof Set, a = "undefined" != typeof WeakMap, u = "undefined" != typeof WeakSet, c = "undefined" != typeof DataView, l = o && void 0 !== Symbol.iterator, p = o && void 0 !== Symbol.toStringTag, h = s && "function" == typeof Set.prototype.entries, d = i && "function" == typeof Map.prototype.entries, f = h && Object.getPrototypeOf(new Set().entries()), g = d && Object.getPrototypeOf(new Map().entries()), m = l && "function" == typeof Array.prototype[Symbol.iterator], _ = m && Object.getPrototypeOf([][Symbol.iterator]()), y = l && "function" == typeof String.prototype[Symbol.iterator], v = y && Object.getPrototypeOf(""[Symbol.iterator]()), function (e) {var t = typeof e;if ("object" !== t) return t;if (null === e) return "null";if (e === r) return "global";if (Array.isArray(e) && (!1 === p || !(Symbol.toStringTag in e))) return "Array";if ("object" == typeof window && null !== window) {if ("object" == typeof window.location && e === window.location) return "Location";if ("object" == typeof window.document && e === window.document) return "Document";if ("object" == typeof window.navigator) {if ("object" == typeof window.navigator.mimeTypes && e === window.navigator.mimeTypes) return "MimeTypeArray";if ("object" == typeof window.navigator.plugins && e === window.navigator.plugins) return "PluginArray";}if (("function" == typeof window.HTMLElement || "object" == typeof window.HTMLElement) && e instanceof window.HTMLElement) {if ("BLOCKQUOTE" === e.tagName) return "HTMLQuoteElement";if ("TD" === e.tagName) return "HTMLTableDataCellElement";if ("TH" === e.tagName) return "HTMLTableHeaderCellElement";}}var o = p && e[Symbol.toStringTag];if ("string" == typeof o) return o;var l = Object.getPrototypeOf(e);return l === RegExp.prototype ? "RegExp" : l === Date.prototype ? "Date" : n && l === Promise.prototype ? "Promise" : s && l === Set.prototype ? "Set" : i && l === Map.prototype ? "Map" : u && l === WeakSet.prototype ? "WeakSet" : a && l === WeakMap.prototype ? "WeakMap" : c && l === DataView.prototype ? "DataView" : i && l === g ? "Map Iterator" : s && l === f ? "Set Iterator" : m && l === _ ? "Array Iterator" : y && l === v ? "String Iterator" : null === l ? "Object" : Object.prototype.toString.call(e).slice(8, -1);});}),O = "undefined" != typeof window,N = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync,L = O && window.navigator && window.navigator.userAgent || "",w = /AppleWebKit\/([\d.]+)/i.exec(L),P = (w && parseFloat(w.pop()), /iPad/i.test(L)),G = (/iPhone/i.test(L), /iPod/i.test(L), (D = L.match(/OS (\d+)_/i)) && D[1] && D[1], /Android/i.test(L)),b = function () {var e = L.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);if (!e) return null;var t = e[1] && parseFloat(e[1]),n = e[2] && parseFloat(e[2]);return t && n ? parseFloat(e[1] + "." + e[2]) : t || null;}(),U = (G && /webkit/i.test(L), /Firefox/i.test(L), /Edge/i.test(L)),q = !U && /Chrome/i.test(L),x = (function () {var e = L.match(/Chrome\/(\d+)/);e && e[1] && parseFloat(e[1]);}(), /MSIE/.test(L)),F = (/MSIE\s8\.0/.test(L), function () {var e = /MSIE\s(\d+)\.\d/.exec(L),t = e && parseFloat(e[1]);return !t && /Trident\/7.0/i.test(L) && /rv:11.0/.test(L) && (t = 11), t;}()),V = (/Safari/i.test(L), /TBS\/\d+/i.test(L)),K = (function () {var e = L.match(/TBS\/(\d+)/i);if (e && e[1]) e[1];}(), !V && /MQQBrowser\/\d+/i.test(L), !V && / QQBrowser\/\d+/i.test(L), /(micromessenger|webbrowser)/i.test(L)),B = (/Windows/i.test(L), /MAC OS X/i.test(L), /MicroMessenger/i.test(L), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});A = "undefined" != typeof console ? console : void 0 !== B && B.console ? B.console : "undefined" != typeof window && window.console ? window.console : {};for (var H = function H() {}, j = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"], Y = j.length; Y--;) {k = j[Y], console[k] || (A[k] = H);}A.methods = j;var $ = A,W = 0,z = new Map();function X() {var e = new Date();return "TIM " + e.toLocaleTimeString("en-US", { hour12: !1 }) + "." + function (e) {var t;switch (e.toString().length) {case 1:t = "00" + e;break;case 2:t = "0" + e;break;default:t = e;}return t;}(e.getMilliseconds()) + ":";}var J = { _data: [], _length: 0, _visible: !1, arguments2String: function arguments2String(e) {var t;if (1 === e.length) t = X() + e[0];else {t = X();for (var n = 0, r = e.length; n < r; n++) {ie(e[n]) ? ae(e[n]) ? t += de(e[n]) : t += JSON.stringify(e[n]) : t += e[n], t += " ";}}return t;}, debug: function debug() {if (W <= -1) {var e = this.arguments2String(arguments);J.record(e, "debug"), $.debug(e);}}, log: function log() {if (W <= 0) {var e = this.arguments2String(arguments);J.record(e, "log"), $.log(e);}}, info: function info() {if (W <= 1) {var e = this.arguments2String(arguments);J.record(e, "info"), $.info(e);}}, warn: function warn() {if (W <= 2) {var e = this.arguments2String(arguments);J.record(e, "warn"), $.warn(e);}}, error: function error() {if (W <= 3) {var e = this.arguments2String(arguments);J.record(e, "error"), $.error(e);}}, time: function time(e) {z.set(e, pe.now());}, timeEnd: function timeEnd(e) {if (z.has(e)) {var t = pe.now() - z.get(e);return z.delete(e), t;}return $.warn("未找到对应label: ".concat(e, ", 请在调用 logger.timeEnd 前，调用 logger.time")), 0;}, setLevel: function setLevel(e) {e < 4 && $.log(X() + "set level from " + W + " to " + e), W = e;}, record: function record(e, t) {1100 === J._length && (J._data.splice(0, 100), J._length = 1e3), J._length++, J._data.push("".concat(e, " [").concat(t, "] \n"));}, getLog: function getLog() {return J._data;} },Q = function Q(e) {return "file" === ue(e);},Z = function Z(e) {return null !== e && ("number" == typeof e && !isNaN(e - 0) || "object" === n(e) && e.constructor === Number);},ee = function ee(e) {return "string" == typeof e;},te = function te(e) {return null !== e && "object" === n(e);},ne = function ne(e) {if ("object" !== n(e) || null === e) return !1;var t = Object.getPrototypeOf(e);if (null === t) return !0;for (var r = t; null !== Object.getPrototypeOf(r);) {r = Object.getPrototypeOf(r);}return t === r;},re = function re(e) {return "function" == typeof Array.isArray ? Array.isArray(e) : "array" === ue(e);},oe = function oe(e) {return void 0 === e;},ie = function ie(e) {return re(e) || te(e);},se = function se(e) {return "function" == typeof e;},ae = function ae(e) {return e instanceof Error;},ue = function ue(e) {return Object.prototype.toString.call(e).match(/^\[object (.*)\]$/)[1].toLowerCase();},ce = function ce(e) {if ("string" != typeof e) return !1;var t = e[0];return !/[^a-zA-Z0-9]/.test(t);},le = 0;Date.now || (Date.now = function () {return new Date().getTime();});var pe = { now: function now() {0 === le && (le = Date.now() - 1);var e = Date.now() - le;return e > 4294967295 ? (le += 4294967295, Date.now() - le) : e;}, utc: function utc() {return Math.round(Date.now() / 1e3);} },he = function e(t, n, r, o) {if (!ie(t) || !ie(n)) return 0;for (var i, s = 0, a = Object.keys(n), u = 0, c = a.length; u < c; u++) {if (i = a[u], !(oe(n[i]) || r && r.includes(i))) if (ie(t[i]) && ie(n[i])) s += e(t[i], n[i], r, o);else {if (o && o.includes(n[i])) continue;t[i] !== n[i] && (t[i] = n[i], s += 1);}}return s;},de = function de(e) {return JSON.stringify(e, ["message", "code"]);},fe = function fe() {var e = new Date(),t = e.toISOString(),n = e.getTimezoneOffset() / 60,r = "";return r = n < 0 ? n > -10 ? "+0" + Math.abs(100 * n) : "+" + Math.abs(100 * n) : n >= 10 ? "-" + 100 * n : "-0" + 100 * n, t.replace("Z", r);},ge = function ge(e) {if (0 === e.length) return 0;for (var t = 0, n = 0, r = "undefined" != typeof document && void 0 !== document.characterSet ? document.characterSet : "UTF-8"; void 0 !== e[t];) {n += e[t++].charCodeAt[t] <= 255 ? 1 : !1 === r ? 3 : 2;}return n;},me = function me(e) {var t = e || 99999999;return Math.round(Math.random() * t);},_e = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",ye = _e.length,ve = function ve(e, t) {for (var n in e) {if (e[n] === t) return !0;}return !1;},Ie = {},Me = function Me() {if (N) return "https:";var e = window.location.protocol;return ["http:", "https:"].indexOf(e) < 0 && (e = "http:"), e;},Ce = function Ce(e) {return -1 === e.indexOf("http://") || -1 === e.indexOf("https://") ? "https://" + e : e.replace(/https|http/, "https");};function Ee(e, t) {re(e) && re(t) ? t.forEach(function (t) {var n = t.key,r = t.value,o = e.find(function (e) {return e.key === n;});o ? o.value = r : e.push({ key: n, value: r });}) : J.warn("updateCustomField target 或 source 不是数组，忽略此次更新。");}var Se = function Se(e) {return e === t.GRP_PUBLIC;},Te = function Te(e) {return e === t.GRP_MEETING;},De = function De(e) {return e === t.GRP_AVCHATROOM;},Ae = function Ae(e) {return ee(e) && e === t.CONV_SYSTEM;};function ke(e, t) {var n = {};return Object.keys(e).forEach(function (r) {n[r] = t(e[r], r);}), n;}var Re = Object.prototype.hasOwnProperty;function Oe(e) {if (null == e) return !0;if ("boolean" == typeof e) return !1;if ("number" == typeof e) return 0 === e;if ("string" == typeof e) return 0 === e.length;if ("function" == typeof e) return 0 === e.length;if (Array.isArray(e)) return 0 === e.length;if (e instanceof Error) return "" === e.message;if (ne(e)) {for (var t in e) {if (Re.call(e, t)) return !1;}return !0;}return !("map" !== ue(e) && !function (e) {return "set" === ue(e);}(e) && !Q(e)) && 0 === e.size;}function Ne(e, t, n) {if (void 0 === t) return !0;var r = !0;if ("object" === R(t).toLowerCase()) Object.keys(t).forEach(function (o) {var i = 1 === e.length ? e[0][o] : void 0;r = !!Le(i, t[o], n, o) && r;});else if ("array" === R(t).toLowerCase()) for (var o = 0; o < t.length; o++) {r = !!Le(e[o], t[o], n, t[o].name) && r;}if (r) return r;throw new Error("Params validate failed.");}function Le(e, t, n, r) {if (void 0 === t) return !0;var o = !0;return t.required && Oe(e) && ($.error("TIM [".concat(n, '] Missing required params: "').concat(r, '".')), o = !1), Oe(e) || R(e).toLowerCase() === t.type.toLowerCase() || ($.error("TIM [".concat(n, '] Invalid params: type check failed for "').concat(r, '".Expected ').concat(t.type, ".")), o = !1), t.validator && !t.validator(e) && ($.error("TIM [".concat(n, "] Invalid params: custom validator check failed for params.")), o = !1), o;}var we = { SUCCESS: "JoinedSuccess", WAIT_APPROVAL: "WaitAdminApproval" },Pe = { SUCCESS: 0 },Ge = { IS_LOGIN: 1, IS_NOT_LOGIN: 0 },be = { UNSEND: "unSend", SUCCESS: "success", FAIL: "fail" },Ue = { NOT_START: "notStart", PENDING: "pengding", RESOLVED: "resolved", REJECTED: "rejected" },qe = function () {function e(n) {r(this, e), this.type = t.MSG_TEXT, this.content = { text: n.text || "" };}return i(e, [{ key: "setText", value: function value(e) {this.content.text = e;} }, { key: "sendable", value: function value() {return 0 !== this.content.text.length;} }]), e;}(),xe = { JSON: { TYPE: { C2C: { NOTICE: 1, COMMON: 9, EVENT: 10 }, GROUP: { COMMON: 3, TIP: 4, SYSTEM: 5, TIP2: 6 }, FRIEND: { NOTICE: 7 }, PROFILE: { NOTICE: 8 } }, SUBTYPE: { C2C: { COMMON: 0, READED: 92, KICKEDOUT: 96 }, GROUP: { COMMON: 0, LOVEMESSAGE: 1, TIP: 2, REDPACKET: 3 } }, OPTIONS: { GROUP: { JOIN: 1, QUIT: 2, KICK: 3, SET_ADMIN: 4, CANCEL_ADMIN: 5, MODIFY_GROUP_INFO: 6, MODIFY_MEMBER_INFO: 7 } } }, PROTOBUF: {}, IMAGE_TYPES: { ORIGIN: 1, LARGE: 2, SMALL: 3 }, IMAGE_FORMAT: { JPG: 1, JPEG: 1, GIF: 2, PNG: 3, BMP: 4, UNKNOWN: 255 } },Fe = 1,Ve = 2,Ke = 3,Be = 4,He = 5,je = 7,Ye = 8,$e = 9,We = 10,ze = 15,Xe = 255,Je = 2,Qe = 0,Ze = 1,et = { NICK: "Tag_Profile_IM_Nick", GENDER: "Tag_Profile_IM_Gender", BIRTHDAY: "Tag_Profile_IM_BirthDay", LOCATION: "Tag_Profile_IM_Location", SELFSIGNATURE: "Tag_Profile_IM_SelfSignature", ALLOWTYPE: "Tag_Profile_IM_AllowType", LANGUAGE: "Tag_Profile_IM_Language", AVATAR: "Tag_Profile_IM_Image", MESSAGESETTINGS: "Tag_Profile_IM_MsgSettings", ADMINFORBIDTYPE: "Tag_Profile_IM_AdminForbidType", LEVEL: "Tag_Profile_IM_Level", ROLE: "Tag_Profile_IM_Role" },tt = { UNKNOWN: "Gender_Type_Unknown", FEMALE: "Gender_Type_Female", MALE: "Gender_Type_Male" },nt = { NONE: "AdminForbid_Type_None", SEND_OUT: "AdminForbid_Type_SendOut" },rt = { NEED_CONFIRM: "AllowType_Type_NeedConfirm", ALLOW_ANY: "AllowType_Type_AllowAny", DENY_ANY: "AllowType_Type_DenyAny" },ot = function () {function e(n) {r(this, e), this._imageMemoryURL = "", this._file = n.file, N ? this.createImageDataASURLInWXMiniApp(n.file) : this.createImageDataASURLInWeb(n.file), this._initImageInfoModel(), this.type = t.MSG_IMAGE, this._percent = 0, this.content = { imageFormat: xe.IMAGE_FORMAT[n.imageFormat] || xe.IMAGE_FORMAT.UNKNOWN, uuid: n.uuid, imageInfoArray: [] }, this.initImageInfoArray(n.imageInfoArray), this._defaultImage = "http://imgcache.qq.com/open/qcloud/video/act/webim-images/default.jpg", this._autoFixUrl();}return i(e, [{ key: "_initImageInfoModel", value: function value() {var e = this;this._ImageInfoModel = function (t) {this.instanceID = me(9999999), this.sizeType = t.type || 0, this.size = t.size || 0, this.width = t.width || 0, this.height = t.height || 0, this.imageUrl = t.url || "", this.url = t.url || e._imageMemoryURL || e._defaultImage;}, this._ImageInfoModel.prototype = { setSizeType: function setSizeType(e) {this.sizeType = e;}, setImageUrl: function setImageUrl(e) {e && (this.imageUrl = e);}, getImageUrl: function getImageUrl() {return this.imageUrl;} };} }, { key: "initImageInfoArray", value: function value(e) {for (var t = 2, n = null, r = null; t >= 0;) {r = void 0 === e || void 0 === e[t] ? { type: 0, size: 0, width: 0, height: 0, url: "" } : e[t], (n = new this._ImageInfoModel(r)).setSizeType(t + 1), this.addImageInfo(n), t--;}} }, { key: "updateImageInfoArray", value: function value(e) {for (var t, n = this.content.imageInfoArray.length, r = 0; r < n; r++) {t = this.content.imageInfoArray[r], e.size && (t.size = e.size), e.url && t.setImageUrl(e.url), e.width && (t.width = e.width), e.height && (t.height = e.height);}} }, { key: "_autoFixUrl", value: function value() {for (var e = this.content.imageInfoArray.length, t = "", n = "", r = ["http", "https"], o = null, i = 0; i < e; i++) {this.content.imageInfoArray[i].url && "" !== (o = this.content.imageInfoArray[i]).imageUrl && (n = o.imageUrl.slice(0, o.imageUrl.indexOf("://") + 1), t = o.imageUrl.slice(o.imageUrl.indexOf("://") + 1), r.indexOf(n) < 0 && (n = "https:"), this.content.imageInfoArray[i].setImageUrl([n, t].join("")));}} }, { key: "updatePercent", value: function value(e) {this._percent = e, this._percent > 1 && (this._percent = 1);} }, { key: "updateImageFormat", value: function value(e) {this.content.imageFormat = e;} }, { key: "createImageDataASURLInWeb", value: function value(e) {void 0 !== e && e.files.length > 0 && (this._imageMemoryURL = window.URL.createObjectURL(e.files[0]));} }, { key: "createImageDataASURLInWXMiniApp", value: function value(e) {e && e.url && (this._imageMemoryURL = e.url);} }, { key: "replaceImageInfo", value: function value(e, t) {this.content.imageInfoArray[t] instanceof this._ImageInfoModel || (this.content.imageInfoArray[t] = e);} }, { key: "addImageInfo", value: function value(e) {this.content.imageInfoArray.length >= 3 || this.content.imageInfoArray.push(e);} }, { key: "sendable", value: function value() {return 0 !== this.content.imageInfoArray.length && "" !== this.content.imageInfoArray[0].imageUrl && 0 !== this.content.imageInfoArray[0].size;} }]), e;}(),it = function () {function e(n) {r(this, e), this.type = t.MSG_FACE, this.content = n || null;}return i(e, [{ key: "sendable", value: function value() {return null !== this.content;} }]), e;}(),st = function () {function e(n) {r(this, e), this.type = t.MSG_AUDIO, this._percent = 0, this.content = { downloadFlag: 2, second: n.second, size: n.size, url: n.url, remoteAudioUrl: "", uuid: n.uuid };}return i(e, [{ key: "updatePercent", value: function value(e) {this._percent = e, this._percent > 1 && (this._percent = 1);} }, { key: "updateAudioUrl", value: function value(e) {this.content.remoteAudioUrl = e;} }, { key: "sendable", value: function value() {return "" !== this.content.remoteAudioUrl;} }]), e;}(),at = { from: !0, groupID: !0, groupName: !0, to: !0 },ut = function () {function e(n) {r(this, e), this.type = t.MSG_GRP_TIP, this.content = {}, this._initContent(n);}return i(e, [{ key: "_initContent", value: function value(e) {var t = this;Object.keys(e).forEach(function (n) {switch (n) {case "remarkInfo":break;case "groupProfile":t.content.groupProfile = {}, t._initGroupProfile(e[n]);break;case "operatorInfo":case "memberInfoList":break;case "msgMemberInfo":t.content.memberList = e[n], Object.defineProperty(t.content, "msgMemberInfo", { get: function get() {return J.warn("!!! 禁言的群提示消息中的 payload.msgMemberInfo 属性即将废弃，请使用 payload.memberList 属性替代。 \n", "msgMemberInfo 中的 shutupTime 属性对应更改为 memberList 中的 muteTime 属性，表示禁言时长。 \n", "参考：群提示消息 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/Message.html#.GroupTipPayload"), t.content.memberList.map(function (e) {return { userID: e.userID, shutupTime: e.muteTime };});} });break;default:t.content[n] = e[n];}}), this.content.userIDList || (this.content.userIDList = [this.content.operatorID]);} }, { key: "_initGroupProfile", value: function value(e) {for (var t = Object.keys(e), n = 0; n < t.length; n++) {var r = t[n];at[r] && (this.content.groupProfile[r] = e[r]);}} }]), e;}(),ct = { from: !0, groupID: !0, name: !0, to: !0 },lt = function () {function e(n) {r(this, e), this.type = t.MSG_GRP_SYS_NOTICE, this.content = {}, this._initContent(n);}return i(e, [{ key: "_initContent", value: function value(e) {var t = this;Object.keys(e).forEach(function (n) {switch (n) {case "memberInfoList":break;case "remarkInfo":t.content.handleMessage = e[n];break;case "groupProfile":t.content.groupProfile = {}, t._initGroupProfile(e[n]);break;default:t.content[n] = e[n];}});} }, { key: "_initGroupProfile", value: function value(e) {for (var t = Object.keys(e), n = 0; n < t.length; n++) {var r = t[n];ct[r] && (this.content.groupProfile[r] = e[r]);}} }]), e;}(),pt = { 70001: "UserSig 已过期，请重新生成。建议 UserSig 有效期设置不小于24小时。", 70002: "UserSig 长度为0，请检查传入的 UserSig 是否正确。", 70003: "UserSig 非法，请使用官网提供的 API 重新生成 UserSig(https://cloud.tencent.com/document/product/269/32688)。", 70005: "UserSig 非法，请使用官网提供的 API 重新生成 UserSig(https://cloud.tencent.com/document/product/269/32688)。", 70009: "UserSig 验证失败，可能因为生成 UserSig 时混用了其他 SDKAppID 的私钥或密钥导致，请使用对应 SDKAppID 下的私钥或密钥重新生成 UserSig(https://cloud.tencent.com/document/product/269/32688)。", 70013: "请求中的 UserID 与生成 UserSig 时使用的 UserID 不匹配，您可以在即时通信 IM 控制台的【开发辅助工具(https://console.cloud.tencent.com/im-detail/tool-usersig)】页面校验 UserSig。", 70014: "请求中的 SDKAppID 与生成 UserSig 时使用的 SDKAppID 不匹配，您可以在即时通信 IM 控制台的【开发辅助工具(https://console.cloud.tencent.com/im-detail/tool-usersig)】页面校验 UserSig。", 70016: "密钥不存在，UserSig 验证失败，请在即时通信 IM 控制台获取密钥(https://cloud.tencent.com/document/product/269/32578#.E8.8E.B7.E5.8F.96.E5.AF.86.E9.92.A5)。", 70020: "SDKAppID 未找到，请在即时通信 IM 控制台确认应用信息。", 70050: "UserSig 验证次数过于频繁。请检查 UserSig 是否正确，并于1分钟后重新验证。您可以在即时通信 IM 控制台的【开发辅助工具(https://console.cloud.tencent.com/im-detail/tool-usersig)】页面校验 UserSig。", 70051: "帐号被拉入黑名单。", 70052: "UserSig 已经失效，请重新生成，再次尝试。", 70107: "因安全原因被限制登录，请不要频繁登录。", 70169: "请求的用户帐号不存在。", 70114: "服务端内部超时，请稍后重试。", 70202: "服务端内部超时，请稍后重试。", 70206: "请求中批量数量不合法。", 70402: "参数非法，请检查必填字段是否填充，或者字段的填充是否满足协议要求。", 70403: "请求失败，需要 App 管理员权限。", 70398: "帐号数超限。如需创建多于100个帐号，请将应用升级为专业版，具体操作指引请参见购买指引(https://cloud.tencent.com/document/product/269/32458)。", 70500: "服务端内部错误，请稍后重试。", 71e3: "删除帐号失败。仅支持删除体验版帐号，您当前应用为专业版，暂不支持帐号删除。", 20001: "请求包非法。", 20002: "UserSig 或 A2 失效。", 20003: "消息发送方或接收方 UserID 无效或不存在，请检查 UserID 是否已导入即时通信 IM。", 20004: "网络异常，请重试。", 20005: "服务端内部错误，请重试。", 20006: "触发发送单聊消息之前回调，App 后台返回禁止下发该消息。", 20007: "发送单聊消息，被对方拉黑，禁止发送。消息发送状态默认展示为失败，您可以登录控制台修改该场景下的消息发送状态展示结果，具体操作请参见消息保留设置(https://cloud.tencent.com/document/product/269/38656)。", 20009: "消息发送双方互相不是好友，禁止发送（配置单聊消息校验好友关系才会出现）。", 20010: "发送单聊消息，自己不是对方的好友（单向关系），禁止发送。", 20011: "发送单聊消息，对方不是自己的好友（单向关系），禁止发送。", 20012: "发送方被禁言，该条消息被禁止发送。", 20016: "消息撤回超过了时间限制（默认2分钟）。", 20018: "删除漫游内部错误。", 90001: "JSON 格式解析失败，请检查请求包是否符合 JSON 规范。", 90002: "JSON 格式请求包中 MsgBody 不符合消息格式描述，或者 MsgBody 不是 Array 类型，请参考 TIMMsgElement 对象的定义(https://cloud.tencent.com/document/product/269/2720#.E6.B6.88.E6.81.AF.E5.85.83.E7.B4.A0-timmsgelement)。", 90003: "JSON 格式请求包体中缺少 To_Account 字段或者 To_Account 帐号不存在。", 90005: "JSON 格式请求包体中缺少 MsgRandom 字段或者 MsgRandom 字段不是 Integer 类型。", 90006: "JSON 格式请求包体中缺少 MsgTimeStamp 字段或者 MsgTimeStamp 字段不是 Integer 类型。", 90007: "JSON 格式请求包体中 MsgBody 类型不是 Array 类型，请将其修改为 Array 类型。", 90008: "JSON 格式请求包体中缺少 From_Account 字段或者 From_Account 帐号不存在。", 90009: "请求需要 App 管理员权限。", 90010: "JSON 格式请求包不符合消息格式描述，请参考 TIMMsgElement 对象的定义(https://cloud.tencent.com/document/product/269/2720#.E6.B6.88.E6.81.AF.E5.85.83.E7.B4.A0-timmsgelement)。", 90011: "批量发消息目标帐号超过500，请减少 To_Account 中目标帐号数量。", 90012: "To_Account 没有注册或不存在，请确认 To_Account 是否导入即时通信 IM 或者是否拼写错误。", 90026: "消息离线存储时间错误（最多不能超过7天）。", 90031: "JSON 格式请求包体中 SyncOtherMachine 字段不是 Integer 类型。", 90044: "JSON 格式请求包体中 MsgLifeTime 字段不是 Integer 类型。", 90048: "请求的用户帐号不存在。", 90054: "撤回请求中的 MsgKey 不合法。", 90994: "服务内部错误，请重试。", 90995: "服务内部错误，请重试。", 91e3: "服务内部错误，请重试。", 90992: "服务内部错误，请重试；如果所有请求都返回该错误码，且 App 配置了第三方回调，请检查 App 服务端是否正常向即时通信 IM 后台服务端返回回调结果。", 93e3: "JSON 数据包超长，消息包体请不要超过8k。", 91101: "Web 端长轮询被踢（Web 端同时在线实例个数超出限制）。", 10002: "服务端内部错误，请重试。", 10003: "请求中的接口名称错误，请核对接口名称并重试。", 10004: "参数非法，请根据错误描述检查请求是否正确。", 10005: "请求包体中携带的帐号数量过多。", 10006: "操作频率限制，请尝试降低调用的频率。", 10007: "操作权限不足，例如 Work 群组中普通成员尝试执行踢人操作，但只有 App 管理员才有权限。", 10008: "请求非法，可能是请求中携带的签名信息验证不正确，请再次尝试。", 10009: "该群不允许群主主动退出。", 10010: "群组不存在，或者曾经存在过，但是目前已经被解散。", 10011: "解析 JSON 包体失败，请检查包体的格式是否符合 JSON 格式。", 10012: "发起操作的 UserID 非法，请检查发起操作的用户 UserID 是否填写正确。", 10013: "被邀请加入的用户已经是群成员。", 10014: "群已满员，无法将请求中的用户加入群组，如果是批量加人，可以尝试减少加入用户的数量。", 10015: "找不到指定 ID 的群组。", 10016: "App 后台通过第三方回调拒绝本次操作。", 10017: "因被禁言而不能发送消息，请检查发送者是否被设置禁言。", 10018: "应答包长度超过最大包长（1MB），请求的内容过多，请尝试减少单次请求的数据量。", 10019: "请求的用户帐号不存在。", 10021: "群组 ID 已被使用，请选择其他的群组 ID。", 10023: "发消息的频率超限，请延长两次发消息时间的间隔。", 10024: "此邀请或者申请请求已经被处理。", 10025: "群组 ID 已被使用，并且操作者为群主，可以直接使用。", 10026: "该 SDKAppID 请求的命令字已被禁用。", 10030: "请求撤回的消息不存在。", 10031: "消息撤回超过了时间限制（默认2分钟）。", 10032: "请求撤回的消息不支持撤回操作。", 10033: "群组类型不支持消息撤回操作。", 10034: "该消息类型不支持删除操作。", 10035: "直播群和在线成员广播大群不支持删除消息。", 10036: "直播群创建数量超过了限制，请参考价格说明(https://cloud.tencent.com/document/product/269/11673)购买预付费套餐“IM直播群”。", 10037: "单个用户可创建和加入的群组数量超过了限制，请参考价格说明(https://cloud.tencent.com/document/product/269/11673)购买或升级预付费套餐“单人可创建与加入群组数”。", 10038: "群成员数量超过限制，请参考价格说明(https://cloud.tencent.com/document/product/269/11673)购买或升级预付费套餐“扩展群人数上限”。", 10041: "该应用（SDKAppID）已配置不支持群消息撤回。" },ht = function (e) {c(n, e);var t = _(n);function n(e) {var o;return r(this, n), (o = t.call(this)).code = e.code, o.message = pt[e.code] || e.message, o.data = e.data || {}, o;}return n;}(f(Error)),dt = { NO_SDKAPPID: 2e3, NO_ACCOUNT_TYPE: 2001, NO_IDENTIFIER: 2002, NO_USERSIG: 2003, NO_TINYID: 2022, NO_A2KEY: 2023, COS_UNDETECTED: 2040, MESSAGE_SEND_FAIL: 2100, MESSAGE_LIST_CONSTRUCTOR_NEED_OPTIONS: 2103, MESSAGE_SEND_NEED_MESSAGE_INSTANCE: 2105, MESSAGE_SEND_INVALID_CONVERSATION_TYPE: 2106, MESSAGE_FILE_IS_EMPTY: 2108, MESSAGE_ONPROGRESS_FUNCTION_ERROR: 2109, MESSAGE_REVOKE_FAIL: 2110, MESSAGE_IMAGE_SELECT_FILE_FIRST: 2251, MESSAGE_IMAGE_TYPES_LIMIT: 2252, MESSAGE_IMAGE_SIZE_LIMIT: 2253, MESSAGE_AUDIO_UPLOAD_FAIL: 2300, MESSAGE_AUDIO_SIZE_LIMIT: 2301, MESSAGE_VIDEO_UPLOAD_FAIL: 2350, MESSAGE_VIDEO_SIZE_LIMIT: 2351, MESSAGE_VIDEO_TYPES_LIMIT: 2352, MESSAGE_FILE_UPLOAD_FAIL: 2400, MESSAGE_FILE_SELECT_FILE_FIRST: 2401, MESSAGE_FILE_SIZE_LIMIT: 2402, MESSAGE_FILE_URL_IS_EMPTY: 2403, CONVERSATION_NOT_FOUND: 2500, USER_OR_GROUP_NOT_FOUND: 2501, CONVERSATION_UN_RECORDED_TYPE: 2502, ILLEGAL_GROUP_TYPE: 2600, CANNOT_JOIN_WORK: 2601, CANNOT_CHANGE_OWNER_IN_AVCHATROOM: 2620, CANNOT_CHANGE_OWNER_TO_SELF: 2621, CANNOT_DISMISS_Work: 2622, JOIN_GROUP_FAIL: 2660, CANNOT_ADD_MEMBER_IN_AVCHATROOM: 2661, CANNOT_JOIN_NON_AVCHATROOM_WITHOUT_LOGIN: 2662, CANNOT_KICK_MEMBER_IN_AVCHATROOM: 2680, NOT_OWNER: 2681, CANNOT_SET_MEMBER_ROLE_IN_WORK_AND_AVCHATROOM: 2682, INVALID_MEMBER_ROLE: 2683, CANNOT_SET_SELF_MEMBER_ROLE: 2684, CANNOT_MUTE_SELF: 2685, DEL_FRIEND_INVALID_PARAM: 2700, UPDATE_PROFILE_INVALID_PARAM: 2721, UPDATE_PROFILE_NO_KEY: 2722, ADD_BLACKLIST_INVALID_PARAM: 2740, DEL_BLACKLIST_INVALID_PARAM: 2741, CANNOT_ADD_SELF_TO_BLACKLIST: 2742, NETWORK_ERROR: 2800, NETWORK_TIMEOUT: 2801, NETWORK_BASE_OPTIONS_NO_URL: 2802, NETWORK_UNDEFINED_SERVER_NAME: 2803, NETWORK_PACKAGE_UNDEFINED: 2804, NO_NETWORK: 2805, CONVERTOR_IRREGULAR_PARAMS: 2900, NOTICE_RUNLOOP_UNEXPECTED_CONDITION: 2901, NOTICE_RUNLOOP_OFFSET_LOST: 2902, UNCAUGHT_ERROR: 2903, GET_LONGPOLL_ID_FAILED: 2904, SDK_IS_NOT_READY: 2999, LONG_POLL_KICK_OUT: 91101, MESSAGE_A2KEY_EXPIRED: 20002, ACCOUNT_A2KEY_EXPIRED: 70001, LONG_POLL_API_PARAM_ERROR: 90001 },ft = "无 SDKAppID",gt = "无 accountType",mt = "无 userID",_t = "无 userSig",yt = "无 tinyID",vt = "无 a2key",It = "未检测到 COS 上传插件",Mt = "消息发送失败",Ct = "MessageController.constructor() 需要参数 options",Et = "需要 Message 的实例",St = 'Message.conversationType 只能为 "C2C" 或 "GROUP"',Tt = "无法发送空文件",Dt = "回调函数运行时遇到错误，请检查接入侧代码",At = "消息撤回失败",kt = "请先选择一个图片",Rt = "只允许上传 jpg png jpeg gif 格式的图片",Ot = "图片大小超过20M，无法发送",Nt = "语音上传失败",Lt = "语音大小大于20M，无法发送",wt = "视频上传失败",Pt = "视频大小超过100M，无法发送",Gt = "只允许上传 mp4 格式的视频",bt = "文件上传失败",Ut = "请先选择一个文件",qt = "文件大小超过100M，无法发送 ",xt = "缺少必要的参数文件 URL",Ft = "没有找到相应的会话，请检查传入参数",Vt = "没有找到相应的用户或群组，请检查传入参数",Kt = "未记录的会话类型",Bt = "非法的群类型，请检查传入参数",Ht = "不能加入 Work 类型的群组",jt = "AVChatRoom 类型的群组不能转让群主",Yt = "不能把群主转让给自己",$t = "不能解散 Work 类型的群组",Wt = "加群失败，请检查传入参数或重试",zt = "AVChatRoom 类型的群不支持邀请群成员",Xt = "非 AVChatRoom 类型的群组不允许匿名加群，请先登录后再加群",Jt = "不能在 AVChatRoom 类型的群组踢人",Qt = "你不是群主，只有群主才有权限操作",Zt = "不能在 Work / AVChatRoom 类型的群中设置群成员身份",en = "不合法的群成员身份，请检查传入参数",tn = "不能设置自己的群成员身份，请检查传入参数",nn = "不能将自己禁言，请检查传入参数",rn = "传入 deleteFriend 接口的参数无效",on = "传入 updateMyProfile 接口的参数无效",sn = "updateMyProfile 无标配资料字段或自定义资料字段",an = "传入 addToBlacklist 接口的参数无效",un = "传入 removeFromBlacklist 接口的参数无效",cn = "不能拉黑自己",ln = "网络层初始化错误，缺少 URL 参数",pn = "打包错误，未定义的 serverName",hn = "未定义的 packageConfig",dn = "未连接到网络",fn = "不规范的参数名称",gn = "意料外的通知条件",mn = "_syncOffset 丢失",_n = "获取 longpolling id 失败",yn = "接口需要 SDK 处于 ready 状态后才能调用",vn = ["jpg", "jpeg", "gif", "png"],In = ["mp4"],Mn = function () {function e(n) {r(this, e);var o = this._check(n);if (o instanceof ht) throw o;this.type = t.MSG_FILE, this._percent = 0;var i = this._getFileInfo(n);this.content = { downloadFlag: 2, fileUrl: n.url || "", uuid: n.uuid, fileName: i.name || "", fileSize: i.size || 0 };}return i(e, [{ key: "_getFileInfo", value: function value(e) {if (e.fileName && e.fileSize) return { size: e.fileSize, name: e.fileName };if (N) return {};var t = e.file.files[0];return { size: t.size, name: t.name, type: t.type.slice(t.type.lastIndexOf("/") + 1).toLowerCase() };} }, { key: "updatePercent", value: function value(e) {this._percent = e, this._percent > 1 && (this._percent = 1);} }, { key: "updateFileUrl", value: function value(e) {this.content.fileUrl = e;} }, { key: "_check", value: function value(e) {if (e.size > 104857600) return new ht({ code: dt.MESSAGE_FILE_SIZE_LIMIT, message: "".concat(qt, ": ").concat(104857600, " bytes") });} }, { key: "sendable", value: function value() {return "" !== this.content.fileUrl && "" !== this.content.fileName && 0 !== this.content.fileSize;} }]), e;}(),Cn = function () {function e(n) {r(this, e), this.type = t.MSG_CUSTOM, this.content = { data: n.data || "", description: n.description || "", extension: n.extension || "" };}return i(e, [{ key: "setData", value: function value(e) {return this.content.data = e, this;} }, { key: "setDescription", value: function value(e) {return this.content.description = e, this;} }, { key: "setExtension", value: function value(e) {return this.content.extension = e, this;} }, { key: "sendable", value: function value() {return 0 !== this.content.data.length || 0 !== this.content.description.length || 0 !== this.content.extension.length;} }]), e;}(),En = function () {function e(n) {r(this, e), this.type = t.MSG_VIDEO, this._percent = 0, this.content = { remoteVideoUrl: n.remoteVideoUrl, videoFormat: n.videoFormat, videoSecond: parseInt(n.videoSecond, 10), videoSize: n.videoSize, videoUrl: n.videoUrl, videoDownloadFlag: 2, videoUUID: n.videoUUID, thumbUUID: n.thumbUUID, thumbFormat: n.thumbFormat, thumbWidth: n.thumbWidth, thumbHeight: n.thumbHeight, thumbSize: n.thumbSize, thumbDownloadFlag: 2, thumbUrl: n.thumbUrl };}return i(e, [{ key: "updatePercent", value: function value(e) {this._percent = e, this._percent > 1 && (this._percent = 1);} }, { key: "updateVideoUrl", value: function value(e) {e && (this.content.remoteVideoUrl = e);} }, { key: "sendable", value: function value() {return "" !== this.content.remoteVideoUrl;} }]), e;}(),Sn = function e(n) {r(this, e), this.type = t.MSG_GEO, this.content = n;},Tn = { 1: t.MSG_PRIORITY_HIGH, 2: t.MSG_PRIORITY_NORMAL, 3: t.MSG_PRIORITY_LOW, 4: t.MSG_PRIORITY_LOWEST },Dn = function () {function e(n) {r(this, e), this.ID = "", this.conversationID = n.conversationID || null, this.conversationType = n.conversationType || t.CONV_C2C, this.conversationSubType = n.conversationSubType, this.time = n.time || Math.ceil(Date.now() / 1e3), this.sequence = n.sequence || 0, this.clientSequence = n.clientSequence || n.sequence || 0, this.random = n.random || me(), this.priority = this._computePriority(n.priority), this.nick = "", this.avatar = "", this.isPeerRead = !1, this._elements = [], this.isPlaceMessage = n.isPlaceMessage || 0, this.isRevoked = 2 === n.isPlaceMessage || 8 === n.msgFlagBits, this.geo = {}, this.from = n.from || null, this.to = n.to || null, this.flow = "", this.isSystemMessage = n.isSystemMessage || !1, this.protocol = n.protocol || "JSON", this.isResend = !1, this.isRead = !1, this.status = n.status || be.SUCCESS, this.reInitialize(n.currentUser), this.extractGroupInfo(n.groupProfile || null);}return i(e, [{ key: "getElements", value: function value() {return this._elements;} }, { key: "extractGroupInfo", value: function value(e) {null !== e && (ee(e.fromAccountNick) && (this.nick = e.fromAccountNick), ee(e.fromAccountHeadurl) && (this.avatar = e.fromAccountHeadurl));} }, { key: "_initProxy", value: function value() {this.payload = this._elements[0].content, this.type = this._elements[0].type;} }, { key: "reInitialize", value: function value(e) {e && (this.status = this.from ? be.SUCCESS : be.UNSEND, !this.from && (this.from = e)), this._initFlow(e), this._initielizeSequence(e), this._concactConversationID(e), this.generateMessageID(e);} }, { key: "isSendable", value: function value() {return 0 !== this._elements.length && ("function" != typeof this._elements[0].sendable ? (J.warn("".concat(this._elements[0].type, ' need "boolean : sendable()" method')), !1) : this._elements[0].sendable());} }, { key: "_initTo", value: function value(e) {this.conversationType === t.CONV_GROUP && (this.to = e.groupID);} }, { key: "_initielizeSequence", value: function value(e) {0 === this.clientSequence && e && (this.clientSequence = function (e) {if (!e) return J.error("autoincrementIndex(string: key) need key parameter"), !1;if (void 0 === Ie[e]) {var t = new Date(),n = "3".concat(t.getHours()).slice(-2),r = "0".concat(t.getMinutes()).slice(-2),o = "0".concat(t.getSeconds()).slice(-2);Ie[e] = parseInt([n, r, o, "0001"].join("")), n = null, r = null, o = null, J.warn("utils.autoincrementIndex() create new sequence : ".concat(e, " = ").concat(Ie[e]));}return Ie[e]++;}(e)), 0 === this.sequence && this.conversationType === t.CONV_C2C && (this.sequence = this.clientSequence);} }, { key: "generateMessageID", value: function value(e) {var t = e === this.from ? 1 : 0,n = this.sequence > 0 ? this.sequence : this.clientSequence;this.ID = "".concat(this.conversationID, "-").concat(n, "-").concat(this.random, "-").concat(t);} }, { key: "_initFlow", value: function value(e) {"" !== e && (e === this.from ? (this.flow = "out", this.isRead = !0) : this.flow = "in");} }, { key: "_concactConversationID", value: function value(e) {var n = this.to,r = "",o = this.conversationType;o !== t.CONV_SYSTEM ? (r = o === t.CONV_C2C ? e === this.from ? n : this.from : this.to, this.conversationID = "".concat(o).concat(r)) : this.conversationID = t.CONV_SYSTEM;} }, { key: "isElement", value: function value(e) {return e instanceof qe || e instanceof ot || e instanceof it || e instanceof st || e instanceof Mn || e instanceof En || e instanceof ut || e instanceof lt || e instanceof Cn || e instanceof Sn;} }, { key: "setElement", value: function value(e) {var n = this;if (this.isElement(e)) return this._elements = [e], void this._initProxy();var r = function r(e) {switch (e.type) {case t.MSG_TEXT:n.setTextElement(e.content);break;case t.MSG_IMAGE:n.setImageElement(e.content);break;case t.MSG_AUDIO:n.setAudioElement(e.content);break;case t.MSG_FILE:n.setFileElement(e.content);break;case t.MSG_VIDEO:n.setVideoElement(e.content);break;case t.MSG_CUSTOM:n.setCustomElement(e.content);break;case t.MSG_GEO:n.setGEOElement(e.content);break;case t.MSG_GRP_TIP:n.setGroupTipElement(e.content);break;case t.MSG_GRP_SYS_NOTICE:n.setGroupSystemNoticeElement(e.content);break;case t.MSG_FACE:n.setFaceElement(e.content);break;default:J.warn(e.type, e.content, "no operation......");}};if (Array.isArray(e)) for (var o = 0; o < e.length; o++) {r(e[o]);} else r(e);this._initProxy();} }, { key: "setTextElement", value: function value(e) {var t = "string" == typeof e ? e : e.text,n = new qe({ text: t });this._elements.push(n);} }, { key: "setImageElement", value: function value(e) {var t = new ot(e);this._elements.push(t);} }, { key: "setAudioElement", value: function value(e) {var t = new st(e);this._elements.push(t);} }, { key: "setFileElement", value: function value(e) {var t = new Mn(e);this._elements.push(t);} }, { key: "setVideoElement", value: function value(e) {var t = new En(e);this._elements.push(t);} }, { key: "setGEOElement", value: function value(e) {var t = new Sn(e);this._elements.push(t);} }, { key: "setCustomElement", value: function value(e) {var t = new Cn(e);this._elements.push(t);} }, { key: "setGroupTipElement", value: function value(e) {if (e.operatorInfo) {var t = e.operatorInfo,n = t.nick,r = t.avatar;ee(n) && (this.nick = n), ee(r) && (this.avatar = r);}var o = new ut(e);this._elements.push(o);} }, { key: "setGroupSystemNoticeElement", value: function value(e) {var t = new lt(e);this._elements.push(t);} }, { key: "setFaceElement", value: function value(e) {var t = new it(e);this._elements.push(t);} }, { key: "setIsRead", value: function value(e) {this.isRead = e;} }, { key: "_computePriority", value: function value(e) {if (oe(e)) return t.MSG_PRIORITY_NORMAL;if (ee(e) && -1 !== Object.values(Tn).indexOf(e)) return e;if (Z(e)) {var n = "" + e;if (-1 !== Object.keys(Tn).indexOf(n)) return Tn[n];}return t.MSG_PRIORITY_NORMAL;} }, { key: "elements", get: function get() {return J.warn("！！！Message 实例的 elements 属性即将废弃，请尽快修改。使用 type 和 payload 属性处理单条消息，兼容组合消息使用 _elements 属性！！！"), this._elements;} }]), e;}(),An = function An(e) {return !!e && (!!(function (e) {return ee(e) && e.slice(0, 3) === t.CONV_C2C;}(e) || function (e) {return ee(e) && e.slice(0, 5) === t.CONV_GROUP;}(e) || Ae(e)) || (console.warn("非法的会话 ID:".concat(e, "。会话 ID 组成方式：\n  C2C + userID（单聊）\n  GROUP + groupID（群聊）\n  @TIM#SYSTEM（系统通知会话）")), !1));},kn = { login: { userID: { type: "String", required: !0 }, userSig: { type: "String", required: !0 } }, addToBlacklist: { userIDList: { type: "Array", required: !0 } }, mutilParam: [{ name: "paramName", type: "Number", required: !0 }, { name: "paramName", type: "String", required: !0 }], on: [{ name: "eventName", type: "String", validator: function validator(e) {return "string" == typeof e && 0 !== e.length || (console.warn("on 接口的 eventName 参数必须是 String 类型，且不能为空。"), !1);} }, { name: "handler", type: "Function", validator: function validator(e) {return "function" != typeof e ? (console.warn("on 接口的 handler 参数必须是 Function 类型。"), !1) : ("" === e.name && console.warn("on 接口的 handler 参数推荐使用具名函数。具名函数可以使用 off 接口取消订阅，匿名函数无法取消订阅。"), !0);} }], once: [{ name: "eventName", type: "String", validator: function validator(e) {return "string" == typeof e && 0 !== e.length || (console.warn("once 接口的 eventName 参数必须是 String 类型，且不能为空。"), !1);} }, { name: "handler", type: "Function", validator: function validator(e) {return "function" != typeof e ? (console.warn("once 接口的 handler 参数必须是 Function 类型。"), !1) : ("" === e.name && console.warn("once 接口的 handler 参数推荐使用具名函数。"), !0);} }], off: [{ name: "eventName", type: "String", validator: function validator(e) {return "string" == typeof e && 0 !== e.length || (console.warn("off 接口的 eventName 参数必须是 String 类型，且不能为空。"), !1);} }, { name: "handler", type: "Function", validator: function validator(e) {return "function" != typeof e ? (console.warn("off 接口的 handler 参数必须是 Function 类型。"), !1) : ("" === e.name && console.warn("off 接口的 handler 参数为匿名函数，无法取消订阅。"), !0);} }], sendMessage: [{ name: "message", type: "Object", required: !0 }], getMessageList: { conversationID: { type: "String", required: !0, validator: function validator(e) {return An(e);} }, nextReqMessageID: { type: "String" }, count: { type: "Number", validator: function validator(e) {return !(!oe(e) && !/^[1-9][0-9]*$/.test(e)) || (console.warn("getMessageList 接口的 count 参数必须为正整数"), !1);} } }, setMessageRead: { conversationID: { type: "String", required: !0, validator: function validator(e) {return An(e);} } }, getConversationProfile: [{ name: "conversationID", type: "String", required: !0, validator: function validator(e) {return An(e);} }], deleteConversation: [{ name: "conversationID", type: "String", required: !0, validator: function validator(e) {return An(e);} }], getGroupList: { groupProfileFilter: { type: "Array" } }, getGroupProfile: { groupID: { type: "String", required: !0 }, groupCustomFieldFilter: { type: "Array" }, memberCustomFieldFilter: { type: "Array" } }, getGroupProfileAdvance: { groupIDList: { type: "Array", required: !0 } }, createGroup: { name: { type: "String", required: !0 } }, joinGroup: { groupID: { type: "String", required: !0 }, type: { type: "String" }, applyMessage: { type: "String" } }, quitGroup: [{ name: "groupID", type: "String", required: !0 }], handleApplication: { message: { type: "Object", required: !0 }, handleAction: { type: "String", required: !0 }, handleMessage: { type: "String" } }, changeGroupOwner: { groupID: { type: "String", required: !0 }, newOwnerID: { type: "String", required: !0 } }, updateGroupProfile: { groupID: { type: "String", required: !0 }, muteAllMembers: { type: "Boolean" } }, dismissGroup: [{ name: "groupID", type: "String", required: !0 }], searchGroupByID: [{ name: "groupID", type: "String", required: !0 }], getGroupMemberList: { groupID: { type: "String", required: !0 }, offset: { type: "Number" }, count: { type: "Number" } }, getGroupMemberProfile: { groupID: { type: "String", required: !0 }, userIDList: { type: "Array", required: !0 }, memberCustomFieldFilter: { type: "Array" } }, addGroupMemeber: { groupID: { type: "String", required: !0 }, userIDList: { type: "Array", required: !0 } }, setGroupMemberRole: { groupID: { type: "String", required: !0 }, userID: { type: "String", required: !0 }, role: { type: "String", required: !0 } }, setGroupMemberMuteTime: { groupID: { type: "String", required: !0 }, userID: { type: "String", required: !0 }, muteTime: { type: "Number", validator: function validator(e) {return e >= 0;} } }, setGroupMemberNameCard: { groupID: { type: "String", required: !0 }, userID: { type: "String" }, nameCard: { type: "String", required: !0, validator: function validator(e) {return !0 !== /^\s+$/.test(e);} } }, setMessageRemindType: { groupID: { type: "String", required: !0 }, messageRemindType: { type: "String", required: !0 } }, setGroupMemberCustomField: { groupID: { type: "String", required: !0 }, userID: { type: "String" }, memberCustomField: { type: "Array", required: !0 } }, deleteGroupMember: { groupID: { type: "String", required: !0 } }, createTextMessage: { to: { type: "String", required: !0 }, conversationType: { type: "String", required: !0 }, payload: { type: "Object", required: !0, validator: function validator(e) {return ee(e.text) ? 0 !== e.text.length || (console.warn("createTextMessage 消息内容不能为空。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createTextMessage"), !1) : (console.warn("createTextMessage payload.text 类型必须为字符串。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createTextMessage"), !1);} } }, createCustomMessage: { to: { type: "String", required: !0 }, conversationType: { type: "String", required: !0 }, payload: { type: "Object", required: !0, validator: function validator(e) {return e.data && !ee(e.data) ? (console.warn("createCustomMessage payload.data 类型必须为 String。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createCustomMessage"), !1) : e.description && !ee(e.description) ? (console.warn("createCustomMessage payload.description 类型必须为 String。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createCustomMessage"), !1) : !(e.extension && !ee(e.extension)) || (console.warn("createCustomMessage payload.extension 类型必须为 String。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createCustomMessage"), !1);} } }, createImageMessage: { to: { type: "String", required: !0 }, conversationType: { type: "String", required: !0 }, payload: { type: "Object", required: !0, validator: function validator(e) {if (oe(e.file)) return console.warn("createImageMessage payload.file 不能为 undefined。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createImageMessage"), !1;if (O) {if (!(e.file instanceof HTMLInputElement || Q(e.file))) return console.warn("createImageMessage payload.file 的类型必须是 HTMLInputElement 或 File。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createImageMessage"), !1;if (e.file instanceof HTMLInputElement && 0 === e.file.files.length) return console.warn("createImageMessage 您没有选择文件，无法发送。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createImageMessage"), !1;}return !0;}, onProgress: { type: "Function", required: !1, validator: function validator(e) {return oe(e) && console.warn("createImageMessage 没有 onProgress 回调，您将无法获取图片上传进度。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createImageMessage"), !0;} } } }, createAudioMessage: { to: { type: "String", required: !0 }, conversationType: { type: "String", required: !0 }, payload: { type: "Object", required: !0 }, onProgress: { type: "Function", required: !1, validator: function validator(e) {return oe(e) && console.warn("createAudioMessage 没有 onProgress 回调，您将无法获取音频上传进度。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createAudioMessage"), !0;} } }, createVideoMessage: { to: { type: "String", required: !0 }, conversationType: { type: "String", required: !0 }, payload: { type: "Object", required: !0, validator: function validator(e) {if (oe(e.file)) return console.warn("createVideoMessage payload.file 不能为 undefined。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createVideoMessage"), !1;if (O) {if (!(e.file instanceof HTMLInputElement || Q(e.file))) return console.warn("createVideoMessage payload.file 的类型必须是 HTMLInputElement 或 File。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createVideoMessage"), !1;if (e.file instanceof HTMLInputElement && 0 === e.file.files.length) return console.warn("createVideoMessage 您没有选择文件，无法发送。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createVideoMessage"), !1;}return !0;} }, onProgress: { type: "Function", required: !1, validator: function validator(e) {return oe(e) && console.warn("createVideoMessage 没有 onProgress 回调，您将无法获取视频上传进度。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createVideoMessage"), !0;} } }, createFaceMessage: { to: { type: "String", required: !0 }, conversationType: { type: "String", required: !0 }, payload: { type: "Object", required: !0, validator: function validator(e) {return !!ne(e) && (Z(e.index) ? !!ee(e.data) || (console.warn("createFaceMessage payload.data 类型必须为 String！"), !1) : (console.warn("createFaceMessage payload.index 类型必须为 Number！"), !1));} } }, createFileMessage: { to: { type: "String", required: !0 }, conversationType: { type: "String", required: !0 }, payload: { type: "Object", required: !0, validator: function validator(e) {if (oe(e.file)) return console.warn("createFileMessage payload.file 不能为 undefined。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createFileMessage"), !1;if (O) {if (!(e.file instanceof HTMLInputElement || Q(e.file))) return console.warn("createFileMessage payload.file 的类型必须是 HTMLInputElement 或 File。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createFileMessage"), !1;if (e.file instanceof HTMLInputElement && 0 === e.file.files.length) return console.warn("createFileMessage 您没有选择文件，无法发送。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createFileMessage"), !1;}return !0;} }, onProgress: { type: "Function", required: !1, validator: function validator(e) {return oe(e) && console.warn("createFileMessage 没有 onProgress 回调，您将无法获取文件上传进度。请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#createFileMessage"), !0;} } }, revokeMessage: [{ name: "message", type: "Object", required: !0, validator: function validator(e) {return e instanceof Dn ? e.conversationType === t.CONV_SYSTEM ? (console.warn("revokeMessage 不能撤回系统会话消息，只能撤回单聊消息或群消息"), !1) : !0 !== e.isRevoked || (console.warn("revokeMessage 消息已经被撤回，请勿重复操作"), !1) : (console.warn("revokeMessage 参数 message 必须为 Message(https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/Message.html) 实例。"), !1);} }], getUserProfile: { userIDList: { type: "Array", validator: function validator(e) {return re(e) ? (0 === e.length && console.warn("getUserProfile userIDList 不能为空数组，请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#getUserProfile"), !0) : (console.warn("getUserProfile userIDList 必须为数组，请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#getUserProfile"), !1);} } }, updateMyProfile: { profileCustomField: { type: "Array", validator: function validator(e) {return !!oe(e) || !!re(e) || (console.warn("updateMyProfile profileCustomField 必须为数组，请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#updateMyProfile"), !1);} } } },Rn = { login: "login", logout: "logout", on: "on", once: "once", off: "off", setLogLevel: "setLogLevel", downloadLog: "downloadLog", registerPlugin: "registerPlugin", destroy: "destroy", createTextMessage: "createTextMessage", createImageMessage: "createImageMessage", createAudioMessage: "createAudioMessage", createVideoMessage: "createVideoMessage", createCustomMessage: "createCustomMessage", createFaceMessage: "createFaceMessage", createFileMessage: "createFileMessage", sendMessage: "sendMessage", resendMessage: "resendMessage", getMessageList: "getMessageList", setMessageRead: "setMessageRead", revokeMessage: "revokeMessage", getConversationList: "getConversationList", getConversationProfile: "getConversationProfile", deleteConversation: "deleteConversation", getGroupList: "getGroupList", getGroupProfile: "getGroupProfile", createGroup: "createGroup", joinGroup: "joinGroup", updateGroupProfile: "updateGroupProfile", quitGroup: "quitGroup", dismissGroup: "dismissGroup", changeGroupOwner: "changeGroupOwner", searchGroupByID: "searchGroupByID", setMessageRemindType: "setMessageRemindType", handleGroupApplication: "handleGroupApplication", getGroupMemberProfile: "getGroupMemberProfile", getGroupMemberList: "getGroupMemberList", addGroupMember: "addGroupMember", deleteGroupMember: "deleteGroupMember", setGroupMemberNameCard: "setGroupMemberNameCard", setGroupMemberMuteTime: "setGroupMemberMuteTime", setGroupMemberRole: "setGroupMemberRole", setGroupMemberCustomField: "setGroupMemberCustomField", getMyProfile: "getMyProfile", getUserProfile: "getUserProfile", updateMyProfile: "updateMyProfile", getBlacklist: "getBlacklist", addToBlacklist: "addToBlacklist", removeFromBlacklist: "removeFromBlacklist", getFriendList: "getFriendList" },On = "1.7.3",Nn = "537048168",Ln = "10",wn = "protobuf",Pn = "json",Gn = { HOST: { TYPE: 3, ACCESS_LAYER_TYPES: { SANDBOX: 1, TEST: 2, PRODUCTION: 3 }, CURRENT: { COMMON: "https://webim.tim.qq.com", PIC: "https://pic.tim.qq.com", COS: "https://yun.tim.qq.com" }, PRODUCTION: { COMMON: "https://webim.tim.qq.com", PIC: "https://pic.tim.qq.com", COS: "https://yun.tim.qq.com" }, SANDBOX: { COMMON: "https://events.tim.qq.com", PIC: "https://pic.tim.qq.com", COS: "https://yun.tim.qq.com" }, TEST: { COMMON: "https://test.tim.qq.com", PIC: "https://pic.tim.qq.com", COS: "https://test.tim.qq.com" }, setCurrent: function setCurrent() {var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 3;switch (e) {case this.ACCESS_LAYER_TYPES.SANDBOX:this.CURRENT = this.SANDBOX, this.TYPE = this.ACCESS_LAYER_TYPES.SANDBOX;break;case this.ACCESS_LAYER_TYPES.TEST:this.CURRENT = this.TEST, this.TYPE = this.ACCESS_LAYER_TYPES.TEST;break;default:this.CURRENT = this.PRODUCTION, this.TYPE = this.ACCESS_LAYER_TYPES.PRODUCTION;}} }, NAME: { OPEN_IM: "openim", GROUP: "group_open_http_svc", FRIEND: "sns", PROFILE: "profile", RECENT_CONTACT: "recentcontact", PIC: "openpic", BIG_GROUP_NO_AUTH: "group_open_http_noauth_svc", BIG_GROUP_LONG_POLLING_NO_AUTH: "group_open_long_polling_http_noauth_svc", IM_OPEN_STAT: "imopenstat", WEB_IM: "webim", IM_COS_SIGN: "im_cos_sign_svr" }, CMD: { ACCESS_LAYER: "accesslayer", LOGIN: "login", LOGOUT_LONG_POLL: "longpollinglogout", LOGOUT_ALL: "logout", PORTRAIT_GET: "portrait_get_all", PORTRAIT_SET: "portrait_set", GET_LONG_POLL_ID: "getlongpollingid", LONG_POLL: "longpolling", AVCHATROOM_LONG_POLL: "get_msg", FRIEND_ADD: "friend_add", FRIEND_GET_ALL: "friend_get_all", FRIEND_DELETE: "friend_delete", RESPONSE_PENDENCY: "friend_response", GET_PENDENCY: "pendency_get", DELETE_PENDENCY: "pendency_delete", GET_GROUP_PENDENCY: "get_pendency", GET_BLACKLIST: "black_list_get", ADD_BLACKLIST: "black_list_add", DELETE_BLACKLIST: "black_list_delete", CREATE_GROUP: "create_group", GET_JOINED_GROUPS: "get_joined_group_list", SEND_MESSAGE: "sendmsg", REVOKE_C2C_MESSAGE: "msgwithdraw", SEND_GROUP_MESSAGE: "send_group_msg", REVOKE_GROUP_MESSAGE: "group_msg_recall", GET_GROUP_INFO: "get_group_info", GET_GROUP_MEMBER_INFO: "get_specified_group_member_info", GET_GROUP_MEMBER_LIST: "get_group_member_info", QUIT_GROUP: "quit_group", CHANGE_GROUP_OWNER: "change_group_owner", DESTROY_GROUP: "destroy_group", ADD_GROUP_MEMBER: "add_group_member", DELETE_GROUP_MEMBER: "delete_group_member", SEARCH_GROUP_BY_ID: "get_group_public_info", APPLY_JOIN_GROUP: "apply_join_group", HANDLE_APPLY_JOIN_GROUP: "handle_apply_join_group", MODIFY_GROUP_INFO: "modify_group_base_info", MODIFY_GROUP_MEMBER_INFO: "modify_group_member_info", DELETE_GROUP_SYSTEM_MESSAGE: "deletemsg", GET_CONVERSATION_LIST: "get", PAGING_GET_CONVERSATION_LIST: "page_get", DELETE_CONVERSATION: "delete", GET_MESSAGES: "getmsg", GET_C2C_ROAM_MESSAGES: "getroammsg", GET_GROUP_ROAM_MESSAGES: "group_msg_get", SET_C2C_MESSAGE_READ: "msgreaded", GET_PEER_READ_TIME: "get_peer_read_time", SET_GROUP_MESSAGE_READ: "msg_read_report", FILE_READ_AND_WRITE_AUTHKEY: "authkey", FILE_UPLOAD: "pic_up", COS_SIGN: "cos", TIM_WEB_REPORT: "tim_web_report", BIG_DATA_HALLWAY_AUTH_KEY: "authkey" }, CHANNEL: { SOCKET: 1, XHR: 2, AUTO: 0 }, NAME_VERSION: { openim: "v4", group_open_http_svc: "v4", sns: "v4", profile: "v4", recentcontact: "v4", openpic: "v4", group_open_http_noauth_svc: "v1", group_open_long_polling_http_noauth_svc: "v1", imopenstat: "v4", im_cos_sign_svr: "v4", webim: "v4" } };Gn.HOST.setCurrent(Gn.HOST.ACCESS_LAYER_TYPES.PRODUCTION);var bn = { request: { toAccount: "To_Account", fromAccount: "From_Account", to: "To_Account", from: "From_Account", groupID: "GroupId", avatar: "FaceUrl" }, response: { GroupId: "groupID", Member_Account: "userID", MsgList: "messageList", SyncFlag: "syncFlag", To_Account: "to", From_Account: "from", MsgSeq: "sequence", MsgRandom: "random", MsgTimeStamp: "time", MsgContent: "content", MsgBody: "elements", GroupWithdrawInfoArray: "revokedInfos", WithdrawC2cMsgNotify: "c2cMessageRevokedNotify", C2cWithdrawInfoArray: "revokedInfos", C2cReadedReceipt: "c2cMessageReadReceipt", LastReadTime: "peerReadTime", MsgRand: "random", MsgType: "type", MsgShow: "messageShow", NextMsgSeq: "nextMessageSeq", FaceUrl: "avatar", ProfileDataMod: "profileModify", Profile_Account: "userID", ValueBytes: "value", ValueNum: "value", NoticeSeq: "noticeSequence", NotifySeq: "notifySequence", MsgFrom_AccountExtraInfo: "messageFromAccountExtraInformation", Operator_Account: "operatorID", OpType: "operationType", ReportType: "operationType", UserId: "userID", User_Account: "userID", List_Account: "userIDList", MsgOperatorMemberExtraInfo: "operatorInfo", MsgMemberExtraInfo: "memberInfoList", ImageUrl: "avatar", NickName: "nick", MsgGroupNewInfo: "newGroupProfile", MsgAppDefinedData: "groupCustomField", Owner_Account: "ownerID", GroupName: "name", GroupFaceUrl: "avatar", GroupIntroduction: "introduction", GroupNotification: "notification", GroupApplyJoinOption: "joinOption", MsgKey: "messageKey", GroupInfo: "groupProfile", ShutupTime: "muteTime", Desc: "description", Ext: "extension" }, ignoreKeyWord: ["C2C", "ID", "USP"] },Un = "_contextWasUpdated",qn = "_contextWasReset",xn = "_a2KeyAndTinyIDUpdated",Fn = "_specifiedConfigUpdated",Vn = "_noticeIsSynchronizing",Kn = "_noticeIsSynchronized",Bn = "_messageSent",Hn = "_syncMessageProcessing",jn = "_syncMessageFinished",Yn = "_receiveInstantMessage",$n = "_receiveGroupInstantMessage",Wn = "_receveGroupSystemNotice",zn = "_messageRevoked",Xn = "_longPollGetIDFailed",Jn = "_longPollRequestFailed",Qn = "_longPollResponseOK",Zn = "_longPollFastStart",er = "_longPollSlowStart",tr = "_longPollKickedOut",nr = "_longPollMitipuleDeviceKickedOut",rr = "_longPollGetNewC2CNotice",or = "_longPollGetNewGroupMessages",ir = "_longPollGetNewGroupTips",sr = "_longPollGetNewGroupNotice",ar = "_longPollGetNewFriendMessages",ur = "_longPollProfileModified",cr = "_longPollNoticeReceiveSystemOrders",lr = " _longpollGroupMessageRevoked",pr = "_longpollC2CMessageRevoked",hr = "_longpollC2CMessageReadReceipt",dr = "_avlongPollRequestFailed",fr = "_avlongPollResponseOK",gr = "_onGroupListUpdated",mr = "_loginSuccess",_r = "_signLogoutExcuting",yr = "_logoutSuccess",vr = "_a2keyExpired",Ir = "_errorHasBeenDetected",Mr = "_onConversationListUpdated",Cr = "_onConversationListProfileUpdated",Er = "_conversationDeleted",Sr = "onProfileUpdated",Tr = "joinAVChatRoomSuccess",Dr = "joinAVChatRoomSuccessNoAuth",Ar = "_sdkStateReady";function kr(e, t) {if ("string" != typeof e && !Array.isArray(e)) throw new TypeError("Expected the input to be `string | string[]`");t = Object.assign({ pascalCase: !1 }, t);var n;return 0 === (e = Array.isArray(e) ? e.map(function (e) {return e.trim();}).filter(function (e) {return e.length;}).join("-") : e.trim()).length ? "" : 1 === e.length ? t.pascalCase ? e.toUpperCase() : e.toLowerCase() : (e !== e.toLowerCase() && (e = Rr(e)), e = e.replace(/^[_.\- ]+/, "").toLowerCase().replace(/[_.\- ]+(\w|$)/g, function (e, t) {return t.toUpperCase();}).replace(/\d+(\w|$)/g, function (e) {return e.toUpperCase();}), n = e, t.pascalCase ? n.charAt(0).toUpperCase() + n.slice(1) : n);}var Rr = function Rr(e) {for (var t = !1, n = !1, r = !1, o = 0; o < e.length; o++) {var i = e[o];t && /[a-zA-Z]/.test(i) && i.toUpperCase() === i ? (e = e.slice(0, o) + "-" + e.slice(o), t = !1, r = n, n = !0, o++) : n && r && /[a-zA-Z]/.test(i) && i.toLowerCase() === i ? (e = e.slice(0, o - 1) + "-" + e.slice(o - 1), r = n, n = !1, t = !0) : (t = i.toLowerCase() === i && i.toUpperCase() !== i, r = n, n = i.toUpperCase() === i && i.toLowerCase() !== i);}return e;};function Or(e, t, n) {var r = [],o = 0,i = function e(t, n) {if (++o > 10) return o--, t;if (re(t)) {var i = t.map(function (t) {return te(t) ? e(t, n) : t;});return o--, i;}if (te(t)) {var s = (a = t, u = function u(e, t) {if (!ce(t)) return !1;if ((s = t) !== kr(s)) {for (var o = !0, i = 0; i < bn.ignoreKeyWord.length; i++) {if (t.includes(bn.ignoreKeyWord[i])) {o = !1;break;}}o && r.push(t);}var s;return oe(n[t]) ? function (e) {return "OPPOChannelID" === e ? e : e[0].toUpperCase() + kr(e).slice(1);}(t) : n[t];}, c = Object.create(null), Object.keys(a).forEach(function (e) {var t = u(a[e], e);t && (c[t] = a[e]);}), c);return s = ke(s, function (t, r) {return re(t) || te(t) ? e(t, n) : t;}), o--, s;}var a, u, c;}(e, t = u({}, bn.request, {}, t));return r.length > 0 && n.innerEmitter.emit(Ir, { code: dt.CONVERTOR_IRREGULAR_PARAMS, message: fn }), i;}function Nr(e, t) {if (t = u({}, bn.response, {}, t), re(e)) return e.map(function (e) {return te(e) ? Nr(e, t) : e;});if (te(e)) {var n = (r = e, o = function o(e, n) {return oe(t[n]) ? kr(n) : t[n];}, i = {}, Object.keys(r).forEach(function (e) {i[o(r[e], e)] = r[e];}), i);return n = ke(n, function (e) {return re(e) || te(e) ? Nr(e, t) : e;});}var r, o, i;}var Lr = function () {function e(t) {var n = this;r(this, e), this.url = "", this.requestData = null, this.method = t.method || "POST", this.callback = function (e) {return Nr(e = t.decode(e), n._getResponseMap(t));}, this._initializeServerMap(), this._initializeURL(t), this._initializeRequestData(t);}return i(e, [{ key: "_initializeServerMap", value: function value() {this._serverMap = Object.create(null);var e = "";for (var t in Gn.NAME) {if (Object.prototype.hasOwnProperty.call(Gn.NAME, t)) switch (e = Gn.NAME[t]) {case Gn.NAME.PIC:this._serverMap[e] = Gn.HOST.CURRENT.PIC;break;case Gn.NAME.IM_COS_SIGN:this._serverMap[e] = Gn.HOST.CURRENT.COS;break;default:this._serverMap[e] = Gn.HOST.CURRENT.COMMON;}}} }, { key: "_getHost", value: function value(e) {if (void 0 !== this._serverMap[e]) return this._serverMap[e];throw new ht({ code: dt.NETWORK_UNDEFINED_SERVER_NAME, message: pn });} }, { key: "_initializeURL", value: function value(e) {var t = e.serverName,n = e.cmd,r = this._getHost(t),o = "".concat(r, "/").concat(Gn.NAME_VERSION[t], "/").concat(t, "/").concat(n);o += "?".concat(this._getQueryString(e.queryString)), this.url = o;} }, { key: "getUrl", value: function value() {return this.url.replace(/&reqtime=(\d+)/, "&reqtime=".concat(Math.ceil(+new Date() / 1e3)));} }, { key: "_initializeRequestData", value: function value(e) {var t,n = e.requestData;t = this._requestDataCleaner(n), this.requestData = e.encode(t);} }, { key: "_requestDataCleaner", value: function value(e) {var t = Array.isArray(e) ? [] : Object.create(null);for (var r in e) {Object.prototype.hasOwnProperty.call(e, r) && ce(r) && null !== e[r] && ("object" !== n(e[r]) ? t[r] = e[r] : t[r] = this._requestDataCleaner.bind(this)(e[r]));}return t;} }, { key: "_getQueryString", value: function value(e) {var t = [];for (var n in e) {Object.prototype.hasOwnProperty.call(e, n) && ("function" != typeof e[n] ? t.push("".concat(n, "=").concat(e[n])) : t.push("".concat(n, "=").concat(e[n]())));}return t.join("&");} }, { key: "_getResponseMap", value: function value(e) {if (e.keyMaps && e.keyMaps.response && Object.keys(e.keyMaps.response).length > 0) return e.keyMaps.response;} }]), e;}();function wr(e) {this.mixin(e);}wr.mixin = function (e) {var t = e.prototype || e;t._isReady = !1, t.ready = function (e) {var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];if (e) return this._isReady ? void (t ? e.call(this) : setTimeout(e, 1)) : (this._readyQueue = this._readyQueue || [], void this._readyQueue.push(e));}, t.triggerReady = function () {var e = this;this._isReady = !0, setTimeout(function () {var t = e._readyQueue;e._readyQueue = [], t && t.length > 0 && t.forEach(function (e) {e.call(this);}, e);}, 1);}, t.resetReady = function () {this._isReady = !1, this._readyQueue = [];}, t.isReady = function () {return this._isReady;};};var Pr = function () {function e(t) {r(this, e), wr.mixin(this), this.tim = t;}return i(e, [{ key: "isLoggedIn", value: function value() {return this.tim.context.login === Ge.IS_LOGIN || !!this.tim.context.a2Key;} }, { key: "createTransportCapsule", value: function value(e) {var t = this.tim.packageConfig.get(e);return t ? new Lr(t) : null;} }, { key: "request", value: function value(e) {var t = this.createTransportCapsule(e);return t || J.error("unknown transport capsule, please check!", e), this.tim.connectionController.request(t);} }, { key: "emitInnerEvent", value: function value(e, t) {this.tim.innerEmitter.emit(e, t);} }, { key: "emitOuterEvent", value: function value(e, t) {this.tim.outerEmitter.emit(e, t);} }, { key: "reset", value: function value() {J.warn(["method: IMController.reset() method must be implemented"].join());} }, { key: "probeNetwork", value: function value() {return this.tim.netMonitor.probe();} }, { key: "getNetworkType", value: function value() {return this.tim.netMonitor.getNetworkType();} }, { key: "getPlatform", value: function value() {var e = "web";return K ? e = "wechat" : N && (e = "wxmp"), e;} }]), e;}(),Gr = function () {function e(t, n) {r(this, e), this.data = t, this._innerEmitter = n, this.defaultData = {}, Object.assign(this.defaultData, t), this.initGetterAndSetter();}return i(e, [{ key: "initGetterAndSetter", value: function value() {var e = this,t = function t(_t2) {Object.defineProperty(e, _t2, { enumerable: !0, configurable: !0, get: function get() {return e.data[_t2];}, set: function set(n) {e.data[_t2] !== n && (e.data[_t2] = n, e.onChange.bind(e)(_t2, n));} });};for (var n in e.data) {Object.prototype.hasOwnProperty.call(e.data, n) && t(n);}} }, { key: "onChange", value: function value(e, t) {this._innerEmitter.emit(Un, { key: e, value: t });} }, { key: "reset", value: function value() {for (var e in J.log("Context.reset"), this.data) {Object.prototype.hasOwnProperty.call(this.data, e) && (this.data[e] = this.defaultData.hasOwnProperty(e) ? this.defaultData[e] : null);}} }]), e;}(),br = function (e) {c(n, e);var t = _(n);function n(e) {var o;r(this, n);var i = (o = t.call(this, e)).tim.loginInfo;return o._context = new Gr({ login: Ge.IS_NOT_LOGIN, SDKAppID: i.SDKAppID, appIDAt3rd: null, accountType: i.accountType, identifier: i.identifier, tinyID: null, identifierNick: i.identifierNick, userSig: i.userSig, a2Key: null, contentType: "json", apn: 1, unlimitedAVChatRoom: i.unlimitedAVChatRoom }, o.tim.innerEmitter), o._initListener(), o;}return i(n, [{ key: "reset", value: function value() {this._context.reset(), this.emitInnerEvent(qn);} }, { key: "_initListener", value: function value() {this.tim.innerEmitter.on(Un, this._onContextMemberChange, this), this.tim.innerEmitter.on(mr, this._updateA2KeyAndTinyID, this);} }, { key: "_updateA2KeyAndTinyID", value: function value(e) {var t = e.data,n = t.a2Key,r = t.tinyID;this._context.a2Key = n, this._context.tinyID = r, this.emitInnerEvent(xn), this.triggerReady();} }, { key: "getContext", value: function value() {return this._context;} }, { key: "_onContextMemberChange", value: function value(e) {var t = e.data,n = t.key,r = t.value;("tinyID" === n || "a2Key" === n) && (r.length <= 0 ? this._context.login = Ge.IS_NOT_LOGIN : this._context.login = null !== this._context.a2Key ? Ge.IS_LOGIN : Ge.IS_NOT_LOGIN);} }]), n;}(Pr),Ur = function e(t) {r(this, e), this.code = 0, this.data = t || {};},qr = null,xr = function xr(e) {qr = e;},Fr = function Fr(e) {return e instanceof Ur ? (J.warn("IMPromise.resolve 此函数会自动用options创建IMResponse实例，调用侧不需创建，建议修改！"), Promise.resolve(e)) : Promise.resolve(new Ur(e));},Vr = function Vr(t) {var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];if (t instanceof ht) return n && null !== qr && qr.emit(e.ERROR, t), Promise.reject(t);if (t instanceof Error) {var r = new ht({ code: dt.UNCAUGHT_ERROR, message: t.message });return n && null !== qr && qr.emit(e.ERROR, r), Promise.reject(r);}if (oe(t) || oe(t.code) || oe(t.message)) J.error("IMPromise.reject 必须指定code(错误码)和message(错误信息)!!!");else {if (Z(t.code) && ee(t.message)) {var o = new ht(t);return n && null !== qr && qr.emit(e.ERROR, o), Promise.reject(o);}J.error("IMPromise.reject code(错误码)必须为数字，message(错误信息)必须为字符串!!!");}},Kr = { SDK_READY: "sdkReady", LOGIN: "login", LONG_POLLING: "longpolling", LONG_POLLING_AV: "longpollingAV", SEND_MESSAGE: "sendMessage", SEND_MESSAGE_C2C: "sendMessageC2C", SEND_MESSAGE_GROUP_WORK: "sendMessageGroupWork", SEND_MESSAGE_GROUP_PUBLIC: "sendMessageGroupPublic", SEND_MESSAGE_GROUP_MEETING: "sendMessageGroupMeeting", SEND_MESSAGE_GROUP_AV: "sendMessageGroupAV", MESSAGE_RECEIVED: "messageReceived", MESSAGE_RECEIVED_AV: "messageReceivedAV", INIT_CONVERSATION_LIST: "initConversationList", INIT_GROUP_LIST: "initGroupList", UPLOAD: "upload" },Br = function () {function e() {r(this, e), this.SDKAppID = "", this.version = "", this.tinyID = "", this.userID = "", this.platform = "", this.method = "", this.time = "", this.startts = 0, this.endts = 0, this.timespan = 0, this.codeint = 0, this.message = "", this.text = "", this.msgType = "", this.networkType = "", this.platform = "", this._sentFlag = !1;}return i(e, [{ key: "setCommonInfo", value: function value(e, t, n, r, o) {this.SDKAppID = "".concat(e), this.version = "".concat(t), this.tinyID = n, this.userID = r, this.platform = o, this.time = fe(), this.startts && this.endts && !this.timespan && (this.timespan = Math.abs(this.endts - this.startts));} }, { key: "setMethod", value: function value(e) {return this.method = e, this;} }, { key: "setStart", value: function value() {this.startts = Date.now();} }, { key: "setEnd", value: function value() {var e = this,t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];this._sentFlag || (this.endts = Date.now(), t ? (this._sentFlag = !0, this._eventStatController.pushIn(this)) : setTimeout(function () {e._sentFlag = !0, e._eventStatController.pushIn(e);}, 0));} }, { key: "setError", value: function value(e, t, n) {return e instanceof Error ? (this._sentFlag || (this.setNetworkType(n), t ? (e.code && this.setCode(e.code), e.message && this.setMessage(e.message)) : (this.setCode(dt.NO_NETWORK), this.setMessage(dn))), this) : (J.warn("SSOLogData.setError value not instanceof Error, please check!"), this);} }, { key: "setCode", value: function value(e) {return oe(e) || this._sentFlag || ("ECONNABORTED" === e && (this.codeint = 103), Z(e) ? this.codeint = e : J.warn("SSOLogData.setCode value not a number, please check!", e, n(e))), this;} }, { key: "setMessage", value: function value(e) {return oe(e) || this._sentFlag ? this : ee(e) ? (this.message = e, this) : this;} }, { key: "setText", value: function value(e) {return Z(e) ? this.text = e.toString() : ee(e) && (this.text = e), this;} }, { key: "setMessageType", value: function value(e) {return this.msgType = e, this;} }, { key: "setNetworkType", value: function value(e) {return oe(e) ? J.warn("SSOLogData.setNetworkType value is undefined, please check!") : this.networkType = e, this;} }], [{ key: "bindController", value: function value(t) {e.prototype._eventStatController = t;} }]), e;}(),Hr = "sdkConstruct",jr = "sdkReady",Yr = "accessLayer",$r = "login",Wr = "logout",zr = "kickedOut",Xr = "registerPlugin",Jr = "getCosAuthKey",Qr = "upload",Zr = "sendMessage",eo = "getC2CRoamingMessages",to = "getGroupRoamingMessages",no = "revokeMessage",ro = "setC2CMessageRead",oo = "setGroupMessageRead",io = "emptyMessageBody",so = "getPeerReadTime",ao = "getConversationList",uo = "getConversationProfile",co = "deleteConversation",lo = "getConversationListInStorage",po = "syncConversationList",ho = "createGroup",fo = "applyJoinGroup",go = "quitGroup",mo = "searchGroupByID",_o = "changeGroupOwner",yo = "handleGroupApplication",vo = "setMessageRemindType",Io = "dismissGroup",Mo = "updateGroupProfile",Co = "getGroupList",Eo = "getGroupProfile",So = "getGroupListInStorage",To = "getGroupLastSequence",Do = "getGroupMemberList",Ao = "getGroupMemberProfile",ko = "addGroupMember",Ro = "deleteGroupMember",Oo = "setGroupMemberMuteTime",No = "setGroupMemberNameCard",Lo = "setGroupMemberRole",wo = "setGroupMemberCustomField",Po = "getLongPollID",Go = "longPollingError",bo = "networkJitter",Uo = "fastStart",qo = "slowStart",xo = "messageLoss",Fo = "getUserProfile",Vo = "updateMyProfile",Ko = "getBlacklist",Bo = "addToBlacklist",Ho = "removeFromBlacklist",jo = "mpHideToShow",Yo = "callbackFunctionError",$o = "exceptionError",Wo = function (n) {c(s, n);var o = _(s);function s(e) {var t;return r(this, s), (t = o.call(this, e))._initializeListener(), t;}return i(s, [{ key: "login", value: function value(e) {if (this.isLoggedIn()) {var t = "您已经登录账号".concat(e.identifier, "！如需切换账号登录，请先调用 logout 接口登出，再调用 login 接口登录。");return J.warn(t), Fr({ actionStatus: "OK", errorCode: 0, errorInfo: t, repeatLogin: !0 });}J.log("SignController.login userID=", e.identifier), J.time(Kr.LOGIN);var n = this._checkLoginInfo(e);return Oe(n) ? (this.tim.context.identifier = e.identifier, this.tim.context.userSig = e.userSig, this.tim.context.identifier && this.tim.context.userSig ? this._accessLayer() : void 0) : Vr(n);} }, { key: "_isLoginCurrentUser", value: function value(e) {return this.tim.context.identifier === e;} }, { key: "_initializeListener", value: function value() {var e = this.tim.innerEmitter;e.on(tr, this._onMultipleAccountKickedOut, this), e.on(nr, this._onMultipleDeviceKickedOut, this), e.on(vr, this._onUserSigExpired, this);} }, { key: "_accessLayer", value: function value() {var e = this,t = new Br();return t.setMethod(Yr).setStart(), J.log("SignController._accessLayer."), this.request({ name: "accessLayer", action: "query" }).then(function (n) {return t.setCode(0).setNetworkType(e.getNetworkType()).setText(n.data.webImAccessLayer).setEnd(), J.log("SignController._accessLayer ok. webImAccessLayer=".concat(n.data.webImAccessLayer)), 1 === n.data.webImAccessLayer && Gn.HOST.setCurrent(n.data.webImAccessLayer), e._login();}).catch(function (n) {return e.probeNetwork().then(function (r) {var o = y(r, 2),i = o[0],s = o[1];t.setError(n, i, s).setEnd(!0), e.tim.eventStatController.reportAtOnce();}), J.error("SignController._accessLayer failed. error:", n), Vr(n);});} }, { key: "_login", value: function value() {var e = this,t = new Br();return t.setMethod($r).setStart(), this.request({ name: "login", action: "query" }).then(function (n) {var r = null;if (!n.data.tinyID) throw r = new ht({ code: dt.NO_TINYID, message: yt }), t.setError(r, !0, e.getNetworkType()).setEnd(), r;if (!n.data.a2Key) throw r = new ht({ code: dt.NO_A2KEY, message: vt }), t.setError(r, !0, e.getNetworkType()).setEnd(), r;return t.setCode(0).setNetworkType(e.getNetworkType()).setText("".concat(e.tim.loginInfo.identifier)).setEnd(), J.log("SignController.login ok. userID=".concat(e.tim.loginInfo.identifier, " loginCost=").concat(J.timeEnd(Kr.LOGIN), "ms")), e.emitInnerEvent(mr, { a2Key: n.data.a2Key, tinyID: n.data.tinyID }), Fr(n.data);}).catch(function (n) {return e.probeNetwork().then(function (e) {var r = y(e, 2),o = r[0],i = r[1];t.setError(n, o, i).setEnd(!0);}), J.error("SignController.login failed. error:", n), Vr(n);});} }, { key: "logout", value: function value() {var e = new Br();return e.setMethod(Wr).setStart(), e.setCode(0).setNetworkType(this.getNetworkType()).setText("userID=".concat(this.tim.loginInfo.identifier, " type=").concat("longPollLogout")).setEnd(!0), J.info("SignController.logout"), this.emitInnerEvent(_r), this._logout(Ze).then(this._emitLogoutSuccess.bind(this)).catch(this._emitLogoutSuccess.bind(this));} }, { key: "_logout", value: function value(e) {var t = this.tim.notificationController,n = e === Qe ? "logout" : "longPollLogout",r = e === Qe ? { name: n, action: "query" } : { name: n, action: "query", param: { longPollID: t.getLongPollID() } };return this.request(r).catch(function (e) {return J.error("SignController._logout error:", e), Vr(e);});} }, { key: "_checkLoginInfo", value: function value(e) {var t = 0,n = "";return null === e.SDKAppID ? (t = dt.NO_SDKAPPID, n = ft) : null === e.accountType ? (t = dt.NO_ACCOUNT_TYPE, n = gt) : null === e.identifier ? (t = dt.NO_IDENTIFIER, n = mt) : null === e.userSig && (t = dt.NO_USERSIG, n = _t), Oe(t) || Oe(n) ? {} : { code: t, message: n };} }, { key: "_emitLogoutSuccess", value: function value() {return this.emitInnerEvent(yr), Fr({});} }, { key: "_onMultipleAccountKickedOut", value: function value() {var n = this,r = new Br();r.setMethod(zr).setStart(), r.setCode(0).setNetworkType(this.getNetworkType()).setText(t.KICKED_OUT_MULT_ACCOUNT).setEnd(!0), J.warn("SignController._onMultipleAccountKickedOut kicked out. userID=".concat(this.tim.loginInfo.identifier)), this.tim.logout().then(function () {n.emitOuterEvent(e.KICKED_OUT, { type: t.KICKED_OUT_MULT_ACCOUNT });});} }, { key: "_onMultipleDeviceKickedOut", value: function value() {var n = this,r = new Br();r.setMethod(zr).setStart(), r.setCode(0).setNetworkType(this.getNetworkType()).setText(t.KICKED_OUT_MULT_DEVICE).setEnd(!0), J.warn("SignController._onMultipleDeviceKickedOut kicked out. userID=".concat(this.tim.loginInfo.identifier)), this.tim.logout().then(function () {n.emitOuterEvent(e.KICKED_OUT, { type: t.KICKED_OUT_MULT_DEVICE });});} }, { key: "_onUserSigExpired", value: function value() {var n = new Br();n.setMethod(zr).setStart(), n.setCode(0).setNetworkType(this.getNetworkType()).setText(t.KICKED_OUT_USERSIG_EXPIRED).setEnd(!0), J.warn("SignController._onUserSigExpired: userSig 签名过期被踢下线"), this.emitOuterEvent(e.KICKED_OUT, { type: t.KICKED_OUT_USERSIG_EXPIRED }), this.tim.resetSDK();} }, { key: "reset", value: function value() {J.info("SignController.reset");} }]), s;}(Pr),zo = function zo(e, t) {return function () {for (var n = new Array(arguments.length), r = 0; r < n.length; r++) {n[r] = arguments[r];}return e.apply(t, n);};},Xo = Object.prototype.toString;function Jo(e) {return "[object Array]" === Xo.call(e);}function Qo(e) {return void 0 === e;}function Zo(e) {return null !== e && "object" == typeof e;}function ei(e) {return "[object Function]" === Xo.call(e);}function ti(e, t) {if (null != e) if ("object" != typeof e && (e = [e]), Jo(e)) for (var n = 0, r = e.length; n < r; n++) {t.call(null, e[n], n, e);} else for (var o in e) {Object.prototype.hasOwnProperty.call(e, o) && t.call(null, e[o], o, e);}}var ni = { isArray: Jo, isArrayBuffer: function isArrayBuffer(e) {return "[object ArrayBuffer]" === Xo.call(e);}, isBuffer: function isBuffer(e) {return null !== e && !Qo(e) && null !== e.constructor && !Qo(e.constructor) && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e);}, isFormData: function isFormData(e) {return "undefined" != typeof FormData && e instanceof FormData;}, isArrayBufferView: function isArrayBufferView(e) {return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && e.buffer instanceof ArrayBuffer;}, isString: function isString(e) {return "string" == typeof e;}, isNumber: function isNumber(e) {return "number" == typeof e;}, isObject: Zo, isUndefined: Qo, isDate: function isDate(e) {return "[object Date]" === Xo.call(e);}, isFile: function isFile(e) {return "[object File]" === Xo.call(e);}, isBlob: function isBlob(e) {return "[object Blob]" === Xo.call(e);}, isFunction: ei, isStream: function isStream(e) {return Zo(e) && ei(e.pipe);}, isURLSearchParams: function isURLSearchParams(e) {return "undefined" != typeof URLSearchParams && e instanceof URLSearchParams;}, isStandardBrowserEnv: function isStandardBrowserEnv() {return ("undefined" == typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && "undefined" != typeof window && "undefined" != typeof document;}, forEach: ti, merge: function e() {var t = {};function n(n, r) {"object" == typeof t[r] && "object" == typeof n ? t[r] = e(t[r], n) : t[r] = n;}for (var r = 0, o = arguments.length; r < o; r++) {ti(arguments[r], n);}return t;}, deepMerge: function e() {var t = {};function n(n, r) {"object" == typeof t[r] && "object" == typeof n ? t[r] = e(t[r], n) : t[r] = "object" == typeof n ? e({}, n) : n;}for (var r = 0, o = arguments.length; r < o; r++) {ti(arguments[r], n);}return t;}, extend: function extend(e, t, n) {return ti(t, function (t, r) {e[r] = n && "function" == typeof t ? zo(t, n) : t;}), e;}, trim: function trim(e) {return e.replace(/^\s*/, "").replace(/\s*$/, "");} };function ri(e) {return encodeURIComponent(e).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");}var oi = function oi(e, t, n) {if (!t) return e;var r;if (n) r = n(t);else if (ni.isURLSearchParams(t)) r = t.toString();else {var o = [];ni.forEach(t, function (e, t) {null != e && (ni.isArray(e) ? t += "[]" : e = [e], ni.forEach(e, function (e) {ni.isDate(e) ? e = e.toISOString() : ni.isObject(e) && (e = JSON.stringify(e)), o.push(ri(t) + "=" + ri(e));}));}), r = o.join("&");}if (r) {var i = e.indexOf("#");-1 !== i && (e = e.slice(0, i)), e += (-1 === e.indexOf("?") ? "?" : "&") + r;}return e;};function ii() {this.handlers = [];}ii.prototype.use = function (e, t) {return this.handlers.push({ fulfilled: e, rejected: t }), this.handlers.length - 1;}, ii.prototype.eject = function (e) {this.handlers[e] && (this.handlers[e] = null);}, ii.prototype.forEach = function (e) {ni.forEach(this.handlers, function (t) {null !== t && e(t);});};var si = ii,ai = function ai(e, t, n) {return ni.forEach(n, function (n) {e = n(e, t);}), e;},ui = function ui(e) {return !(!e || !e.__CANCEL__);};function ci() {throw new Error("setTimeout has not been defined");}function li() {throw new Error("clearTimeout has not been defined");}var pi = ci,hi = li;function di(e) {if (pi === setTimeout) return setTimeout(e, 0);if ((pi === ci || !pi) && setTimeout) return pi = setTimeout, setTimeout(e, 0);try {return pi(e, 0);} catch (t) {try {return pi.call(null, e, 0);} catch (t) {return pi.call(this, e, 0);}}}"function" == typeof B.setTimeout && (pi = setTimeout), "function" == typeof B.clearTimeout && (hi = clearTimeout);var fi,gi = [],mi = !1,_i = -1;function yi() {mi && fi && (mi = !1, fi.length ? gi = fi.concat(gi) : _i = -1, gi.length && vi());}function vi() {if (!mi) {var e = di(yi);mi = !0;for (var t = gi.length; t;) {for (fi = gi, gi = []; ++_i < t;) {fi && fi[_i].run();}_i = -1, t = gi.length;}fi = null, mi = !1, function (e) {if (hi === clearTimeout) return clearTimeout(e);if ((hi === li || !hi) && clearTimeout) return hi = clearTimeout, clearTimeout(e);try {hi(e);} catch (t) {try {return hi.call(null, e);} catch (t) {return hi.call(this, e);}}}(e);}}function Ii(e, t) {this.fun = e, this.array = t;}Ii.prototype.run = function () {this.fun.apply(null, this.array);};function Mi() {}var Ci = Mi,Ei = Mi,Si = Mi,Ti = Mi,Di = Mi,Ai = Mi,ki = Mi;var Ri = B.performance || {},Oi = Ri.now || Ri.mozNow || Ri.msNow || Ri.oNow || Ri.webkitNow || function () {return new Date().getTime();};var Ni = new Date();var Li = { nextTick: function nextTick(e) {var t = new Array(arguments.length - 1);if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) {t[n - 1] = arguments[n];}gi.push(new Ii(e, t)), 1 !== gi.length || mi || di(vi);}, title: "browser", browser: !0, env: {}, argv: [], version: "", versions: {}, on: Ci, addListener: Ei, once: Si, off: Ti, removeListener: Di, removeAllListeners: Ai, emit: ki, binding: function binding(e) {throw new Error("process.binding is not supported");}, cwd: function cwd() {return "/";}, chdir: function chdir(e) {throw new Error("process.chdir is not supported");}, umask: function umask() {return 0;}, hrtime: function hrtime(e) {var t = .001 * Oi.call(Ri),n = Math.floor(t),r = Math.floor(t % 1 * 1e9);return e && (n -= e[0], (r -= e[1]) < 0 && (n--, r += 1e9)), [n, r];}, platform: "browser", release: {}, config: {}, uptime: function uptime() {return (new Date() - Ni) / 1e3;} },wi = function wi(e, t) {ni.forEach(e, function (n, r) {r !== t && r.toUpperCase() === t.toUpperCase() && (e[t] = n, delete e[r]);});},Pi = function Pi(e, t, n, r, o) {return function (e, t, n, r, o) {return e.config = t, n && (e.code = n), e.request = r, e.response = o, e.isAxiosError = !0, e.toJSON = function () {return { message: this.message, name: this.name, description: this.description, number: this.number, fileName: this.fileName, lineNumber: this.lineNumber, columnNumber: this.columnNumber, stack: this.stack, config: this.config, code: this.code };}, e;}(new Error(e), t, n, r, o);},Gi = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"],bi = ni.isStandardBrowserEnv() ? function () {var e,t = /(msie|trident)/i.test(navigator.userAgent),n = document.createElement("a");function r(e) {var r = e;return t && (n.setAttribute("href", r), r = n.href), n.setAttribute("href", r), { href: n.href, protocol: n.protocol ? n.protocol.replace(/:$/, "") : "", host: n.host, search: n.search ? n.search.replace(/^\?/, "") : "", hash: n.hash ? n.hash.replace(/^#/, "") : "", hostname: n.hostname, port: n.port, pathname: "/" === n.pathname.charAt(0) ? n.pathname : "/" + n.pathname };}return e = r(window.location.href), function (t) {var n = ni.isString(t) ? r(t) : t;return n.protocol === e.protocol && n.host === e.host;};}() : function () {return !0;},Ui = ni.isStandardBrowserEnv() ? { write: function write(e, t, n, r, o, i) {var s = [];s.push(e + "=" + encodeURIComponent(t)), ni.isNumber(n) && s.push("expires=" + new Date(n).toGMTString()), ni.isString(r) && s.push("path=" + r), ni.isString(o) && s.push("domain=" + o), !0 === i && s.push("secure"), document.cookie = s.join("; ");}, read: function read(e) {var t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));return t ? decodeURIComponent(t[3]) : null;}, remove: function remove(e) {this.write(e, "", Date.now() - 864e5);} } : { write: function write() {}, read: function read() {return null;}, remove: function remove() {} },qi = function qi(e) {return new Promise(function (t, n) {var r = e.data,o = e.headers;ni.isFormData(r) && delete o["Content-Type"];var i = new XMLHttpRequest();if (e.auth) {var s = e.auth.username || "",a = e.auth.password || "";o.Authorization = "Basic " + btoa(s + ":" + a);}var u,c,l = (u = e.baseURL, c = e.url, u && !/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(c) ? function (e, t) {return t ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "") : e;}(u, c) : c);if (i.open(e.method.toUpperCase(), oi(l, e.params, e.paramsSerializer), !0), i.timeout = e.timeout, i.onreadystatechange = function () {if (i && 4 === i.readyState && (0 !== i.status || i.responseURL && 0 === i.responseURL.indexOf("file:"))) {var r,o,s,a,u,c = "getAllResponseHeaders" in i ? (r = i.getAllResponseHeaders(), u = {}, r ? (ni.forEach(r.split("\n"), function (e) {if (a = e.indexOf(":"), o = ni.trim(e.substr(0, a)).toLowerCase(), s = ni.trim(e.substr(a + 1)), o) {if (u[o] && Gi.indexOf(o) >= 0) return;u[o] = "set-cookie" === o ? (u[o] ? u[o] : []).concat([s]) : u[o] ? u[o] + ", " + s : s;}}), u) : u) : null,l = { data: e.responseType && "text" !== e.responseType ? i.response : i.responseText, status: i.status, statusText: i.statusText, headers: c, config: e, request: i };!function (e, t, n) {var r = n.config.validateStatus;!r || r(n.status) ? e(n) : t(Pi("Request failed with status code " + n.status, n.config, null, n.request, n));}(t, n, l), i = null;}}, i.onabort = function () {i && (n(Pi("Request aborted", e, "ECONNABORTED", i)), i = null);}, i.onerror = function () {n(Pi("Network Error", e, null, i)), i = null;}, i.ontimeout = function () {var t = "timeout of " + e.timeout + "ms exceeded";e.timeoutErrorMessage && (t = e.timeoutErrorMessage), n(Pi(t, e, "ECONNABORTED", i)), i = null;}, ni.isStandardBrowserEnv()) {var p = Ui,h = (e.withCredentials || bi(l)) && e.xsrfCookieName ? p.read(e.xsrfCookieName) : void 0;h && (o[e.xsrfHeaderName] = h);}if ("setRequestHeader" in i && ni.forEach(o, function (e, t) {void 0 === r && "content-type" === t.toLowerCase() ? delete o[t] : i.setRequestHeader(t, e);}), ni.isUndefined(e.withCredentials) || (i.withCredentials = !!e.withCredentials), e.responseType) try {i.responseType = e.responseType;} catch (d) {if ("json" !== e.responseType) throw d;}"function" == typeof e.onDownloadProgress && i.addEventListener("progress", e.onDownloadProgress), "function" == typeof e.onUploadProgress && i.upload && i.upload.addEventListener("progress", e.onUploadProgress), e.cancelToken && e.cancelToken.promise.then(function (e) {i && (i.abort(), n(e), i = null);}), void 0 === r && (r = null), i.send(r);});},xi = { "Content-Type": "application/x-www-form-urlencoded" };function Fi(e, t) {!ni.isUndefined(e) && ni.isUndefined(e["Content-Type"]) && (e["Content-Type"] = t);}var Vi,Ki = { adapter: (("undefined" != typeof XMLHttpRequest || void 0 !== Li && "[object process]" === Object.prototype.toString.call(Li)) && (Vi = qi), Vi), transformRequest: [function (e, t) {return wi(t, "Accept"), wi(t, "Content-Type"), ni.isFormData(e) || ni.isArrayBuffer(e) || ni.isBuffer(e) || ni.isStream(e) || ni.isFile(e) || ni.isBlob(e) ? e : ni.isArrayBufferView(e) ? e.buffer : ni.isURLSearchParams(e) ? (Fi(t, "application/x-www-form-urlencoded;charset=utf-8"), e.toString()) : ni.isObject(e) ? (Fi(t, "application/json;charset=utf-8"), JSON.stringify(e)) : e;}], transformResponse: [function (e) {if ("string" == typeof e) try {e = JSON.parse(e);} catch (t) {}return e;}], timeout: 0, xsrfCookieName: "XSRF-TOKEN", xsrfHeaderName: "X-XSRF-TOKEN", maxContentLength: -1, validateStatus: function validateStatus(e) {return e >= 200 && e < 300;} };Ki.headers = { common: { Accept: "application/json, text/plain, */*" } }, ni.forEach(["delete", "get", "head"], function (e) {Ki.headers[e] = {};}), ni.forEach(["post", "put", "patch"], function (e) {Ki.headers[e] = ni.merge(xi);});var Bi = Ki;function Hi(e) {e.cancelToken && e.cancelToken.throwIfRequested();}var ji = function ji(e) {return Hi(e), e.headers = e.headers || {}, e.data = ai(e.data, e.headers, e.transformRequest), e.headers = ni.merge(e.headers.common || {}, e.headers[e.method] || {}, e.headers), ni.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function (t) {delete e.headers[t];}), (e.adapter || Bi.adapter)(e).then(function (t) {return Hi(e), t.data = ai(t.data, t.headers, e.transformResponse), t;}, function (t) {return ui(t) || (Hi(e), t && t.response && (t.response.data = ai(t.response.data, t.response.headers, e.transformResponse))), Promise.reject(t);});},Yi = function Yi(e, t) {t = t || {};var n = {},r = ["url", "method", "params", "data"],o = ["headers", "auth", "proxy"],i = ["baseURL", "url", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "maxContentLength", "validateStatus", "maxRedirects", "httpAgent", "httpsAgent", "cancelToken", "socketPath"];ni.forEach(r, function (e) {void 0 !== t[e] && (n[e] = t[e]);}), ni.forEach(o, function (r) {ni.isObject(t[r]) ? n[r] = ni.deepMerge(e[r], t[r]) : void 0 !== t[r] ? n[r] = t[r] : ni.isObject(e[r]) ? n[r] = ni.deepMerge(e[r]) : void 0 !== e[r] && (n[r] = e[r]);}), ni.forEach(i, function (r) {void 0 !== t[r] ? n[r] = t[r] : void 0 !== e[r] && (n[r] = e[r]);});var s = r.concat(o).concat(i),a = Object.keys(t).filter(function (e) {return -1 === s.indexOf(e);});return ni.forEach(a, function (r) {void 0 !== t[r] ? n[r] = t[r] : void 0 !== e[r] && (n[r] = e[r]);}), n;};function $i(e) {this.defaults = e, this.interceptors = { request: new si(), response: new si() };}$i.prototype.request = function (e) {"string" == typeof e ? (e = arguments[1] || {}).url = arguments[0] : e = e || {}, (e = Yi(this.defaults, e)).method ? e.method = e.method.toLowerCase() : this.defaults.method ? e.method = this.defaults.method.toLowerCase() : e.method = "get";var t = [ji, void 0],n = Promise.resolve(e);for (this.interceptors.request.forEach(function (e) {t.unshift(e.fulfilled, e.rejected);}), this.interceptors.response.forEach(function (e) {t.push(e.fulfilled, e.rejected);}); t.length;) {n = n.then(t.shift(), t.shift());}return n;}, $i.prototype.getUri = function (e) {return e = Yi(this.defaults, e), oi(e.url, e.params, e.paramsSerializer).replace(/^\?/, "");}, ni.forEach(["delete", "get", "head", "options"], function (e) {$i.prototype[e] = function (t, n) {return this.request(ni.merge(n || {}, { method: e, url: t }));};}), ni.forEach(["post", "put", "patch"], function (e) {$i.prototype[e] = function (t, n, r) {return this.request(ni.merge(r || {}, { method: e, url: t, data: n }));};});var Wi = $i;function zi(e) {this.message = e;}zi.prototype.toString = function () {return "Cancel" + (this.message ? ": " + this.message : "");}, zi.prototype.__CANCEL__ = !0;var Xi = zi;function Ji(e) {if ("function" != typeof e) throw new TypeError("executor must be a function.");var t;this.promise = new Promise(function (e) {t = e;});var n = this;e(function (e) {n.reason || (n.reason = new Xi(e), t(n.reason));});}Ji.prototype.throwIfRequested = function () {if (this.reason) throw this.reason;}, Ji.source = function () {var e;return { token: new Ji(function (t) {e = t;}), cancel: e };};var Qi = Ji;function Zi(e) {var t = new Wi(e),n = zo(Wi.prototype.request, t);return ni.extend(n, Wi.prototype, t), ni.extend(n, t), n;}var es = Zi(Bi);es.Axios = Wi, es.create = function (e) {return Zi(Yi(es.defaults, e));}, es.Cancel = Xi, es.CancelToken = Qi, es.isCancel = ui, es.all = function (e) {return Promise.all(e);}, es.spread = function (e) {return function (t) {return e.apply(null, t);};};var ts = es,ns = es;ts.default = ns;var rs = ts,os = rs.create({ timeout: 3e4, headers: { "Content-Type": "application/x-www-form-urlencoded;charset=UTF-8" } });os.interceptors.response.use(function (e) {var t = e.data,n = t.error_code,r = t.ErrorCode;return Z(n) && (r = n), r !== Pe.SUCCESS && (e.data.ErrorCode = Number(r)), e;}, function (e) {return "Network Error" === e.message && (!0 === os.defaults.withCredentials && J.warn("Network Error, try to close `IMAxios.defaults.withCredentials` to false. (IMAxios.js)"), os.defaults.withCredentials = !1), Promise.reject(e);});var is = function () {function e() {r(this, e);}return i(e, [{ key: "request", value: function value(e) {console.warn("请注意： ConnectionBase.request() 方法必须被派生类重写:"), console.log("参数如下：\n    * @param {String} options.url string 是 开发者服务器接口地址\n    * @param {*} options.data - string/object/ArrayBuffer 否 请求的参数\n    * @param {Object} options.header - Object 否 设置请求的 header，\n    * @param {String} options.method - string GET 否 HTTP 请求方法\n    * @param {String} options.dataType - string json 否 返回的数据格式\n    * @param {String} options.responseType - string text 否 响应的数据类型\n    * @param {Boolean} isRetry - string text false 是否为重试的请求\n   ");} }, { key: "_checkOptions", value: function value(e) {if (!1 == !!e.url) throw new ht({ code: dt.NETWORK_BASE_OPTIONS_NO_URL, message: ln });} }, { key: "_initOptions", value: function value(e) {e.method = ["POST", "GET", "PUT", "DELETE", "OPTION"].indexOf(e.method) >= 0 ? e.method : "POST", e.dataType = e.dataType || "json", e.responseType = e.responseType || "json";} }]), e;}(),ss = function (e) {c(n, e);var t = _(n);function n() {var e;return r(this, n), (e = t.call(this)).retry = 2, e;}return i(n, [{ key: "request", value: function value(e) {return this._checkOptions(e), this._initOptions(e), this._requestWithRetry({ url: e.url, data: e.data, method: e.method });} }, { key: "_requestWithRetry", value: function value(e) {var t = this,n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;return os(e).catch(function (r) {return t.retry && n < t.retry ? t._requestWithRetry(e, ++n) : Vr(new ht({ code: r.code || "", message: r.message || "" }));});} }]), n;}(is),as = [],us = [],cs = "undefined" != typeof Uint8Array ? Uint8Array : Array,ls = !1;function ps() {ls = !0;for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", t = 0, n = e.length; t < n; ++t) {as[t] = e[t], us[e.charCodeAt(t)] = t;}us["-".charCodeAt(0)] = 62, us["_".charCodeAt(0)] = 63;}function hs(e, t, n) {for (var r, o, i = [], s = t; s < n; s += 3) {r = (e[s] << 16) + (e[s + 1] << 8) + e[s + 2], i.push(as[(o = r) >> 18 & 63] + as[o >> 12 & 63] + as[o >> 6 & 63] + as[63 & o]);}return i.join("");}function ds(e) {var t;ls || ps();for (var n = e.length, r = n % 3, o = "", i = [], s = 0, a = n - r; s < a; s += 16383) {i.push(hs(e, s, s + 16383 > a ? a : s + 16383));}return 1 === r ? (t = e[n - 1], o += as[t >> 2], o += as[t << 4 & 63], o += "==") : 2 === r && (t = (e[n - 2] << 8) + e[n - 1], o += as[t >> 10], o += as[t >> 4 & 63], o += as[t << 2 & 63], o += "="), i.push(o), i.join("");}function fs(e, t, n, r, o) {var i,s,a = 8 * o - r - 1,u = (1 << a) - 1,c = u >> 1,l = -7,p = n ? o - 1 : 0,h = n ? -1 : 1,d = e[t + p];for (p += h, i = d & (1 << -l) - 1, d >>= -l, l += a; l > 0; i = 256 * i + e[t + p], p += h, l -= 8) {;}for (s = i & (1 << -l) - 1, i >>= -l, l += r; l > 0; s = 256 * s + e[t + p], p += h, l -= 8) {;}if (0 === i) i = 1 - c;else {if (i === u) return s ? NaN : Infinity * (d ? -1 : 1);s += Math.pow(2, r), i -= c;}return (d ? -1 : 1) * s * Math.pow(2, i - r);}function gs(e, t, n, r, o, i) {var s,a,u,c = 8 * i - o - 1,l = (1 << c) - 1,p = l >> 1,h = 23 === o ? Math.pow(2, -24) - Math.pow(2, -77) : 0,d = r ? 0 : i - 1,f = r ? 1 : -1,g = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;for (t = Math.abs(t), isNaN(t) || Infinity === t ? (a = isNaN(t) ? 1 : 0, s = l) : (s = Math.floor(Math.log(t) / Math.LN2), t * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (t += s + p >= 1 ? h / u : h * Math.pow(2, 1 - p)) * u >= 2 && (s++, u /= 2), s + p >= l ? (a = 0, s = l) : s + p >= 1 ? (a = (t * u - 1) * Math.pow(2, o), s += p) : (a = t * Math.pow(2, p - 1) * Math.pow(2, o), s = 0)); o >= 8; e[n + d] = 255 & a, d += f, a /= 256, o -= 8) {;}for (s = s << o | a, c += o; c > 0; e[n + d] = 255 & s, d += f, s /= 256, c -= 8) {;}e[n + d - f] |= 128 * g;}var ms = {}.toString,_s = Array.isArray || function (e) {return "[object Array]" == ms.call(e);};function ys() {return Is.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;}function vs(e, t) {if (ys() < t) throw new RangeError("Invalid typed array length");return Is.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = Is.prototype : (null === e && (e = new Is(t)), e.length = t), e;}function Is(e, t, n) {if (!(Is.TYPED_ARRAY_SUPPORT || this instanceof Is)) return new Is(e, t, n);if ("number" == typeof e) {if ("string" == typeof t) throw new Error("If encoding is specified then the first argument must be a string");return Es(this, e);}return Ms(this, e, t, n);}function Ms(e, t, n, r) {if ("number" == typeof t) throw new TypeError('"value" argument must not be a number');return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer ? function (e, t, n, r) {if (t.byteLength, n < 0 || t.byteLength < n) throw new RangeError("'offset' is out of bounds");if (t.byteLength < n + (r || 0)) throw new RangeError("'length' is out of bounds");t = void 0 === n && void 0 === r ? new Uint8Array(t) : void 0 === r ? new Uint8Array(t, n) : new Uint8Array(t, n, r);Is.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = Is.prototype : e = Ss(e, t);return e;}(e, t, n, r) : "string" == typeof t ? function (e, t, n) {"string" == typeof n && "" !== n || (n = "utf8");if (!Is.isEncoding(n)) throw new TypeError('"encoding" must be a valid string encoding');var r = 0 | As(t, n),o = (e = vs(e, r)).write(t, n);o !== r && (e = e.slice(0, o));return e;}(e, t, n) : function (e, t) {if (Ds(t)) {var n = 0 | Ts(t.length);return 0 === (e = vs(e, n)).length || t.copy(e, 0, 0, n), e;}if (t) {if ("undefined" != typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || "length" in t) return "number" != typeof t.length || (r = t.length) != r ? vs(e, 0) : Ss(e, t);if ("Buffer" === t.type && _s(t.data)) return Ss(e, t.data);}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");}(e, t);}function Cs(e) {if ("number" != typeof e) throw new TypeError('"size" argument must be a number');if (e < 0) throw new RangeError('"size" argument must not be negative');}function Es(e, t) {if (Cs(t), e = vs(e, t < 0 ? 0 : 0 | Ts(t)), !Is.TYPED_ARRAY_SUPPORT) for (var n = 0; n < t; ++n) {e[n] = 0;}return e;}function Ss(e, t) {var n = t.length < 0 ? 0 : 0 | Ts(t.length);e = vs(e, n);for (var r = 0; r < n; r += 1) {e[r] = 255 & t[r];}return e;}function Ts(e) {if (e >= ys()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + ys().toString(16) + " bytes");return 0 | e;}function Ds(e) {return !(null == e || !e._isBuffer);}function As(e, t) {if (Ds(e)) return e.length;if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)) return e.byteLength;"string" != typeof e && (e = "" + e);var n = e.length;if (0 === n) return 0;for (var r = !1;;) {switch (t) {case "ascii":case "latin1":case "binary":return n;case "utf8":case "utf-8":case void 0:return Zs(e).length;case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":return 2 * n;case "hex":return n >>> 1;case "base64":return ea(e).length;default:if (r) return Zs(e).length;t = ("" + t).toLowerCase(), r = !0;}}}function ks(e, t, n) {var r = !1;if ((void 0 === t || t < 0) && (t = 0), t > this.length) return "";if ((void 0 === n || n > this.length) && (n = this.length), n <= 0) return "";if ((n >>>= 0) <= (t >>>= 0)) return "";for (e || (e = "utf8");;) {switch (e) {case "hex":return Ks(this, t, n);case "utf8":case "utf-8":return xs(this, t, n);case "ascii":return Fs(this, t, n);case "latin1":case "binary":return Vs(this, t, n);case "base64":return qs(this, t, n);case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":return Bs(this, t, n);default:if (r) throw new TypeError("Unknown encoding: " + e);e = (e + "").toLowerCase(), r = !0;}}}function Rs(e, t, n) {var r = e[t];e[t] = e[n], e[n] = r;}function Os(e, t, n, r, o) {if (0 === e.length) return -1;if ("string" == typeof n ? (r = n, n = 0) : n > 2147483647 ? n = 2147483647 : n < -2147483648 && (n = -2147483648), n = +n, isNaN(n) && (n = o ? 0 : e.length - 1), n < 0 && (n = e.length + n), n >= e.length) {if (o) return -1;n = e.length - 1;} else if (n < 0) {if (!o) return -1;n = 0;}if ("string" == typeof t && (t = Is.from(t, r)), Ds(t)) return 0 === t.length ? -1 : Ns(e, t, n, r, o);if ("number" == typeof t) return t &= 255, Is.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(e, t, n) : Uint8Array.prototype.lastIndexOf.call(e, t, n) : Ns(e, [t], n, r, o);throw new TypeError("val must be string, number or Buffer");}function Ns(e, t, n, r, o) {var i,s = 1,a = e.length,u = t.length;if (void 0 !== r && ("ucs2" === (r = String(r).toLowerCase()) || "ucs-2" === r || "utf16le" === r || "utf-16le" === r)) {if (e.length < 2 || t.length < 2) return -1;s = 2, a /= 2, u /= 2, n /= 2;}function c(e, t) {return 1 === s ? e[t] : e.readUInt16BE(t * s);}if (o) {var l = -1;for (i = n; i < a; i++) {if (c(e, i) === c(t, -1 === l ? 0 : i - l)) {if (-1 === l && (l = i), i - l + 1 === u) return l * s;} else -1 !== l && (i -= i - l), l = -1;}} else for (n + u > a && (n = a - u), i = n; i >= 0; i--) {for (var p = !0, h = 0; h < u; h++) {if (c(e, i + h) !== c(t, h)) {p = !1;break;}}if (p) return i;}return -1;}function Ls(e, t, n, r) {n = Number(n) || 0;var o = e.length - n;r ? (r = Number(r)) > o && (r = o) : r = o;var i = t.length;if (i % 2 != 0) throw new TypeError("Invalid hex string");r > i / 2 && (r = i / 2);for (var s = 0; s < r; ++s) {var a = parseInt(t.substr(2 * s, 2), 16);if (isNaN(a)) return s;e[n + s] = a;}return s;}function ws(e, t, n, r) {return ta(Zs(t, e.length - n), e, n, r);}function Ps(e, t, n, r) {return ta(function (e) {for (var t = [], n = 0; n < e.length; ++n) {t.push(255 & e.charCodeAt(n));}return t;}(t), e, n, r);}function Gs(e, t, n, r) {return Ps(e, t, n, r);}function bs(e, t, n, r) {return ta(ea(t), e, n, r);}function Us(e, t, n, r) {return ta(function (e, t) {for (var n, r, o, i = [], s = 0; s < e.length && !((t -= 2) < 0); ++s) {n = e.charCodeAt(s), r = n >> 8, o = n % 256, i.push(o), i.push(r);}return i;}(t, e.length - n), e, n, r);}function qs(e, t, n) {return 0 === t && n === e.length ? ds(e) : ds(e.slice(t, n));}function xs(e, t, n) {n = Math.min(e.length, n);for (var r = [], o = t; o < n;) {var i,s,a,u,c = e[o],l = null,p = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;if (o + p <= n) switch (p) {case 1:c < 128 && (l = c);break;case 2:128 == (192 & (i = e[o + 1])) && (u = (31 & c) << 6 | 63 & i) > 127 && (l = u);break;case 3:i = e[o + 1], s = e[o + 2], 128 == (192 & i) && 128 == (192 & s) && (u = (15 & c) << 12 | (63 & i) << 6 | 63 & s) > 2047 && (u < 55296 || u > 57343) && (l = u);break;case 4:i = e[o + 1], s = e[o + 2], a = e[o + 3], 128 == (192 & i) && 128 == (192 & s) && 128 == (192 & a) && (u = (15 & c) << 18 | (63 & i) << 12 | (63 & s) << 6 | 63 & a) > 65535 && u < 1114112 && (l = u);}null === l ? (l = 65533, p = 1) : l > 65535 && (l -= 65536, r.push(l >>> 10 & 1023 | 55296), l = 56320 | 1023 & l), r.push(l), o += p;}return function (e) {var t = e.length;if (t <= 4096) return String.fromCharCode.apply(String, e);var n = "",r = 0;for (; r < t;) {n += String.fromCharCode.apply(String, e.slice(r, r += 4096));}return n;}(r);}Is.TYPED_ARRAY_SUPPORT = void 0 === B.TYPED_ARRAY_SUPPORT || B.TYPED_ARRAY_SUPPORT, Is.poolSize = 8192, Is._augment = function (e) {return e.__proto__ = Is.prototype, e;}, Is.from = function (e, t, n) {return Ms(null, e, t, n);}, Is.TYPED_ARRAY_SUPPORT && (Is.prototype.__proto__ = Uint8Array.prototype, Is.__proto__ = Uint8Array), Is.alloc = function (e, t, n) {return function (e, t, n, r) {return Cs(t), t <= 0 ? vs(e, t) : void 0 !== n ? "string" == typeof r ? vs(e, t).fill(n, r) : vs(e, t).fill(n) : vs(e, t);}(null, e, t, n);}, Is.allocUnsafe = function (e) {return Es(null, e);}, Is.allocUnsafeSlow = function (e) {return Es(null, e);}, Is.isBuffer = function (e) {return null != e && (!!e._isBuffer || na(e) || function (e) {return "function" == typeof e.readFloatLE && "function" == typeof e.slice && na(e.slice(0, 0));}(e));}, Is.compare = function (e, t) {if (!Ds(e) || !Ds(t)) throw new TypeError("Arguments must be Buffers");if (e === t) return 0;for (var n = e.length, r = t.length, o = 0, i = Math.min(n, r); o < i; ++o) {if (e[o] !== t[o]) {n = e[o], r = t[o];break;}}return n < r ? -1 : r < n ? 1 : 0;}, Is.isEncoding = function (e) {switch (String(e).toLowerCase()) {case "hex":case "utf8":case "utf-8":case "ascii":case "latin1":case "binary":case "base64":case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":return !0;default:return !1;}}, Is.concat = function (e, t) {if (!_s(e)) throw new TypeError('"list" argument must be an Array of Buffers');if (0 === e.length) return Is.alloc(0);var n;if (void 0 === t) for (t = 0, n = 0; n < e.length; ++n) {t += e[n].length;}var r = Is.allocUnsafe(t),o = 0;for (n = 0; n < e.length; ++n) {var i = e[n];if (!Ds(i)) throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r, o), o += i.length;}return r;}, Is.byteLength = As, Is.prototype._isBuffer = !0, Is.prototype.swap16 = function () {var e = this.length;if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");for (var t = 0; t < e; t += 2) {Rs(this, t, t + 1);}return this;}, Is.prototype.swap32 = function () {var e = this.length;if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");for (var t = 0; t < e; t += 4) {Rs(this, t, t + 3), Rs(this, t + 1, t + 2);}return this;}, Is.prototype.swap64 = function () {var e = this.length;if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");for (var t = 0; t < e; t += 8) {Rs(this, t, t + 7), Rs(this, t + 1, t + 6), Rs(this, t + 2, t + 5), Rs(this, t + 3, t + 4);}return this;}, Is.prototype.toString = function () {var e = 0 | this.length;return 0 === e ? "" : 0 === arguments.length ? xs(this, 0, e) : ks.apply(this, arguments);}, Is.prototype.equals = function (e) {if (!Ds(e)) throw new TypeError("Argument must be a Buffer");return this === e || 0 === Is.compare(this, e);}, Is.prototype.inspect = function () {var e = "";return this.length > 0 && (e = this.toString("hex", 0, 50).match(/.{2}/g).join(" "), this.length > 50 && (e += " ... ")), "<Buffer " + e + ">";}, Is.prototype.compare = function (e, t, n, r, o) {if (!Ds(e)) throw new TypeError("Argument must be a Buffer");if (void 0 === t && (t = 0), void 0 === n && (n = e ? e.length : 0), void 0 === r && (r = 0), void 0 === o && (o = this.length), t < 0 || n > e.length || r < 0 || o > this.length) throw new RangeError("out of range index");if (r >= o && t >= n) return 0;if (r >= o) return -1;if (t >= n) return 1;if (this === e) return 0;for (var i = (o >>>= 0) - (r >>>= 0), s = (n >>>= 0) - (t >>>= 0), a = Math.min(i, s), u = this.slice(r, o), c = e.slice(t, n), l = 0; l < a; ++l) {if (u[l] !== c[l]) {i = u[l], s = c[l];break;}}return i < s ? -1 : s < i ? 1 : 0;}, Is.prototype.includes = function (e, t, n) {return -1 !== this.indexOf(e, t, n);}, Is.prototype.indexOf = function (e, t, n) {return Os(this, e, t, n, !0);}, Is.prototype.lastIndexOf = function (e, t, n) {return Os(this, e, t, n, !1);}, Is.prototype.write = function (e, t, n, r) {if (void 0 === t) r = "utf8", n = this.length, t = 0;else if (void 0 === n && "string" == typeof t) r = t, n = this.length, t = 0;else {if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t |= 0, isFinite(n) ? (n |= 0, void 0 === r && (r = "utf8")) : (r = n, n = void 0);}var o = this.length - t;if ((void 0 === n || n > o) && (n = o), e.length > 0 && (n < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");r || (r = "utf8");for (var i = !1;;) {switch (r) {case "hex":return Ls(this, e, t, n);case "utf8":case "utf-8":return ws(this, e, t, n);case "ascii":return Ps(this, e, t, n);case "latin1":case "binary":return Gs(this, e, t, n);case "base64":return bs(this, e, t, n);case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":return Us(this, e, t, n);default:if (i) throw new TypeError("Unknown encoding: " + r);r = ("" + r).toLowerCase(), i = !0;}}}, Is.prototype.toJSON = function () {return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };};function Fs(e, t, n) {var r = "";n = Math.min(e.length, n);for (var o = t; o < n; ++o) {r += String.fromCharCode(127 & e[o]);}return r;}function Vs(e, t, n) {var r = "";n = Math.min(e.length, n);for (var o = t; o < n; ++o) {r += String.fromCharCode(e[o]);}return r;}function Ks(e, t, n) {var r = e.length;(!t || t < 0) && (t = 0), (!n || n < 0 || n > r) && (n = r);for (var o = "", i = t; i < n; ++i) {o += Qs(e[i]);}return o;}function Bs(e, t, n) {for (var r = e.slice(t, n), o = "", i = 0; i < r.length; i += 2) {o += String.fromCharCode(r[i] + 256 * r[i + 1]);}return o;}function Hs(e, t, n) {if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");if (e + t > n) throw new RangeError("Trying to access beyond buffer length");}function js(e, t, n, r, o, i) {if (!Ds(e)) throw new TypeError('"buffer" argument must be a Buffer instance');if (t > o || t < i) throw new RangeError('"value" argument is out of bounds');if (n + r > e.length) throw new RangeError("Index out of range");}function Ys(e, t, n, r) {t < 0 && (t = 65535 + t + 1);for (var o = 0, i = Math.min(e.length - n, 2); o < i; ++o) {e[n + o] = (t & 255 << 8 * (r ? o : 1 - o)) >>> 8 * (r ? o : 1 - o);}}function $s(e, t, n, r) {t < 0 && (t = 4294967295 + t + 1);for (var o = 0, i = Math.min(e.length - n, 4); o < i; ++o) {e[n + o] = t >>> 8 * (r ? o : 3 - o) & 255;}}function Ws(e, t, n, r, o, i) {if (n + r > e.length) throw new RangeError("Index out of range");if (n < 0) throw new RangeError("Index out of range");}function zs(e, t, n, r, o) {return o || Ws(e, 0, n, 4), gs(e, t, n, r, 23, 4), n + 4;}function Xs(e, t, n, r, o) {return o || Ws(e, 0, n, 8), gs(e, t, n, r, 52, 8), n + 8;}Is.prototype.slice = function (e, t) {var n,r = this.length;if ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r), (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r), t < e && (t = e), Is.TYPED_ARRAY_SUPPORT) (n = this.subarray(e, t)).__proto__ = Is.prototype;else {var o = t - e;n = new Is(o, void 0);for (var i = 0; i < o; ++i) {n[i] = this[i + e];}}return n;}, Is.prototype.readUIntLE = function (e, t, n) {e |= 0, t |= 0, n || Hs(e, t, this.length);for (var r = this[e], o = 1, i = 0; ++i < t && (o *= 256);) {r += this[e + i] * o;}return r;}, Is.prototype.readUIntBE = function (e, t, n) {e |= 0, t |= 0, n || Hs(e, t, this.length);for (var r = this[e + --t], o = 1; t > 0 && (o *= 256);) {r += this[e + --t] * o;}return r;}, Is.prototype.readUInt8 = function (e, t) {return t || Hs(e, 1, this.length), this[e];}, Is.prototype.readUInt16LE = function (e, t) {return t || Hs(e, 2, this.length), this[e] | this[e + 1] << 8;}, Is.prototype.readUInt16BE = function (e, t) {return t || Hs(e, 2, this.length), this[e] << 8 | this[e + 1];}, Is.prototype.readUInt32LE = function (e, t) {return t || Hs(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3];}, Is.prototype.readUInt32BE = function (e, t) {return t || Hs(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);}, Is.prototype.readIntLE = function (e, t, n) {e |= 0, t |= 0, n || Hs(e, t, this.length);for (var r = this[e], o = 1, i = 0; ++i < t && (o *= 256);) {r += this[e + i] * o;}return r >= (o *= 128) && (r -= Math.pow(2, 8 * t)), r;}, Is.prototype.readIntBE = function (e, t, n) {e |= 0, t |= 0, n || Hs(e, t, this.length);for (var r = t, o = 1, i = this[e + --r]; r > 0 && (o *= 256);) {i += this[e + --r] * o;}return i >= (o *= 128) && (i -= Math.pow(2, 8 * t)), i;}, Is.prototype.readInt8 = function (e, t) {return t || Hs(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e];}, Is.prototype.readInt16LE = function (e, t) {t || Hs(e, 2, this.length);var n = this[e] | this[e + 1] << 8;return 32768 & n ? 4294901760 | n : n;}, Is.prototype.readInt16BE = function (e, t) {t || Hs(e, 2, this.length);var n = this[e + 1] | this[e] << 8;return 32768 & n ? 4294901760 | n : n;}, Is.prototype.readInt32LE = function (e, t) {return t || Hs(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;}, Is.prototype.readInt32BE = function (e, t) {return t || Hs(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];}, Is.prototype.readFloatLE = function (e, t) {return t || Hs(e, 4, this.length), fs(this, e, !0, 23, 4);}, Is.prototype.readFloatBE = function (e, t) {return t || Hs(e, 4, this.length), fs(this, e, !1, 23, 4);}, Is.prototype.readDoubleLE = function (e, t) {return t || Hs(e, 8, this.length), fs(this, e, !0, 52, 8);}, Is.prototype.readDoubleBE = function (e, t) {return t || Hs(e, 8, this.length), fs(this, e, !1, 52, 8);}, Is.prototype.writeUIntLE = function (e, t, n, r) {(e = +e, t |= 0, n |= 0, r) || js(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);var o = 1,i = 0;for (this[t] = 255 & e; ++i < n && (o *= 256);) {this[t + i] = e / o & 255;}return t + n;}, Is.prototype.writeUIntBE = function (e, t, n, r) {(e = +e, t |= 0, n |= 0, r) || js(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);var o = n - 1,i = 1;for (this[t + o] = 255 & e; --o >= 0 && (i *= 256);) {this[t + o] = e / i & 255;}return t + n;}, Is.prototype.writeUInt8 = function (e, t, n) {return e = +e, t |= 0, n || js(this, e, t, 1, 255, 0), Is.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), this[t] = 255 & e, t + 1;}, Is.prototype.writeUInt16LE = function (e, t, n) {return e = +e, t |= 0, n || js(this, e, t, 2, 65535, 0), Is.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : Ys(this, e, t, !0), t + 2;}, Is.prototype.writeUInt16BE = function (e, t, n) {return e = +e, t |= 0, n || js(this, e, t, 2, 65535, 0), Is.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : Ys(this, e, t, !1), t + 2;}, Is.prototype.writeUInt32LE = function (e, t, n) {return e = +e, t |= 0, n || js(this, e, t, 4, 4294967295, 0), Is.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e) : $s(this, e, t, !0), t + 4;}, Is.prototype.writeUInt32BE = function (e, t, n) {return e = +e, t |= 0, n || js(this, e, t, 4, 4294967295, 0), Is.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : $s(this, e, t, !1), t + 4;}, Is.prototype.writeIntLE = function (e, t, n, r) {if (e = +e, t |= 0, !r) {var o = Math.pow(2, 8 * n - 1);js(this, e, t, n, o - 1, -o);}var i = 0,s = 1,a = 0;for (this[t] = 255 & e; ++i < n && (s *= 256);) {e < 0 && 0 === a && 0 !== this[t + i - 1] && (a = 1), this[t + i] = (e / s >> 0) - a & 255;}return t + n;}, Is.prototype.writeIntBE = function (e, t, n, r) {if (e = +e, t |= 0, !r) {var o = Math.pow(2, 8 * n - 1);js(this, e, t, n, o - 1, -o);}var i = n - 1,s = 1,a = 0;for (this[t + i] = 255 & e; --i >= 0 && (s *= 256);) {e < 0 && 0 === a && 0 !== this[t + i + 1] && (a = 1), this[t + i] = (e / s >> 0) - a & 255;}return t + n;}, Is.prototype.writeInt8 = function (e, t, n) {return e = +e, t |= 0, n || js(this, e, t, 1, 127, -128), Is.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1;}, Is.prototype.writeInt16LE = function (e, t, n) {return e = +e, t |= 0, n || js(this, e, t, 2, 32767, -32768), Is.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : Ys(this, e, t, !0), t + 2;}, Is.prototype.writeInt16BE = function (e, t, n) {return e = +e, t |= 0, n || js(this, e, t, 2, 32767, -32768), Is.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : Ys(this, e, t, !1), t + 2;}, Is.prototype.writeInt32LE = function (e, t, n) {return e = +e, t |= 0, n || js(this, e, t, 4, 2147483647, -2147483648), Is.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24) : $s(this, e, t, !0), t + 4;}, Is.prototype.writeInt32BE = function (e, t, n) {return e = +e, t |= 0, n || js(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), Is.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : $s(this, e, t, !1), t + 4;}, Is.prototype.writeFloatLE = function (e, t, n) {return zs(this, e, t, !0, n);}, Is.prototype.writeFloatBE = function (e, t, n) {return zs(this, e, t, !1, n);}, Is.prototype.writeDoubleLE = function (e, t, n) {return Xs(this, e, t, !0, n);}, Is.prototype.writeDoubleBE = function (e, t, n) {return Xs(this, e, t, !1, n);}, Is.prototype.copy = function (e, t, n, r) {if (n || (n = 0), r || 0 === r || (r = this.length), t >= e.length && (t = e.length), t || (t = 0), r > 0 && r < n && (r = n), r === n) return 0;if (0 === e.length || 0 === this.length) return 0;if (t < 0) throw new RangeError("targetStart out of bounds");if (n < 0 || n >= this.length) throw new RangeError("sourceStart out of bounds");if (r < 0) throw new RangeError("sourceEnd out of bounds");r > this.length && (r = this.length), e.length - t < r - n && (r = e.length - t + n);var o,i = r - n;if (this === e && n < t && t < r) for (o = i - 1; o >= 0; --o) {e[o + t] = this[o + n];} else if (i < 1e3 || !Is.TYPED_ARRAY_SUPPORT) for (o = 0; o < i; ++o) {e[o + t] = this[o + n];} else Uint8Array.prototype.set.call(e, this.subarray(n, n + i), t);return i;}, Is.prototype.fill = function (e, t, n, r) {if ("string" == typeof e) {if ("string" == typeof t ? (r = t, t = 0, n = this.length) : "string" == typeof n && (r = n, n = this.length), 1 === e.length) {var o = e.charCodeAt(0);o < 256 && (e = o);}if (void 0 !== r && "string" != typeof r) throw new TypeError("encoding must be a string");if ("string" == typeof r && !Is.isEncoding(r)) throw new TypeError("Unknown encoding: " + r);} else "number" == typeof e && (e &= 255);if (t < 0 || this.length < t || this.length < n) throw new RangeError("Out of range index");if (n <= t) return this;var i;if (t >>>= 0, n = void 0 === n ? this.length : n >>> 0, e || (e = 0), "number" == typeof e) for (i = t; i < n; ++i) {this[i] = e;} else {var s = Ds(e) ? e : Zs(new Is(e, r).toString()),a = s.length;for (i = 0; i < n - t; ++i) {this[i + t] = s[i % a];}}return this;};var Js = /[^+\/0-9A-Za-z-_]/g;function Qs(e) {return e < 16 ? "0" + e.toString(16) : e.toString(16);}function Zs(e, t) {var n;t = t || Infinity;for (var r = e.length, o = null, i = [], s = 0; s < r; ++s) {if ((n = e.charCodeAt(s)) > 55295 && n < 57344) {if (!o) {if (n > 56319) {(t -= 3) > -1 && i.push(239, 191, 189);continue;}if (s + 1 === r) {(t -= 3) > -1 && i.push(239, 191, 189);continue;}o = n;continue;}if (n < 56320) {(t -= 3) > -1 && i.push(239, 191, 189), o = n;continue;}n = 65536 + (o - 55296 << 10 | n - 56320);} else o && (t -= 3) > -1 && i.push(239, 191, 189);if (o = null, n < 128) {if ((t -= 1) < 0) break;i.push(n);} else if (n < 2048) {if ((t -= 2) < 0) break;i.push(n >> 6 | 192, 63 & n | 128);} else if (n < 65536) {if ((t -= 3) < 0) break;i.push(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128);} else {if (!(n < 1114112)) throw new Error("Invalid code point");if ((t -= 4) < 0) break;i.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128);}}return i;}function ea(e) {return function (e) {var t, n, r, o, i, s;ls || ps();var a = e.length;if (a % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");i = "=" === e[a - 2] ? 2 : "=" === e[a - 1] ? 1 : 0, s = new cs(3 * a / 4 - i), r = i > 0 ? a - 4 : a;var u = 0;for (t = 0, n = 0; t < r; t += 4, n += 3) {o = us[e.charCodeAt(t)] << 18 | us[e.charCodeAt(t + 1)] << 12 | us[e.charCodeAt(t + 2)] << 6 | us[e.charCodeAt(t + 3)], s[u++] = o >> 16 & 255, s[u++] = o >> 8 & 255, s[u++] = 255 & o;}return 2 === i ? (o = us[e.charCodeAt(t)] << 2 | us[e.charCodeAt(t + 1)] >> 4, s[u++] = 255 & o) : 1 === i && (o = us[e.charCodeAt(t)] << 10 | us[e.charCodeAt(t + 1)] << 4 | us[e.charCodeAt(t + 2)] >> 2, s[u++] = o >> 8 & 255, s[u++] = 255 & o), s;}(function (e) {if ((e = function (e) {return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "");}(e).replace(Js, "")).length < 2) return "";for (; e.length % 4 != 0;) {e += "=";}return e;}(e));}function ta(e, t, n, r) {for (var o = 0; o < r && !(o + n >= t.length || o >= e.length); ++o) {t[o + n] = e[o];}return o;}function na(e) {return !!e.constructor && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e);}var ra = function (e) {c(n, e);var t = _(n);function n() {var e;return r(this, n), (e = t.call(this)).retry = 2, e._request = e.promisify(wx.request), e;}return i(n, [{ key: "request", value: function value(e) {return this._checkOptions(e), this._initOptions(e), e = u({}, e, { responseType: "text" }), this._requestWithRetry(e);} }, { key: "_requestWithRetry", value: function value(e) {var t = this,n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;return this._request(e).then(this._handleResolve).catch(function (r) {if (ee(r.errMsg)) {if (r.errMsg.includes("abort")) return Fr({});if (r.errMsg.includes("timeout")) return t.retry > 0 && n < t.retry ? t._requestWithRetry(e, ++n) : Vr(new ht({ code: dt.NETWORK_TIMEOUT, message: r.errMsg }));if (r.errMsg.includes("fail")) return t.retry > 0 && n < t.retry ? t._requestWithRetry(e, ++n) : Vr(new ht({ code: dt.NETWORK_ERROR, message: r.errMsg }));}return Vr(new ht(u({ code: dt.UNCAUGHT_ERROR, message: r.message }, r)));});} }, { key: "_handleResolve", value: function value(e) {var t = e.data,n = t.error_code,r = t.ErrorCode;return "number" == typeof n && (r = n), r !== Pe.SUCCESS && (e.data.ErrorCode = Number("".concat(r))), e;} }, { key: "promisify", value: function value(e) {return function (t) {return new Promise(function (n, r) {var o = e(Object.assign({}, t, { success: n, fail: r }));t.updateAbort && t.updateAbort(function () {o && se(o.abort) && o.abort();});});};} }]), n;}(is),oa = function () {function e() {r(this, e), this.request = 0, this.success = 0, this.fail = 0, this.reportRate = 10, this.requestTimeCost = [];}return i(e, [{ key: "report", value: function value() {if (1 !== this.request) {if (this.request % this.reportRate != 0) return null;var e = this.avgRequestTime(),t = "runLoop reports: success=".concat(this.success, ",fail=").concat(this.fail, ",total=").concat(this.request, ",avg=").concat(e, ",cur=").concat(this.requestTimeCost[this.requestTimeCost.length - 1], ",max=").concat(Math.max.apply(null, this.requestTimeCost), ",min=").concat(Math.min.apply(null, this.requestTimeCost));J.log(t);}} }, { key: "setRequestTime", value: function value(e, t) {var n = Math.abs(t - e);100 === this.requestTimeCost.length && this.requestTimeCost.shift(), this.requestTimeCost.push(n);} }, { key: "avgRequestTime", value: function value() {for (var e, t = this.requestTimeCost.length, n = 0, r = 0; r < t; r++) {n += this.requestTimeCost[r];}return e = n / t, Math.round(100 * e) / 100;} }]), e;}(),ia = rs.create({ timeout: 6e3, headers: { "Content-Type": "application/x-www-form-urlencoded;charset=UTF-8" } });ia.interceptors.response.use(function (e) {var t = e.data,n = t.error_code,r = t.ErrorCode;return Z(n) && (r = n), r !== Pe.SUCCESS && (e.data.ErrorCode = Number(r)), e;}, function (e) {return "Network Error" === e.message && (!0 === ia.defaults.withCredentials && J.warn("Network Error, try to close `IMAxiosAVChatroom.defaults.withCredentials` to false. (IMAxiosAVChatroom.js)"), ia.defaults.withCredentials = !1), Promise.reject(e);});var sa = rs.CancelToken,aa = function () {function e(t) {r(this, e), this._initializeOptions(t), this._initializeMembers(), this.status = new oa();}return i(e, [{ key: "destructor", value: function value() {clearTimeout(this._seedID);var e = this._index();for (var t in this) {Object.prototype.hasOwnProperty.call(this, t) && (this[t] = null);}return e;} }, { key: "setIndex", value: function value(e) {this._index = e;} }, { key: "getIndex", value: function value() {return this._index;} }, { key: "isRunning", value: function value() {return !this._stoped;} }, { key: "_initializeOptions", value: function value(e) {this.options = e;} }, { key: "_initializeMembers", value: function value() {this._index = -1, this._seedID = 0, this._requestStatus = !1, this._stoped = !1, this._intervalTime = 0, this._intervalIncreaseStep = 1e3, this._intervalDecreaseStep = 1e3, this._intervalTimeMax = 5e3, this._protectTimeout = 3e3, this._getNoticeSeq = this.options.getNoticeSeq, this._retryCount = 0, this._responseTime = Date.now(), this._responseTimeThreshold = 2e3, this.options.isAVChatRoomLoop ? this.requestor = ia : this.requestor = os, J.log("XHRRunLoop._initializeMembers isAVChatRoomLoop=".concat(!!this.options.isAVChatRoomLoop)), this.abort = null;} }, { key: "start", value: function value() {0 === this._seedID ? (this._stoped = !1, this._send()) : J.log('XHRRunLoop.start(), XHRRunLoop is running now, if you want to restart runLoop , please run "stop()" first.');} }, { key: "_reset", value: function value() {J.log("XHRRunLoop._reset(), reset long poll _intervalTime", this._intervalTime), this.stop(), this.start();} }, { key: "_intervalTimeIncrease", value: function value() {this._intervalTime !== this._responseTimeThreshold && (this._intervalTime < this._responseTimeThreshold && (this._intervalTime += this._intervalIncreaseStep), this._intervalTime > this._responseTimeThreshold && (this._intervalTime = this._responseTimeThreshold));} }, { key: "_intervalTimeDecrease", value: function value() {0 !== this._intervalTime && (this._intervalTime > 0 && (this._intervalTime -= this._intervalDecreaseStep), this._intervalTime < 0 && (this._intervalTime = 0));} }, { key: "_intervalTimeAdjustment", value: function value() {var e = Date.now();100 * Math.floor((e - this._responseTime) / 100) <= this._responseTimeThreshold ? this._intervalTimeIncrease() : this._intervalTimeDecrease(), this._responseTime = e;} }, { key: "_intervalTimeAdjustmentBaseOnResponseData", value: function value(e) {e.ErrorCode === Pe.SUCCESS ? this._intervalTimeDecrease() : this._intervalTimeIncrease();} }, { key: "_send", value: function value() {var e = this;if (!0 !== this._requestStatus) {this._requestStatus = !0, this.status.request++, "function" == typeof this.options.before && this.options.before(this.options.pack.requestData);var t = Date.now(),n = 0;this.requestor.request({ url: this.options.pack.getUrl(), data: this.options.pack.requestData, method: this.options.pack.method, cancelToken: new sa(function (t) {e.abort = t;}) }).then(function (r) {if (e._intervalTimeAdjustmentBaseOnResponseData.bind(e)(r.data), e._retryCount > 0 && (e._retryCount = 0), e.status.success++, n = Date.now(), e.status.setRequestTime(t, n), r.data.timecost = n - t, "function" == typeof e.options.success) try {e.options.success({ pack: e.options.pack, error: !1, data: e.options.pack.callback(r.data) });} catch (o) {J.warn("XHRRunLoop._send(), error:", o);}e._requestStatus = !1, !1 === e._stoped && (e._seedID = setTimeout(e._send.bind(e), e._intervalTime)), e.status.report();}).catch(function (r) {if (e.status.fail++, e._retryCount++, e._intervalTimeAdjustment.bind(e)(), !1 === e._stoped && (e._seedID = setTimeout(e._send.bind(e), e._intervalTime)), e._requestStatus = !1, "function" == typeof e.options.fail && void 0 !== r.request) try {e.options.fail({ pack: e.options.pack, error: r, data: !1 });} catch (o) {J.warn("XHRRunLoop._send(), fail callback error:", o), J.error(o);}n = Date.now(), e.status.setRequestTime(t, n), e.status.report();});}} }, { key: "stop", value: function value() {this._clearAllTimeOut(), this._stoped = !0;} }, { key: "_clearAllTimeOut", value: function value() {clearTimeout(this._seedID), this._seedID = 0;} }]), e;}(),ua = function () {function e(t) {r(this, e), this._initializeOptions(t), this._initializeMembers(), this.status = new oa();}return i(e, [{ key: "destructor", value: function value() {clearTimeout(this._seedID);var e = this._index();for (var t in this) {Object.prototype.hasOwnProperty.call(this, t) && (this[t] = null);}return e;} }, { key: "setIndex", value: function value(e) {this._index = e;} }, { key: "isRunning", value: function value() {return !this._stoped;} }, { key: "getIndex", value: function value() {return this._index;} }, { key: "_initializeOptions", value: function value(e) {this.options = e;} }, { key: "_initializeMembers", value: function value() {this._index = -1, this._seedID = 0, this._requestStatus = !1, this._stoped = !1, this._intervalTime = 0, this._intervalIncreaseStep = 1e3, this._intervalDecreaseStep = 1e3, this._intervalTimeMax = 5e3, this._protectTimeout = 3e3, this._getNoticeSeq = this.options.getNoticeSeq, this._retryCount = 0, this._responseTime = Date.now(), this._responseTimeThreshold = 2e3, this.requestor = new ra(), this.abort = null;} }, { key: "start", value: function value() {0 === this._seedID ? (this._stoped = !1, this._send()) : J.log('WXRunLoop.start(): WXRunLoop is running now, if you want to restart runLoop , please run "stop()" first.');} }, { key: "_reset", value: function value() {J.log("WXRunLoop.reset(), long poll _intervalMaxRate", this._intervalMaxRate), this.stop(), this.start();} }, { key: "_intervalTimeIncrease", value: function value() {this._intervalTime !== this._responseTimeThreshold && (this._intervalTime < this._responseTimeThreshold && (this._intervalTime += this._intervalIncreaseStep), this._intervalTime > this._responseTimeThreshold && (this._intervalTime = this._responseTimeThreshold));} }, { key: "_intervalTimeDecrease", value: function value() {0 !== this._intervalTime && (this._intervalTime > 0 && (this._intervalTime -= this._intervalDecreaseStep), this._intervalTime < 0 && (this._intervalTime = 0));} }, { key: "_intervalTimeAdjustment", value: function value() {var e = Date.now();100 * Math.floor((e - this._responseTime) / 100) <= this._responseTimeThreshold ? this._intervalTimeIncrease() : this._intervalTimeDecrease(), this._responseTime = e;} }, { key: "_intervalTimeAdjustmentBaseOnResponseData", value: function value(e) {e.ErrorCode === Pe.SUCCESS ? this._intervalTimeDecrease() : this._intervalTimeIncrease();} }, { key: "_send", value: function value() {var e = this;if (!0 !== this._requestStatus) {var t = this;this._requestStatus = !0, this.status.request++, "function" == typeof this.options.before && this.options.before(t.options.pack.requestData);var n = Date.now(),r = 0;this.requestor.request({ url: t.options.pack.getUrl(), data: t.options.pack.requestData, method: t.options.pack.method, updateAbort: function updateAbort(t) {e.abort = t;} }).then(function (o) {if (t._intervalTimeAdjustmentBaseOnResponseData.bind(e)(o.data), t._retryCount > 0 && (t._retryCount = 0), e.status.success++, r = Date.now(), e.status.setRequestTime(n, r), o.data.timecost = r - n, "function" == typeof t.options.success) try {e.options.success({ pack: e.options.pack, error: !1, data: e.options.pack.callback(o.data) });} catch (i) {J.warn("WXRunLoop._send(), error:", i);}t._requestStatus = !1, !1 === t._stoped && (t._seedID = setTimeout(t._send.bind(t), t._intervalTime)), e.status.report();}).catch(function (o) {if (e.status.fail++, t._retryCount++, t._intervalTimeAdjustment.bind(e)(), !1 === t._stoped && (t._seedID = setTimeout(t._send.bind(t), t._intervalTime)), t._requestStatus = !1, "function" == typeof t.options.fail) try {e.options.fail({ pack: e.options.pack, error: o, data: !1 });} catch (i) {J.warn("WXRunLoop._send(), fail callback error:", i), J.error(i);}r = Date.now(), e.status.setRequestTime(n, r), e.status.report();});}} }, { key: "stop", value: function value() {this._clearAllTimeOut(), this._stoped = !0;} }, { key: "_clearAllTimeOut", value: function value() {clearTimeout(this._seedID), this._seedID = 0;} }]), e;}(),ca = function () {function e(t) {r(this, e), this.tim = t, this.httpConnection = N ? new ra() : new ss(), this.keepAliveConnections = [];}return i(e, [{ key: "initializeListener", value: function value() {this.tim.innerEmitter.on(_r, this._stopAllRunLoop, this);} }, { key: "request", value: function value(e) {var t = { url: e.url, data: e.requestData, method: e.method, callback: e.callback };return this.httpConnection.request(t).then(function (t) {return t.data = e.callback(t.data), t.data.errorCode !== Pe.SUCCESS ? Vr(new ht({ code: t.data.errorCode, message: t.data.errorInfo })) : t;});} }, { key: "createRunLoop", value: function value(e) {var t = this.createKeepAliveConnection(e);return t.setIndex(this.keepAliveConnections.push(t) - 1), t;} }, { key: "stopRunLoop", value: function value(e) {e.stop();} }, { key: "_stopAllRunLoop", value: function value() {for (var e = this.keepAliveConnections.length, t = 0; t < e; t++) {this.keepAliveConnections[t].stop();}} }, { key: "destroyRunLoop", value: function value(e) {e.stop();var t = e.destructor();this.keepAliveConnections.slice(t, 1);} }, { key: "startRunLoopExclusive", value: function value(e) {for (var t = e.getIndex(), n = 0; n < this.keepAliveConnections.length; n++) {n !== t && this.keepAliveConnections[n].stop();}e.start();} }, { key: "createKeepAliveConnection", value: function value(e) {return N ? new ua(e) : (this.tim.options.runLoopNetType === Je || this.tim.options.runLoopNetType, new aa(e));} }, { key: "clearAll", value: function value() {this.conn.cancelAll();} }, { key: "reset", value: function value() {this.keepAliveConnections = [];} }]), e;}(),la = function () {function t(e) {r(this, t), this.tim = e, this.tim.innerEmitter.on(Ir, this._onErrorDetected, this);}return i(t, [{ key: "_onErrorDetected", value: function value(t) {var n = t.data,r = new Br();r.setMethod($o).setStart(), r.setCode(0).setText("code=".concat(n.code, " message=").concat(n.message)).setNetworkType(this.tim.netMonitor.getNetworkType()).setEnd(), n.code ? J.warn("Oops! code:".concat(n.code, " message:").concat(n.message)) : J.warn("Oops! message:".concat(n.message, " stack:").concat(n.stack)), this.tim.outerEmitter.emit(e.ERROR, n);} }]), t;}(),pa = function () {function e(n) {var o = this;r(this, e), Oe(n) || (this.userID = n.userID || "", this.nick = n.nick || "", this.gender = n.gender || "", this.birthday = n.birthday || 0, this.location = n.location || "", this.selfSignature = n.selfSignature || "", this.allowType = n.allowType || t.ALLOW_TYPE_ALLOW_ANY, this.language = n.language || 0, this.avatar = n.avatar || "", this.messageSettings = n.messageSettings || 0, this.adminForbidType = n.adminForbidType || t.FORBID_TYPE_NONE, this.level = n.level || 0, this.role = n.role || 0, this.lastUpdatedTime = 0, this.profileCustomField = [], Oe(n.profileCustomField) || n.profileCustomField.forEach(function (e) {o.profileCustomField.push({ key: e.key, value: e.value });}));}return i(e, [{ key: "validate", value: function value(e) {var t = !0,n = "";if (Oe(e)) return { valid: !1, tips: "empty options" };if (e.profileCustomField) for (var r = e.profileCustomField.length, o = null, i = 0; i < r; i++) {if (o = e.profileCustomField[i], !ee(o.key) || -1 === o.key.indexOf("Tag_Profile_Custom")) return { valid: !1, tips: "自定义资料字段的前缀必须是 Tag_Profile_Custom" };if (!ee(o.value)) return { valid: !1, tips: "自定义资料字段的 value 必须是字符串" };}for (var s in e) {if (Object.prototype.hasOwnProperty.call(e, s)) {if ("profileCustomField" === s) continue;if (Oe(e[s]) && !ee(e[s]) && !Z(e[s])) {n = "key:" + s + ", invalid value:" + e[s], t = !1;continue;}switch (s) {case "nick":ee(e[s]) || (n = "nick should be a string", t = !1), ge(e[s]) > 500 && (n = "nick name limited: must less than or equal to ".concat(500, " bytes, current size: ").concat(ge(e[s]), " bytes"), t = !1);break;case "gender":ve(tt, e.gender) || (n = "key:gender, invalid value:" + e.gender, t = !1);break;case "birthday":Z(e.birthday) || (n = "birthday should be a number", t = !1);break;case "location":ee(e.location) || (n = "location should be a string", t = !1);break;case "selfSignature":ee(e.selfSignature) || (n = "selfSignature should be a string", t = !1);break;case "allowType":ve(rt, e.allowType) || (n = "key:allowType, invalid value:" + e.allowType, t = !1);break;case "language":Z(e.language) || (n = "language should be a number", t = !1);break;case "avatar":ee(e.avatar) || (n = "avatar should be a string", t = !1);break;case "messageSettings":0 !== e.messageSettings && 1 !== e.messageSettings && (n = "messageSettings should be 0 or 1", t = !1);break;case "adminForbidType":ve(nt, e.adminForbidType) || (n = "key:adminForbidType, invalid value:" + e.adminForbidType, t = !1);break;case "level":Z(e.level) || (n = "level should be a number", t = !1);break;case "role":Z(e.role) || (n = "role should be a number", t = !1);break;default:n = "unknown key:" + s + "  " + e[s], t = !1;}}}return { valid: t, tips: n };} }]), e;}(),ha = function () {function t(e) {r(this, t), this.userController = e, this.TAG = "profile", this.Actions = { Q: "query", U: "update" }, this.accountProfileMap = new Map(), this.expirationTime = 864e5;}return i(t, [{ key: "setExpirationTime", value: function value(e) {this.expirationTime = e;} }, { key: "getUserProfile", value: function value(e) {var t = this,n = e.userIDList;e.fromAccount = this.userController.getMyAccount(), n.length > 100 && (J.warn("ProfileHandler.getUserProfile 获取用户资料人数不能超过100人"), n.length = 100);for (var r, o = [], i = [], s = 0, a = n.length; s < a; s++) {r = n[s], this.userController.isMyFriend(r) && this._containsAccount(r) ? i.push(this._getProfileFromMap(r)) : o.push(r);}if (0 === o.length) return Fr(i);e.toAccount = o;var u = e.bFromGetMyProfile || !1,c = [];e.toAccount.forEach(function (e) {c.push({ toAccount: e, standardSequence: 0, customSequence: 0 });}), e.userItem = c;var l = new Br();l.setMethod(Fo).setText(n.length > 5 ? "userIDList.length=".concat(n.length) : "userIDList=".concat(n)).setStart();var p = this.userController.generateConfig(this.TAG, this.Actions.Q, e);return this.userController.request(p).then(function (e) {l.setCode(0).setNetworkType(t.userController.getNetworkType()).setEnd(), J.info("ProfileHandler.getUserProfile ok");var n = t._handleResponse(e).concat(i);return u ? (t.userController.onGotMyProfile(), new Ur(n[0])) : new Ur(n);}).catch(function (e) {return t.userController.probeNetwork().then(function (t) {var n = y(t, 2),r = n[0],o = n[1];l.setError(e, r, o).setEnd();}), J.error("ProfileHandler.getUserProfile error:", e), Vr(e);});} }, { key: "getMyProfile", value: function value() {var e = this.userController.getMyAccount();if (J.log("ProfileHandler.getMyProfile myAccount=" + e), this._fillMap(), this._containsAccount(e)) {var t = this._getProfileFromMap(e);return J.debug("ProfileHandler.getMyProfile from cache, myProfile:" + JSON.stringify(t)), this.userController.onGotMyProfile(), Fr(t);}return this.getUserProfile({ fromAccount: e, userIDList: [e], bFromGetMyProfile: !0 });} }, { key: "_handleResponse", value: function value(e) {for (var t, n, r = pe.now(), o = e.data.userProfileItem, i = [], s = 0, a = o.length; s < a; s++) {"@TLS#NOT_FOUND" !== o[s].to && "" !== o[s].to && (t = o[s].to, n = this._updateMap(t, this._getLatestProfileFromResponse(t, o[s].profileItem)), i.push(n));}return J.log("ProfileHandler._handleResponse cost " + (pe.now() - r) + " ms"), i;} }, { key: "_getLatestProfileFromResponse", value: function value(e, t) {var n = {};if (n.userID = e, n.profileCustomField = [], !Oe(t)) for (var r = 0, o = t.length; r < o; r++) {if (t[r].tag.indexOf("Tag_Profile_Custom") > -1) n.profileCustomField.push({ key: t[r].tag, value: t[r].value });else switch (t[r].tag) {case et.NICK:n.nick = t[r].value;break;case et.GENDER:n.gender = t[r].value;break;case et.BIRTHDAY:n.birthday = t[r].value;break;case et.LOCATION:n.location = t[r].value;break;case et.SELFSIGNATURE:n.selfSignature = t[r].value;break;case et.ALLOWTYPE:n.allowType = t[r].value;break;case et.LANGUAGE:n.language = t[r].value;break;case et.AVATAR:n.avatar = t[r].value;break;case et.MESSAGESETTINGS:n.messageSettings = t[r].value;break;case et.ADMINFORBIDTYPE:n.adminForbidType = t[r].value;break;case et.LEVEL:n.level = t[r].value;break;case et.ROLE:n.role = t[r].value;break;default:J.warn("ProfileHandler._handleResponse unkown tag->", t[r].tag, t[r].value);}}return n;} }, { key: "updateMyProfile", value: function value(t) {var n = this,r = new Br();r.setMethod(Vo).setText(JSON.stringify(t)).setStart();var o = new pa().validate(t);if (!o.valid) return r.setCode(dt.UPDATE_PROFILE_INVALID_PARAM).setMessage("ProfileHandler.updateMyProfile info:".concat(o.tips)).setNetworkType(this.userController.getNetworkType()).setEnd(), J.error("ProfileHandler.updateMyProfile info:".concat(o.tips, "，请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#updateMyProfile")), Vr({ code: dt.UPDATE_PROFILE_INVALID_PARAM, message: on });var i = [];for (var s in t) {Object.prototype.hasOwnProperty.call(t, s) && ("profileCustomField" === s ? t.profileCustomField.forEach(function (e) {i.push({ tag: e.key, value: e.value });}) : i.push({ tag: et[s.toUpperCase()], value: t[s] }));}if (0 === i.length) return r.setCode(dt.UPDATE_PROFILE_NO_KEY).setMessage(sn).setNetworkType(this.userController.getNetworkType()).setEnd(), J.error("ProfileHandler.updateMyProfile info:".concat(sn, "，请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#updateMyProfile")), Vr({ code: dt.UPDATE_PROFILE_NO_KEY, message: sn });var a = this.userController.generateConfig(this.TAG, this.Actions.U, { fromAccount: this.userController.getMyAccount(), profileItem: i });return this.userController.request(a).then(function (o) {r.setCode(0).setNetworkType(n.userController.getNetworkType()).setEnd(), J.info("ProfileHandler.updateMyProfile ok");var i = n._updateMap(n.userController.getMyAccount(), t);return n.userController.emitOuterEvent(e.PROFILE_UPDATED, [i]), Fr(i);}).catch(function (e) {return n.userController.probeNetwork().then(function (t) {var n = y(t, 2),o = n[0],i = n[1];r.setError(e, o, i).setEnd();}), J.error("ProfileHandler.updateMyProfile error:", e), Vr(e);});} }, { key: "onProfileModified", value: function value(t) {var n = t.data;if (!Oe(n)) {var r,o,i = n.length;J.info("ProfileHandler.onProfileModified length=" + i);for (var s = [], a = 0; a < i; a++) {r = n[a].userID, o = this._updateMap(r, this._getLatestProfileFromResponse(r, n[a].profileList)), s.push(o);}this.userController.emitInnerEvent(Sr, s), this.userController.emitOuterEvent(e.PROFILE_UPDATED, s);}} }, { key: "_fillMap", value: function value() {if (0 === this.accountProfileMap.size) {for (var e = this._getCachedProfiles(), t = Date.now(), n = 0, r = e.length; n < r; n++) {t - e[n].lastUpdatedTime < this.expirationTime && this.accountProfileMap.set(e[n].userID, e[n]);}J.log("ProfileHandler._fillMap from cache, map.size=" + this.accountProfileMap.size);}} }, { key: "_updateMap", value: function value(e, t) {var n,r = Date.now();return this._containsAccount(e) ? (n = this._getProfileFromMap(e), t.profileCustomField && Ee(n.profileCustomField, t.profileCustomField), he(n, t, ["profileCustomField"]), n.lastUpdatedTime = r) : (n = new pa(t), (this.userController.isMyFriend(e) || e === this.userController.getMyAccount()) && (n.lastUpdatedTime = r, this.accountProfileMap.set(e, n))), this._flushMap(e === this.userController.getMyAccount()), n;} }, { key: "_flushMap", value: function value(e) {var t = v(this.accountProfileMap.values()),n = this.userController.tim.storage;J.debug("ProfileHandler._flushMap length=".concat(t.length, " flushAtOnce=").concat(e)), n.setItem(this.TAG, t, e);} }, { key: "_containsAccount", value: function value(e) {return this.accountProfileMap.has(e);} }, { key: "_getProfileFromMap", value: function value(e) {return this.accountProfileMap.get(e);} }, { key: "_getCachedProfiles", value: function value() {var e = this.userController.tim.storage.getItem(this.TAG);return Oe(e) ? [] : e;} }, { key: "onConversationsProfileUpdated", value: function value(e) {for (var t, n, r, o = [], i = 0, s = e.length; i < s; i++) {n = (t = e[i]).userID, this.userController.isMyFriend(n) && (this._containsAccount(n) ? (r = this._getProfileFromMap(n), he(r, t) > 0 && o.push(n)) : o.push(t.userID));}0 !== o.length && (J.info("ProfileHandler.onConversationsProfileUpdated toAccount:", o), this.getUserProfile({ userIDList: o }));} }, { key: "reset", value: function value() {this._flushMap(!0), this.accountProfileMap.clear();} }]), t;}(),da = function () {function e(t) {r(this, e), this.options = t ? t.options : { enablePointer: !0 }, this.pointsList = {}, this.reportText = {}, this.maxNameLen = 0, this.gapChar = "-", this.log = console.log, this.currentTask = "";}return i(e, [{ key: "newTask", value: function value(e) {!1 !== this.options.enablePointer && (e || (e = ["task", this._timeFormat()].join("-")), this.pointsList[e] = [], this.currentTask = e, console.log("Pointer new Task : ".concat(this.currentTask)));} }, { key: "deleteTask", value: function value(e) {!1 !== this.options.enablePointer && (e || (e = this.currentTask), this.pointsList[e].length = 0, delete this.pointsList[e]);} }, { key: "dot", value: function value() {var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",t = arguments.length > 1 ? arguments[1] : void 0;if (!1 !== this.options.enablePointer) {t = t || this.currentTask;var n = +new Date();this.maxNameLen = this.maxNameLen < e.length ? e.length : this.maxNameLen, this.flen = this.maxNameLen + 10, this.pointsList[t].push({ pointerName: e, time: n });}} }, { key: "_analisys", value: function value(e) {if (!1 !== this.options.enablePointer) {e = e || this.currentTask;for (var t = this.pointsList[e], n = t.length, r = [], o = [], i = 0; i < n; i++) {0 !== i && (o = this._analisysTowPoints(t[i - 1], t[i]), r.push(o.join("")));}return o = this._analisysTowPoints(t[0], t[n - 1], !0), r.push(o.join("")), r.join("");}} }, { key: "_analisysTowPoints", value: function value(e, t) {var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];if (!1 !== this.options.enablePointer) {var r = this.flen,o = t.time - e.time,i = o.toString(),s = e.pointerName + this.gapChar.repeat(r - e.pointerName.length),a = t.pointerName + this.gapChar.repeat(r - t.pointerName.length),u = this.gapChar.repeat(4 - i.length) + i,c = n ? ["%c", s, a, u, "ms\n%c"] : [s, a, u, "ms\n"];return c;}} }, { key: "report", value: function value(e) {if (!1 !== this.options.enablePointer) {e = e || this.currentTask;var t = this._analisys(e);this.pointsList = [];var n = this._timeFormat(),r = "Pointer[".concat(e, "(").concat(n, ")]"),o = 4 * this.maxNameLen,i = (o - r.length) / 2;console.log(["-".repeat(i), r, "-".repeat(i)].join("")), console.log("%c" + t, "color:#66a", "color:red", "color:#66a"), console.log("-".repeat(o));}} }, { key: "_timeFormat", value: function value() {var e = new Date(),t = this.zeroFix(e.getMonth() + 1, 2),n = this.zeroFix(e.getDate(), 2);return "".concat(t, "-").concat(n, " ").concat(e.getHours(), ":").concat(e.getSeconds(), ":").concat(e.getMinutes(), "~").concat(e.getMilliseconds());} }, { key: "zeroFix", value: function value(e, t) {return ("000000000" + e).slice(-t);} }, { key: "reportAll", value: function value() {if (!1 !== this.options.enablePointer) for (var e in this.pointsList) {Object.prototype.hasOwnProperty.call(this.pointsList, e) && this.eport(e);}} }]), e;}(),fa = function e(t, n) {r(this, e), this.userID = t;var o = {};if (o.userID = t, !Oe(n)) for (var i = 0, s = n.length; i < s; i++) {switch (n[i].tag) {case et.NICK:o.nick = n[i].value;break;case et.GENDER:o.gender = n[i].value;break;case et.BIRTHDAY:o.birthday = n[i].value;break;case et.LOCATION:o.location = n[i].value;break;case et.SELFSIGNATURE:o.selfSignature = n[i].value;break;case et.ALLOWTYPE:o.allowType = n[i].value;break;case et.LANGUAGE:o.language = n[i].value;break;case et.AVATAR:o.avatar = n[i].value;break;case et.MESSAGESETTINGS:o.messageSettings = n[i].value;break;case et.ADMINFORBIDTYPE:o.adminForbidType = n[i].value;break;case et.LEVEL:o.level = n[i].value;break;case et.ROLE:o.role = n[i].value;break;default:J.debug("snsProfileItem unkown tag->", n[i].tag);}}this.profile = new pa(o);},ga = function () {function e(t) {r(this, e), this.userController = t, this.TAG = "friend", this.Actions = { G: "get", D: "delete" }, this.friends = new Map(), this.pointer = new da();}return i(e, [{ key: "isMyFriend", value: function value(e) {var t = this.friends.has(e);return t || J.debug("FriendHandler.isMyFriend " + e + " is not my friend"), t;} }, { key: "_transformFriendList", value: function value(e) {if (!Oe(e) && !Oe(e.infoItem)) {J.info("FriendHandler._transformFriendList friendNum=" + e.friendNum);for (var t, n, r = e.infoItem, o = 0, i = r.length; o < i; o++) {n = r[o].infoAccount, t = new fa(n, r[o].snsProfileItem), this.friends.set(n, t);}}} }, { key: "_friends2map", value: function value(e) {var t = new Map();for (var n in e) {Object.prototype.hasOwnProperty.call(e, n) && t.set(n, e[n]);}return t;} }, { key: "getFriendList", value: function value() {var e = this,t = {};t.fromAccount = this.userController.getMyAccount(), J.info("FriendHandler.getFriendList myAccount=" + t.fromAccount);var n = this.userController.generateConfig(this.TAG, this.Actions.G, t);return this.userController.request(n).then(function (t) {J.info("FriendHandler.getFriendList ok"), e._transformFriendList(t.data);var n = v(e.friends.values());return Fr(n);}).catch(function (e) {return J.error("FriendHandler.getFriendList error:", e), Vr(e);});} }, { key: "deleteFriend", value: function value(e) {if (!Array.isArray(e.toAccount)) return J.error("FriendHandler.deleteFriend options.toAccount 必需是数组"), Vr({ code: dt.DEL_FRIEND_INVALID_PARAM, message: rn });e.toAccount.length > 1e3 && (J.warn("FriendHandler.deleteFriend 删除好友人数不能超过1000人"), e.toAccount.length = 1e3);var t = this.userController.generateConfig(this.TAG, this.Actions.D, e);return this.userController.request(t).then(function (e) {return J.info("FriendHandler.deleteFriend ok"), Fr();}).catch(function (e) {return J.error("FriendHandler.deleteFriend error:", e), Vr(e);});} }]), e;}(),ma = function e(t) {r(this, e), Oe || (this.userID = t.userID || "", this.timeStamp = t.timeStamp || 0);},_a = function () {function t(e) {r(this, t), this.userController = e, this.TAG = "blacklist", this.Actions = { G: "get", C: "create", D: "delete" }, this.blacklistMap = new Map(), this.startIndex = 0, this.maxLimited = 100, this.curruentSequence = 0;}return i(t, [{ key: "getBlacklist", value: function value() {var e = this,t = {};t.fromAccount = this.userController.getMyAccount(), t.maxLimited = this.maxLimited, t.startIndex = 0, t.lastSequence = this.curruentSequence;var n = new Br();n.setMethod(Ko).setStart();var r = this.userController.generateConfig(this.TAG, this.Actions.G, t);return this.userController.request(r).then(function (t) {var r = Oe(t.data.blackListItem) ? 0 : t.data.blackListItem.length;return n.setCode(0).setNetworkType(e.userController.getNetworkType()).setText(r).setEnd(), J.info("BlacklistHandler.getBlacklist ok"), e.curruentSequence = t.data.curruentSequence, e._handleResponse(t.data.blackListItem, !0), e._onBlacklistUpdated();}).catch(function (t) {return e.userController.probeNetwork().then(function (e) {var r = y(e, 2),o = r[0],i = r[1];n.setError(t, o, i).setEnd();}), J.error("BlacklistHandler.getBlacklist error:", t), Vr(t);});} }, { key: "addBlacklist", value: function value(e) {var t = this,n = new Br();if (n.setMethod(Bo).setStart(), !re(e.userIDList)) return n.setCode(dt.ADD_BLACKLIST_INVALID_PARAM).setMessage("BlacklistHandler.addBlacklist options.userIDList 必需是数组").setNetworkType(this.userController.getNetworkType()).setEnd(), J.error("BlacklistHandler.addBlacklist options.userIDList 必需是数组"), Vr({ code: dt.ADD_BLACKLIST_INVALID_PARAM, message: an });var r = this.userController.tim.loginInfo.identifier;if (1 === e.userIDList.length && e.userIDList[0] === r) return n.setCode(dt.CANNOT_ADD_SELF_TO_BLACKLIST).setMessage(cn).setNetworkType(this.userController.getNetworkType()).setEnd(), J.error("BlacklistHandler.addBlacklist 不能把自己拉黑"), Vr({ code: dt.CANNOT_ADD_SELF_TO_BLACKLIST, message: cn });e.userIDList.includes(r) && (e.userIDList = e.userIDList.filter(function (e) {return e !== r;}), J.warn("BlacklistHandler.addBlacklist 不能把自己拉黑，已过滤")), e.fromAccount = this.userController.getMyAccount(), e.toAccount = e.userIDList;var o = this.userController.generateConfig(this.TAG, this.Actions.C, e);return this.userController.request(o).then(function (r) {return n.setCode(0).setNetworkType(t.userController.getNetworkType()).setText(e.userIDList.length > 5 ? "userIDList.length=".concat(e.userIDList.length) : "userIDList=".concat(e.userIDList)).setEnd(), J.info("BlacklistHandler.addBlacklist ok"), t._handleResponse(r.data.resultItem, !0), t._onBlacklistUpdated();}).catch(function (e) {return t.userController.probeNetwork().then(function (t) {var r = y(t, 2),o = r[0],i = r[1];n.setError(e, o, i).setEnd();}), J.error("BlacklistHandler.addBlacklist error:", e), Vr(e);});} }, { key: "_handleResponse", value: function value(e, t) {if (!Oe(e)) for (var n, r, o, i = 0, s = e.length; i < s; i++) {r = e[i].to, o = e[i].resultCode, (oe(o) || 0 === o) && (t ? ((n = this.blacklistMap.has(r) ? this.blacklistMap.get(r) : new ma()).userID = r, !Oe(e[i].addBlackTimeStamp) && (n.timeStamp = e[i].addBlackTimeStamp), this.blacklistMap.set(r, n)) : this.blacklistMap.has(r) && (n = this.blacklistMap.get(r), this.blacklistMap.delete(r)));}J.log("BlacklistHandler._handleResponse total=" + this.blacklistMap.size + " bAdd=" + t);} }, { key: "deleteBlacklist", value: function value(e) {var t = this,n = new Br();if (n.setMethod(Ho).setStart(), !re(e.userIDList)) return n.setCode(dt.DEL_BLACKLIST_INVALID_PARAM).setMessage("BlacklistHandler.deleteBlacklist options.userIDList 必需是数组").setNetworkType(this.userController.getNetworkType()).setEnd(), J.error("BlacklistHandler.deleteBlacklist options.userIDList 必需是数组"), Vr({ code: dt.DEL_BLACKLIST_INVALID_PARAM, message: un });e.fromAccount = this.userController.getMyAccount(), e.toAccount = e.userIDList;var r = this.userController.generateConfig(this.TAG, this.Actions.D, e);return this.userController.request(r).then(function (r) {return n.setCode(0).setNetworkType(t.userController.getNetworkType()).setText(e.userIDList.length > 5 ? "userIDList.length=".concat(e.userIDList.length) : "userIDList=".concat(e.userIDList)).setEnd(), J.info("BlacklistHandler.deleteBlacklist ok"), t._handleResponse(r.data.resultItem, !1), t._onBlacklistUpdated();}).catch(function (e) {return t.userController.probeNetwork().then(function (t) {var r = y(t, 2),o = r[0],i = r[1];n.setError(e, o, i).setEnd();}), J.error("BlacklistHandler.deleteBlacklist error:", e), Vr(e);});} }, { key: "_onBlacklistUpdated", value: function value() {var t = v(this.blacklistMap.keys());return this.userController.emitOuterEvent(e.BLACKLIST_UPDATED, t), Fr(t);} }, { key: "handleBlackListDelAccount", value: function value(t) {for (var n, r = [], o = 0, i = t.length; o < i; o++) {n = t[o], this.blacklistMap.has(n) && (this.blacklistMap.delete(n), r.push(n));}r.length > 0 && (J.log("BlacklistHandler.handleBlackListDelAccount delCount=" + r.length + " : " + r.join(",")), this.userController.emitOuterEvent(e.BLACKLIST_UPDATED, v(this.blacklistMap.keys())));} }, { key: "handleBlackListAddAccount", value: function value(t) {for (var n, r = [], o = 0, i = t.length; o < i; o++) {n = t[o], this.blacklistMap.has(n) || (this.blacklistMap.set(n, new ma({ userID: n })), r.push(n));}r.length > 0 && (J.log("BlacklistHandler.handleBlackListAddAccount addCount=" + r.length + " : " + r.join(",")), this.userController.emitOuterEvent(e.BLACKLIST_UPDATED, v(this.blacklistMap.keys())));} }, { key: "reset", value: function value() {this.blacklistMap.clear(), this.startIndex = 0, this.maxLimited = 100, this.curruentSequence = 0;} }]), t;}(),ya = function () {function e(t) {r(this, e), this.userController = t, this.TAG = "applyC2C", this.Actions = { C: "create", G: "get", D: "delete", U: "update" };}return i(e, [{ key: "applyAddFriend", value: function value(e) {var t = this,n = this.userController.generateConfig(this.TAG, this.Actions.C, e),r = this.userController.request(n);return r.then(function (e) {t.userController.isActionSuccessful("applyAddFriend", t.Actions.C, e);}).catch(function (e) {}), r;} }, { key: "getPendency", value: function value(e) {var t = this,n = this.userController.generateConfig(this.TAG, this.Actions.G, e),r = this.userController.request(n);return r.then(function (e) {t.userController.isActionSuccessful("getPendency", t.Actions.G, e);}).catch(function (e) {}), r;} }, { key: "deletePendency", value: function value(e) {var t = this,n = this.userController.generateConfig(this.TAG, this.Actions.D, e),r = this.userController.request(n);return r.then(function (e) {t.userController.isActionSuccessful("deletePendency", t.Actions.D, e);}).catch(function (e) {}), r;} }, { key: "replyPendency", value: function value() {var e = this,t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},n = this.userController.generateConfig(this.TAG, this.Actions.U, t),r = this.userController.request(n);return r.then(function (t) {e.userController.isActionSuccessful("replyPendency", e.Actions.U, t);}).catch(function (e) {}), r;} }]), e;}(),va = function (e) {c(n, e);var t = _(n);function n(e) {var o;return r(this, n), (o = t.call(this, e)).profileHandler = new ha(g(o)), o.friendHandler = new ga(g(o)), o.blacklistHandler = new _a(g(o)), o.applyC2CHandler = new ya(g(o)), o._initializeListener(), o;}return i(n, [{ key: "_initializeListener", value: function value(e) {var t = this.tim.innerEmitter;t.on(xn, this.onContextUpdated, this), t.on(ur, this.onProfileModified, this), t.on(ar, this.onNewFriendMessages, this), t.on(Cr, this.onConversationsProfileUpdated, this);} }, { key: "onContextUpdated", value: function value(e) {var t = this.tim.context;!1 != !!t.a2Key && !1 != !!t.tinyID && (this.profileHandler.getMyProfile(), this.friendHandler.getFriendList(), this.blacklistHandler.getBlacklist());} }, { key: "onGotMyProfile", value: function value() {this.triggerReady();} }, { key: "onProfileModified", value: function value(e) {this.profileHandler.onProfileModified(e);} }, { key: "onNewFriendMessages", value: function value(e) {J.debug("onNewFriendMessages", JSON.stringify(e.data)), Oe(e.data.blackListDelAccount) || this.blacklistHandler.handleBlackListDelAccount(e.data.blackListDelAccount), Oe(e.data.blackListAddAccount) || this.blacklistHandler.handleBlackListAddAccount(e.data.blackListAddAccount);} }, { key: "onConversationsProfileUpdated", value: function value(e) {this.profileHandler.onConversationsProfileUpdated(e.data);} }, { key: "getMyAccount", value: function value() {return this.tim.context.identifier;} }, { key: "isMyFriend", value: function value(e) {return this.friendHandler.isMyFriend(e);} }, { key: "generateConfig", value: function value(e, t, n) {return { name: e, action: t, param: n };} }, { key: "getMyProfile", value: function value() {return this.profileHandler.getMyProfile();} }, { key: "getUserProfile", value: function value(e) {return this.profileHandler.getUserProfile(e);} }, { key: "updateMyProfile", value: function value(e) {return this.profileHandler.updateMyProfile(e);} }, { key: "getFriendList", value: function value() {return this.friendHandler.getFriendList();} }, { key: "deleteFriend", value: function value(e) {return this.friendHandler.deleteFriend(e);} }, { key: "getBlacklist", value: function value() {return this.blacklistHandler.getBlacklist();} }, { key: "addBlacklist", value: function value(e) {return this.blacklistHandler.addBlacklist(e);} }, { key: "deleteBlacklist", value: function value(e) {return this.blacklistHandler.deleteBlacklist(e);} }, { key: "applyAddFriend", value: function value(e) {return this.applyC2CHandler.applyAddFriend(e);} }, { key: "getPendency", value: function value(e) {return this.applyC2CHandler.getPendency(e);} }, { key: "deletePendency", value: function value(e) {return this.applyC2CHandler.deletePendency(e);} }, { key: "replyPendency", value: function value(e) {return this.applyC2CHandler.replyPendency(e);} }, { key: "reset", value: function value() {J.info("UserController.reset"), this.resetReady(), this.profileHandler.reset(), this.blacklistHandler.reset(), this.checkTimes = 0;} }]), n;}(Pr),Ia = ["groupID", "name", "avatar", "type", "introduction", "notification", "ownerID", "selfInfo", "createTime", "infoSequence", "lastInfoTime", "lastMessage", "nextMessageSeq", "memberNum", "maxMemberNum", "memberList", "joinOption", "groupCustomField", "muteAllMembers"],Ma = function () {function e(t) {r(this, e), this.groupID = "", this.name = "", this.avatar = "", this.type = "", this.introduction = "", this.notification = "", this.ownerID = "", this.createTime = "", this.infoSequence = "", this.lastInfoTime = "", this.selfInfo = { messageRemindType: "", joinTime: "", nameCard: "", role: "" }, this.lastMessage = { lastTime: "", lastSequence: "", fromAccount: "", messageForShow: "" }, this.nextMessageSeq = "", this.memberNum = "", this.maxMemberNum = "", this.joinOption = "", this.groupCustomField = [], this.muteAllMembers = void 0, this._initGroup(t);}return i(e, [{ key: "_initGroup", value: function value(e) {for (var t in e) {Ia.indexOf(t) < 0 || ("selfInfo" !== t ? this[t] = e[t] : this.updateSelfInfo(e[t]));}} }, { key: "updateGroup", value: function value(e) {e.lastMsgTime && (this.lastMessage.lastTime = e.lastMsgTime), oe(e.muteAllMembers) || ("On" === e.muteAllMembers ? e.muteAllMembers = !0 : e.muteAllMembers = !1), e.groupCustomField && Ee(this.groupCustomField, e.groupCustomField), he(this, e, ["members", "errorCode", "lastMsgTime", "groupCustomField"]);} }, { key: "updateSelfInfo", value: function value(e) {var t = e.nameCard,n = e.joinTime,r = e.role,o = e.messageRemindType;he(this.selfInfo, { nameCard: t, joinTime: n, role: r, messageRemindType: o }, [], ["", null, void 0, 0, NaN]);} }, { key: "setSelfNameCard", value: function value(e) {this.selfInfo.nameCard = e;} }]), e;}(),Ca = function Ca(e, n) {if (oe(n)) return "";switch (e) {case t.MSG_TEXT:return n.text;case t.MSG_IMAGE:return "[图片]";case t.MSG_GEO:return "[位置]";case t.MSG_AUDIO:return "[语音]";case t.MSG_VIDEO:return "[视频]";case t.MSG_FILE:return "[文件]";case t.MSG_CUSTOM:return "[自定义消息]";case t.MSG_GRP_TIP:return "[群提示消息]";case t.MSG_GRP_SYS_NOTICE:return "[群系统通知]";case t.MSG_FACE:return "[动画表情]";default:return "";}},Ea = function Ea(e) {return oe(e) ? { lastTime: 0, lastSequence: 0, fromAccount: 0, messageForShow: "", payload: null, type: "", isRevoked: !1 } : e instanceof Dn ? { lastTime: e.time || 0, lastSequence: e.sequence || 0, fromAccount: e.from || "", messageForShow: Ca(e.type, e.payload), payload: e.payload || null, type: e.type || null, isRevoked: !1 } : u({}, e, { isRevoked: !1, messageForShow: Ca(e.type, e.payload) });},Sa = function () {function e(t) {r(this, e), this.conversationID = t.conversationID || "", this.unreadCount = t.unreadCount || 0, this.type = t.type || "", this.lastMessage = Ea(t.lastMessage), t.lastMsgTime && (this.lastMessage.lastTime = t.lastMsgTime), this._isInfoCompleted = !1, this.peerReadTime = t.peerReadTime || 0, this._initProfile(t);}return i(e, [{ key: "_initProfile", value: function value(e) {var n = this;Object.keys(e).forEach(function (t) {switch (t) {case "userProfile":n.userProfile = e.userProfile;break;case "groupProfile":n.groupProfile = e.groupProfile;}}), oe(this.userProfile) && this.type === t.CONV_C2C ? this.userProfile = new pa({ userID: e.conversationID.replace("C2C", "") }) : oe(this.groupProfile) && this.type === t.CONV_GROUP && (this.groupProfile = new Ma({ groupID: e.conversationID.replace("GROUP", "") }));} }, { key: "updateUnreadCount", value: function value(e, n) {oe(e) || (Te(this.subType) || De(this.subType) ? this.unreadCount = 0 : n && this.type === t.CONV_GROUP ? this.unreadCount = e : this.unreadCount = this.unreadCount + e);} }, { key: "updateLastMessage", value: function value(e) {this.lastMessage = Ea(e);} }, { key: "reduceUnreadCount", value: function value() {this.unreadCount >= 1 && (this.unreadCount -= 1);} }, { key: "isLastMessageRevoked", value: function value(e) {var n = e.sequence,r = e.time;return this.type === t.CONV_C2C && n === this.lastMessage.lastSequence && r === this.lastMessage.lastTime || this.type === t.CONV_GROUP && n === this.lastMessage.lastSequence;} }, { key: "setLastMessageRevoked", value: function value(e) {this.lastMessage.isRevoked = e;} }, { key: "toAccount", get: function get() {return this.conversationID.replace("C2C", "").replace("GROUP", "");} }, { key: "subType", get: function get() {return this.groupProfile ? this.groupProfile.type : "";} }]), e;}(),Ta = function (n) {c(s, n);var o = _(s);function s(e) {var t;return r(this, s), (t = o.call(this, e)).pagingStatus = Ue.NOT_START, t.pagingTimeStamp = 0, t.conversationMap = new Map(), t.tempGroupList = [], t._initListeners(), t;}return i(s, [{ key: "hasLocalConversationMap", value: function value() {return this.conversationMap.size > 0;} }, { key: "_createLocalConversation", value: function value(e) {return this.conversationMap.has(e) ? this.conversationMap.get(e) : (J.log("ConversationController._createLocalConversation conversationID:".concat(e)), new Sa({ conversationID: e, type: e.slice(0, 3) === t.CONV_C2C ? t.CONV_C2C : t.CONV_GROUP }));} }, { key: "hasLocalConversation", value: function value(e) {return this.conversationMap.has(e);} }, { key: "getConversationList", value: function value() {var e = this;J.log("ConversationController.getConversationList."), this.pagingStatus === Ue.REJECTED && (J.log("ConversationController.getConversationList. continue to sync conversationList"), this._syncConversationList());var t = new Br();return t.setMethod(ao).setStart(), this.request({ name: "conversation", action: "query" }).then(function (n) {var r = n.data.conversations,o = void 0 === r ? [] : r,i = e._getConversationOptions(o);return e._updateLocalConversationList(i, !0), e._setStorageConversationList(), e._handleC2CPeerReadTime(), t.setCode(0).setText(o.length).setNetworkType(e.getNetworkType()).setEnd(), J.log("ConversationController.getConversationList ok."), Fr({ conversationList: e.getLocalConversationList() });}).catch(function (n) {return e.probeNetwork().then(function (e) {var r = y(e, 2),o = r[0],i = r[1];t.setError(n, o, i).setEnd();}), J.error("ConversationController.getConversationList error:", n), Vr(n);});} }, { key: "_syncConversationList", value: function value() {var e = this,t = new Br();return t.setMethod(po).setStart(), this.pagingStatus === Ue.NOT_START && this.conversationMap.clear(), this._autoPagingSyncConversationList().then(function (n) {return e.pagingStatus = Ue.RESOLVED, e._setStorageConversationList(), e._handleC2CPeerReadTime(), t.setCode(0).setText("".concat(e.conversationMap.size)).setNetworkType(e.getNetworkType()).setEnd(), n;}).catch(function (n) {return e.pagingStatus = Ue.REJECTED, t.setText(e.pagingTimeStamp), e.probeNetwork().then(function (e) {var r = y(e, 2),o = r[0],i = r[1];t.setError(n, o, i).setEnd();}), Vr(n);});} }, { key: "_autoPagingSyncConversationList", value: function value() {var e = this;return this.pagingStatus = Ue.PENDING, this.request({ name: "conversation", action: "pagingQuery", param: { fromAccount: this.tim.context.identifier, timeStamp: this.pagingTimeStamp, orderType: 1 } }).then(function (t) {var n = t.data,r = n.completeFlag,o = n.conversations,i = void 0 === o ? [] : o,s = n.timeStamp;if (J.log("ConversationController._autoPagingSyncConversationList completeFlag=".concat(r, " nums=").concat(i.length)), i.length > 0) {var a = e._getConversationOptions(i);e._updateLocalConversationList(a, !0);}return e._isReady ? e._emitConversationUpdate() : e.triggerReady(), e.pagingTimeStamp = s, 1 !== r ? e._autoPagingSyncConversationList() : Fr();});} }, { key: "_handleC2CPeerReadTime", value: function value() {var e,n = this.tim.messageController,r = C(this.conversationMap);try {for (r.s(); !(e = r.n()).done;) {var o = y(e.value, 2),i = o[0],s = o[1];s.type === t.CONV_C2C && (J.debug("ConversationController._handleC2CPeerReadTime", i, s.peerReadTime), n.recordPeerReadTime(i, s.peerReadTime));}} catch (a) {r.e(a);} finally {r.f();}} }, { key: "getConversationProfile", value: function value(e) {var n = this,r = this.conversationMap.has(e) ? this.conversationMap.get(e) : this._createLocalConversation(e);if (r._isInfoCompleted || r.type === t.CONV_SYSTEM) return Fr({ conversation: r });var o = new Br();return o.setMethod(uo).setStart(), J.log("ConversationController.getConversationProfile. conversationID:".concat(e, " lastMessage:"), r.lastMessage), this._updateUserOrGroupProfileCompletely(r).then(function (t) {return o.setCode(0).setNetworkType(n.getNetworkType()).setText("conversationID=".concat(e, " unreadCount=").concat(t.data.conversation.unreadCount)).setEnd(), J.log("ConversationController.getConversationProfile ok. conversationID:", e), t;}).catch(function (t) {return n.probeNetwork().then(function (n) {var r = y(n, 2),i = r[0],s = r[1];o.setError(t, i, s).setText("conversationID=".concat(e)).setEnd();}), J.error("ConversationController.getConversationProfile error:", t), Vr(t);});} }, { key: "deleteConversation", value: function value(e) {var n = this,r = {};if (!this.conversationMap.has(e)) {var o = new ht({ code: dt.CONVERSATION_NOT_FOUND, message: Ft });return Vr(o);}switch (this.conversationMap.get(e).type) {case t.CONV_C2C:r.type = 1, r.toAccount = e.replace(t.CONV_C2C, "");break;case t.CONV_GROUP:r.type = 2, r.toGroupID = e.replace(t.CONV_GROUP, "");break;case t.CONV_SYSTEM:return this.tim.groupController.deleteGroupSystemNotice({ messageList: this.tim.messageController.getLocalMessageList(e) }), this.deleteLocalConversation(e), Fr({ conversationID: e });default:var i = new ht({ code: dt.CONVERSATION_UN_RECORDED_TYPE, message: Kt });return Vr(i);}var s = new Br();return s.setMethod(co).setText("conversationID=".concat(e)).setStart(), J.log("ConversationController.deleteConversation. conversationID=".concat(e)), this.tim.setMessageRead({ conversationID: e }).then(function () {return n.request({ name: "conversation", action: "delete", param: r });}).then(function () {return s.setCode(0).setNetworkType(n.getNetworkType()).setEnd(), J.log("ConversationController.deleteConversation ok."), n.deleteLocalConversation(e), Fr({ conversationID: e });}).catch(function (e) {return n.probeNetwork().then(function (t) {var n = y(t, 2),r = n[0],o = n[1];s.setError(e, r, o).setEnd();}), J.error("ConversationController.deleteConversation error:", e), Vr(e);});} }, { key: "getLocalConversationList", value: function value() {return v(this.conversationMap.values());} }, { key: "getLocalConversation", value: function value(e) {return this.conversationMap.get(e);} }, { key: "_initLocalConversationList", value: function value() {var e = new Br();e.setMethod(lo).setStart(), J.time(Kr.INIT_CONVERSATION_LIST), J.log("ConversationController._initLocalConversationList init");var t = this._getStorageConversationList();if (t) {for (var n = t.length, r = 0; r < n; r++) {this.conversationMap.set(t[r].conversationID, new Sa(t[r]));}this._emitConversationUpdate(!0, !1), e.setCode(0).setNetworkType(this.getNetworkType()).setText(n).setEnd();} else e.setCode(0).setNetworkType(this.getNetworkType()).setText(0).setEnd();this._syncConversationList();} }, { key: "_getStorageConversationList", value: function value() {return this.tim.storage.getItem("conversationMap");} }, { key: "_setStorageConversationList", value: function value() {var e = this.getLocalConversationList().slice(0, 20).map(function (e) {return { conversationID: e.conversationID, type: e.type, subType: e.subType, lastMessage: e.lastMessage, groupProfile: e.groupProfile, userProfile: e.userProfile };});this.tim.storage.setItem("conversationMap", e);} }, { key: "_initListeners", value: function value() {var e = this;this.tim.innerEmitter.once(xn, this._initLocalConversationList, this), this.tim.innerEmitter.on(Bn, this._onSendOrReceiveMessage, this), this.tim.innerEmitter.on(Hn, this._handleSyncMessages, this), this.tim.innerEmitter.on(jn, this._handleSyncMessages, this), this.tim.innerEmitter.on(Yn, this._onSendOrReceiveMessage, this), this.tim.innerEmitter.on($n, this._onSendOrReceiveMessage, this), this.tim.innerEmitter.on(Wn, this._onSendOrReceiveMessage, this), this.tim.innerEmitter.on(gr, this._onGroupListUpdated, this), this.tim.innerEmitter.on(Sr, this._updateConversationUserProfile, this), this.tim.innerEmitter.on(zn, this._onMessageRevoked, this), this.ready(function () {e.tempGroupList.length > 0 && (e._updateConversationGroupProfile(e.tempGroupList), e.tempGroupList.length = 0);});} }, { key: "_onGroupListUpdated", value: function value(e) {this._updateConversationGroupProfile(e.data);} }, { key: "_updateConversationGroupProfile", value: function value(e) {var t = this;re(e) && 0 === e.length || (this.hasLocalConversationMap() ? (e.forEach(function (e) {var n = "GROUP".concat(e.groupID);if (t.conversationMap.has(n)) {var r = t.conversationMap.get(n);r.groupProfile = e, r.lastMessage.lastSequence < e.nextMessageSeq && (r.lastMessage.lastSequence = e.nextMessageSeq - 1), r.subType || (r.subType = e.type);}}), this._emitConversationUpdate(!0, !1)) : this.tempGroupList = e);} }, { key: "_updateConversationUserProfile", value: function value(e) {var t = this;e.data.forEach(function (e) {var n = "C2C".concat(e.userID);t.conversationMap.has(n) && (t.conversationMap.get(n).userProfile = e);}), this._emitConversationUpdate(!0, !1);} }, { key: "_onMessageRevoked", value: function value(e) {var t = this,n = e.data;if (0 !== n.length) {var r = null,o = !1;n.forEach(function (e) {(r = t.conversationMap.get(e.conversationID)) && r.isLastMessageRevoked(e) && (o = !0, r.setLastMessageRevoked(!0));}), o && this._emitConversationUpdate(!0, !1);}} }, { key: "_handleSyncMessages", value: function value(e) {this._onSendOrReceiveMessage(e, !0);} }, { key: "_onSendOrReceiveMessage", value: function value(e) {var t = this,n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],r = e.data.eventDataList;this._isReady ? 0 !== r.length && (this._getPeerReadTime(r), this._updateLocalConversationList(r, !1, n), this._setStorageConversationList(), this._emitConversationUpdate()) : this.ready(function () {t._onSendOrReceiveMessage(e, n);});} }, { key: "_getPeerReadTime", value: function value(e) {var n = this,r = [];e.forEach(function (e) {n.conversationMap.has(e.conversationID) || e.type !== t.CONV_C2C || r.push(e.conversationID.replace(t.CONV_C2C, ""));}), r.length > 0 && (J.debug("ConversationController._getPeerReadTime userIDList:".concat(r)), this.tim.messageController.getPeerReadTime(r));} }, { key: "_updateLocalConversationList", value: function value(e, t, n) {var r;r = this._updateTempConversations(e, t, n), this.conversationMap = new Map(this._sortConversations([].concat(v(r.conversations), v(this.conversationMap)))), t || this._updateUserOrGroupProfile(r.newerConversations);} }, { key: "_updateTempConversations", value: function value(e, n, r) {for (var o = [], i = [], s = 0, a = e.length; s < a; s++) {var u = new Sa(e[s]),c = this.conversationMap.get(u.conversationID);if (this.conversationMap.has(u.conversationID)) {var l = ["unreadCount", "allowType", "adminForbidType", "payload"];r && l.push("lastMessage"), he(c, u, l, [null, void 0, "", 0, NaN]), c.updateUnreadCount(u.unreadCount, n), r || (c.lastMessage.payload = e[s].lastMessage.payload), this.conversationMap.delete(c.conversationID), o.push([c.conversationID, c]);} else {if (u.type === t.CONV_GROUP) {var p = u.groupProfile.groupID,h = this.tim.groupController.getLocalGroupProfile(p);h && (u.groupProfile = h, u.updateUnreadCount(0));}i.push(u), o.push([u.conversationID, u]);}}return { conversations: o, newerConversations: i };} }, { key: "_sortConversations", value: function value(e) {return e.sort(function (e, t) {return t[1].lastMessage.lastTime - e[1].lastMessage.lastTime;});} }, { key: "_updateUserOrGroupProfile", value: function value(e) {var n = this;if (0 !== e.length) {var r = [],o = [];e.forEach(function (e) {if (e.type === t.CONV_C2C) r.push(e.toAccount);else if (e.type === t.CONV_GROUP) {var i = e.toAccount;n.tim.groupController.hasLocalGroup(i) ? e.groupProfile = n.tim.groupController.getLocalGroupProfile(i) : o.push(i);}}), r.length > 0 && this.tim.getUserProfile({ userIDList: r }).then(function (e) {var t = e.data;re(t) ? t.forEach(function (e) {n.conversationMap.get("C2C".concat(e.userID)).userProfile = e;}) : n.conversationMap.get("C2C".concat(t.userID)).userProfile = t;}), o.length > 0 && this.tim.groupController.getGroupProfileAdvance({ groupIDList: o, responseFilter: { groupBaseInfoFilter: ["Type", "Name", "FaceUrl"] } }).then(function (e) {e.data.successGroupList.forEach(function (e) {var t = "GROUP".concat(e.groupID);if (n.conversationMap.has(t)) {var r = n.conversationMap.get(t);he(r.groupProfile, e, [], [null, void 0, "", 0, NaN]), !r.subType && e.type && (r.subType = e.type);}});});}} }, { key: "_updateUserOrGroupProfileCompletely", value: function value(e) {var n = this;return e.type === t.CONV_C2C ? this.tim.getUserProfile({ userIDList: [e.toAccount] }).then(function (t) {var r = t.data;return 0 === r.length ? Vr(new ht({ code: dt.USER_OR_GROUP_NOT_FOUND, message: Vt })) : (e.userProfile = r[0], e._isInfoCompleted = !0, n._unshiftConversation(e), Fr({ conversation: e }));}) : this.tim.getGroupProfile({ groupID: e.toAccount }).then(function (t) {return e.groupProfile = t.data.group, e._isInfoCompleted = !0, n._unshiftConversation(e), Fr({ conversation: e });});} }, { key: "_unshiftConversation", value: function value(e) {e instanceof Sa && !this.conversationMap.has(e.conversationID) && (this.conversationMap = new Map([[e.conversationID, e]].concat(v(this.conversationMap))), this._setStorageConversationList(), this._emitConversationUpdate(!0, !1));} }, { key: "deleteLocalConversation", value: function value(e) {this.conversationMap.delete(e), this._setStorageConversationList(), this.emitInnerEvent(Er, e), this._emitConversationUpdate(!0, !1);} }, { key: "_getConversationOptions", value: function value(e) {var t = [],n = e.filter(function (e) {var t = e.lastMsg;return ne(t);}).map(function (e) {if (1 === e.type) {var n = { userID: e.userID, nick: e.c2CNick, avatar: e.c2CImage };return t.push(n), { conversationID: "C2C".concat(e.userID), type: "C2C", lastMessage: { lastTime: e.time, lastSequence: e.sequence, fromAccount: e.lastC2CMsgFromAccount, messageForShow: e.messageShow, type: e.lastMsg.elements[0] ? e.lastMsg.elements[0].type : null, payload: e.lastMsg.elements[0] ? e.lastMsg.elements[0].content : null }, userProfile: new pa(n), peerReadTime: e.c2cPeerReadTime };}return { conversationID: "GROUP".concat(e.groupID), type: "GROUP", lastMessage: { lastTime: e.time, lastSequence: e.messageReadSeq + e.unreadCount, fromAccount: e.msgGroupFromAccount, messageForShow: e.messageShow, type: e.lastMsg.elements[0] ? e.lastMsg.elements[0].type : null, payload: e.lastMsg.elements[0] ? e.lastMsg.elements[0].content : null }, groupProfile: new Ma({ groupID: e.groupID, name: e.groupNick, avatar: e.groupImage }), unreadCount: e.unreadCount, peerReadTime: 0 };});return t.length > 0 && this.emitInnerEvent(Cr, t), n;} }, { key: "_emitConversationUpdate", value: function value() {var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],n = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],r = v(this.conversationMap.values());n && this.emitInnerEvent(Mr, r), t && this.emitOuterEvent(e.CONVERSATION_LIST_UPDATED, r);} }, { key: "_conversationMapTreeShaking", value: function value(e) {var n = this,r = new Map(v(this.conversationMap));e.forEach(function (e) {return r.delete(e.conversationID);}), r.has(t.CONV_SYSTEM) && r.delete(t.CONV_SYSTEM);var o = this.tim.groupController.getJoinedAVChatRoom();o && o.forEach(function (e) {r.delete("".concat(t.CONV_GROUP).concat(e));}), v(r.keys()).forEach(function (e) {return n.conversationMap.delete(e);});} }, { key: "reset", value: function value() {this.pagingStatus = Ue.NOT_START, this.pagingTimeStamp = 0, this.conversationMap.clear(), this.resetReady(), this.tim.innerEmitter.once(xn, this._initLocalConversationList, this);} }]), s;}(Pr),Da = function () {function e(t) {if (r(this, e), void 0 === t) throw new ht({ code: dt.MESSAGE_LIST_CONSTRUCTOR_NEED_OPTIONS, message: Ct });if (void 0 === t.tim) throw new ht({ code: dt.MESSAGE_LIST_CONSTRUCTOR_NEED_OPTIONS, message: "".concat(Ct, ".tim") });this.list = new Map(), this.tim = t.tim, this._initializeOptions(t);}return i(e, [{ key: "getLocalOldestMessageByConversationID", value: function value(e) {if (!e) return null;if (!this.list.has(e)) return null;var t = this.list.get(e).values();return t ? t.next().value : null;} }, { key: "_initializeOptions", value: function value(e) {this.options = {};var t = { memory: { maxDatasPerKey: 100, maxBytesPerData: 256, maxKeys: 0 }, cache: { maxDatasPerKey: 10, maxBytesPerData: 256, maxKeys: 0 } };for (var n in t) {if (Object.prototype.hasOwnProperty.call(t, n)) {if (void 0 === e[n]) {this.options[n] = t[n];continue;}var r = t[n];for (var o in r) {if (Object.prototype.hasOwnProperty.call(r, o)) {if (void 0 === e[n][o]) {this.options[n][o] = r[o];continue;}this.options[n][o] = e[n][o];}}}}} }, { key: "pushIn", value: function value(e) {var t = e.conversationID,n = e.ID,r = !0;return this.list.has(t) || this.list.set(t, new Map()), this.list.has(t) && this.list.get(t).has(n) ? r = !1 : this.list.get(t).set(n, e), r;} }, { key: "unshift", value: function value(e) {re(e) ? e.length > 0 && this._unshiftMultipleMessages(e) : this._unshiftSingleMessage(e);} }, { key: "_unshiftSingleMessage", value: function value(e) {var t = e.conversationID,n = e.ID;if (!this.list.has(t)) return this.list.set(t, new Map()), void this.list.get(t).set(n, e);var r = Array.from(this.list.get(t));r.unshift([n, e]), this.list.set(t, new Map(r));} }, { key: "_unshiftMultipleMessages", value: function value(e) {for (var t = e.length, n = [], r = e[0].conversationID, o = this.list.has(r) ? Array.from(this.list.get(r)) : [], i = 0; i < t; i++) {n.push([e[i].ID, e[i]]);}this.list.set(r, new Map(n.concat(o)));} }, { key: "remove", value: function value(e) {var t = e.conversationID,n = e.ID;this.list.has(t) && this.list.get(t).delete(n);} }, { key: "revoke", value: function value(e, t, n) {if (J.debug("revoke message", e, t, n), this.list.has(e)) {var r,o = C(this.list.get(e));try {for (o.s(); !(r = o.n()).done;) {var i = y(r.value, 2)[1];if (i.sequence === t && !i.isRevoked && (oe(n) || i.random === n)) return i.isRevoked = !0, i;}} catch (s) {o.e(s);} finally {o.f();}}return null;} }, { key: "removeByConversationID", value: function value(e) {this.list.has(e) && this.list.delete(e);} }, { key: "updateMessageIsPeerReadProperty", value: function value(e, t) {var n = [];if (this.list.has(e)) {var r,o = C(this.list.get(e));try {for (o.s(); !(r = o.n()).done;) {var i = y(r.value, 2)[1];i.time <= t && !i.isPeerRead && "out" === i.flow && (i.isPeerRead = !0, n.push(i));}} catch (s) {o.e(s);} finally {o.f();}J.log("MessagesList.updateMessageIsPeerReadProperty conversationID=".concat(e, " peerReadTime=").concat(t, " count=").concat(n.length));}return n;} }, { key: "hasLocalMessageList", value: function value(e) {return this.list.has(e);} }, { key: "getLocalMessageList", value: function value(e) {return this.hasLocalMessageList(e) ? v(this.list.get(e).values()) : [];} }, { key: "hasLocalMessage", value: function value(e, t) {return !!this.hasLocalMessageList(e) && this.list.get(e).has(t);} }, { key: "getLocalMessage", value: function value(e, t) {return this.hasLocalMessage(e, t) ? this.list.get(e).get(t) : null;} }, { key: "reset", value: function value() {this.list.clear();} }]), e;}(),Aa = function () {function e(t) {r(this, e), this.tim = t;}return i(e, [{ key: "setMessageRead", value: function value(e) {var n = e.conversationID,r = e.messageID,o = this.tim.conversationController.getLocalConversation(n);if (J.log("ReadReportHandler.setMessageRead conversationID=".concat(n, " unreadCount=").concat(o ? o.unreadCount : 0)), !o || 0 === o.unreadCount) return Fr();var i = r ? this.tim.messageController.getLocalMessage(n, r) : null;switch (o.type) {case t.CONV_C2C:return this._setC2CMessageRead({ conversationID: n, lastMessageTime: i ? i.time : o.lastMessage.lastTime });case t.CONV_GROUP:return this._setGroupMessageRead({ conversationID: n, lastMessageSeq: i ? i.sequence : o.lastMessage.lastSequence });case t.CONV_SYSTEM:return o.unreadCount = 0, Fr();default:return Fr();}} }, { key: "_setC2CMessageRead", value: function value(e) {var t = this,n = e.conversationID,r = e.lastMessageTime;J.log("ReadReportHandler._setC2CMessageRead conversationID=".concat(n, " lastMessageTime=").concat(r)), Z(r) || J.warn("ReadReportHandler._setC2CMessageRead 请勿修改 Conversation.lastMessage.lastTime，否则可能会导致已读上报结果不准确");var o = new Br();return o.setMethod(ro).setText("".concat(n, "-").concat(r)).setStart(), this.tim.messageController.request({ name: "conversation", action: "setC2CMessageRead", param: { C2CMsgReaded: { cookie: "", C2CMsgReadedItem: [{ toAccount: n.replace("C2C", ""), lastMessageTime: r, receipt: 1 }] } } }).then(function () {return o.setCode(0).setNetworkType(t.tim.netMonitor.getNetworkType()).setEnd(), J.log("ReadReportHandler._setC2CMessageRead ok."), t._updateIsReadAfterReadReport({ conversationID: n, lastMessageTime: r }), t._updateUnreadCount(n), new Ur();}).catch(function (e) {return t.tim.netMonitor.probe().then(function (t) {var n = y(t, 2),r = n[0],i = n[1];o.setError(e, r, i).setEnd();}), J.log("ReadReportHandler._setC2CMessageRead failed. ".concat(de(e))), Vr(e);});} }, { key: "_setGroupMessageRead", value: function value(e) {var t = this,n = e.conversationID,r = e.lastMessageSeq;J.log("ReadReportHandler._setGroupMessageRead conversationID=".concat(n, " lastMessageSeq=").concat(r)), Z(r) || J.warn("ReadReportHandler._setGroupMessageRead 请勿修改 Conversation.lastMessage.lastSequence，否则可能会导致已读上报结果不准确");var o = new Br();return o.setMethod(oo).setText("".concat(n, "-").concat(r)).setStart(), this.tim.messageController.request({ name: "conversation", action: "setGroupMessageRead", param: { groupID: n.replace("GROUP", ""), messageReadSeq: r } }).then(function () {return o.setCode(0).setNetworkType(t.tim.netMonitor.getNetworkType()).setEnd(), J.log("ReadReportHandler._setGroupMessageRead ok."), t._updateIsReadAfterReadReport({ conversationID: n, lastMessageSeq: r }), t._updateUnreadCount(n), new Ur();}).catch(function (e) {return t.tim.netMonitor.probe().then(function (t) {var n = y(t, 2),r = n[0],i = n[1];o.setError(e, r, i).setEnd();}), J.log("ReadReportHandler._setGroupMessageRead failed. ".concat(de(e))), Vr(e);});} }, { key: "_updateUnreadCount", value: function value(e) {var t = this.tim,n = t.conversationController,r = t.messageController,o = n.getLocalConversation(e),i = r.getLocalMessageList(e);o && (o.unreadCount = i.filter(function (e) {return !e.isRead;}).length, J.log("ReadReportHandler._updateUnreadCount conversationID=".concat(o.conversationID, " unreadCount=").concat(o.unreadCount)));} }, { key: "_updateIsReadAfterReadReport", value: function value(e) {var t = e.conversationID,n = e.lastMessageSeq,r = e.lastMessageTime,o = this.tim.messageController.getLocalMessageList(t);if (0 !== o.length) for (var i, s = o.length - 1; s >= 0; s--) {if (i = o[s], !(r && i.time > r || n && i.sequence > n)) {if ("in" === i.flow && i.isRead) break;i.setIsRead(!0);}}} }, { key: "updateIsRead", value: function value(e) {var n = this.tim,r = n.conversationController,o = n.messageController,i = r.getLocalConversation(e),s = o.getLocalMessageList(e);if (i && 0 !== s.length && !Ae(i.type)) {for (var a = [], u = 0; u < s.length; u++) {"in" !== s[u].flow ? "out" !== s[u].flow || s[u].isRead || s[u].setIsRead(!0) : a.push(s[u]);}var c = 0;if (i.type === t.CONV_C2C) {var l = a.slice(-i.unreadCount).filter(function (e) {return e.isRevoked;}).length;c = a.length - i.unreadCount - l;} else c = a.length - i.unreadCount;for (var p = 0; p < c && !a[p].isRead; p++) {a[p].setIsRead(!0);}}} }]), e;}(),ka = function () {function e(t) {var n = t.tim,o = t.messageController;r(this, e), this.tim = n, this.messageController = o, this.completedMap = new Map(), this._initListener();}return i(e, [{ key: "getMessageList", value: function value(e) {var t = this,n = e.conversationID,r = e.nextReqMessageID,o = e.count;if (this.tim.groupController.checkJoinedAVChatRoomByID(n.replace("GROUP", ""))) return J.log("GetMessageHandler.getMessageList not available in avchatroom. conversationID=".concat(n)), Fr({ messageList: [], nextReqMessageID: "", isCompleted: !0 });(oe(o) || o > 15) && (o = 15);var i = this._computeLeftCount({ conversationID: n, nextReqMessageID: r });return J.log("GetMessageHandler.getMessageList. conversationID=".concat(n, " leftCount=").concat(i, " count=").concat(o, " nextReqMessageID=").concat(r)), this._needGetHistory({ conversationID: n, leftCount: i, count: o }) ? this.messageController.getHistoryMessages({ conversationID: n, count: 20 }).then(function () {return i = t._computeLeftCount({ conversationID: n, nextReqMessageID: r }), new Ur(t._computeResult({ conversationID: n, nextReqMessageID: r, count: o, leftCount: i }));}) : (J.log("GetMessageHandler.getMessageList. get messagelist from memory"), Fr(this._computeResult({ conversationID: n, nextReqMessageID: r, count: o, leftCount: i })));} }, { key: "setCompleted", value: function value(e) {J.log("GetMessageHandler.setCompleted. conversationID=".concat(e)), this.completedMap.set(e, !0);} }, { key: "deleteCompletedItem", value: function value(e) {J.log("GetMessageHandler.deleteCompletedItem. conversationID=".concat(e)), this.completedMap.delete(e);} }, { key: "_initListener", value: function value() {var e = this;this.tim.innerEmitter.on(Ar, function () {e.setCompleted(t.CONV_SYSTEM);}), this.tim.innerEmitter.on(Tr, function (n) {var r = n.data;e.setCompleted("".concat(t.CONV_GROUP).concat(r));});} }, { key: "_getMessageListSize", value: function value(e) {return this.messageController.getLocalMessageList(e).length;} }, { key: "_needGetHistory", value: function value(e) {var n = e.conversationID,r = e.leftCount,o = e.count,i = this.tim.conversationController.getLocalConversation(n),s = !!i && i.type === t.CONV_SYSTEM,a = !!i && i.subType === t.GRP_AVCHATROOM;return !s && !a && r < o && !this.completedMap.has(n);} }, { key: "_computeResult", value: function value(e) {var t = e.conversationID,n = e.nextReqMessageID,r = e.count,o = e.leftCount,i = this._computeMessageList({ conversationID: t, nextReqMessageID: n, count: r }),s = this._computeIsCompleted({ conversationID: t, leftCount: o, count: r }),a = this._computeNextReqMessageID({ messageList: i, isCompleted: s, conversationID: t });return J.log("GetMessageHandler._computeResult. conversationID=".concat(t, " leftCount=").concat(o, " count=").concat(r, " nextReqMessageID=").concat(a, " nums=").concat(i.length, " isCompleted=").concat(s)), { messageList: i, nextReqMessageID: a, isCompleted: s };} }, { key: "_computeNextReqMessageID", value: function value(e) {var t = e.messageList,n = e.isCompleted,r = e.conversationID;if (!n) return 0 === t.length ? "" : t[0].ID;var o = this.messageController.getLocalMessageList(r);return 0 === o.length ? "" : o[0].ID;} }, { key: "_computeMessageList", value: function value(e) {var t = e.conversationID,n = e.nextReqMessageID,r = e.count,o = this.messageController.getLocalMessageList(t),i = this._computeIndexEnd({ nextReqMessageID: n, messageList: o }),s = this._computeIndexStart({ indexEnd: i, count: r });return o.slice(s, i);} }, { key: "_computeIndexEnd", value: function value(e) {var t = e.messageList,n = void 0 === t ? [] : t,r = e.nextReqMessageID;return r ? n.findIndex(function (e) {return e.ID === r;}) : n.length;} }, { key: "_computeIndexStart", value: function value(e) {var t = e.indexEnd,n = e.count;return t > n ? t - n : 0;} }, { key: "_computeLeftCount", value: function value(e) {var t = e.conversationID,n = e.nextReqMessageID;return n ? this.messageController.getLocalMessageList(t).findIndex(function (e) {return e.ID === n;}) : this._getMessageListSize(t);} }, { key: "_computeIsCompleted", value: function value(e) {var t = e.conversationID;return !!(e.leftCount <= e.count && this.completedMap.has(t));} }, { key: "reset", value: function value() {J.log("GetMessageHandler.reset"), this.completedMap.clear();} }]), e;}(),Ra = function e(t) {r(this, e), this.value = t, this.next = null;},Oa = function () {function e(t) {r(this, e), this.MAX_LENGTH = t, this.pTail = null, this.pNodeToDel = null, this.map = new Map(), J.log("SinglyLinkedList init MAX_LENGTH=".concat(this.MAX_LENGTH));}return i(e, [{ key: "pushIn", value: function value(e) {var t = new Ra(e);if (this.map.size < this.MAX_LENGTH) null === this.pTail ? (this.pTail = t, this.pNodeToDel = t) : (this.pTail.next = t, this.pTail = t), this.map.set(e, 1);else {var n = this.pNodeToDel;this.pNodeToDel = this.pNodeToDel.next, this.map.delete(n.value), n.next = null, n = null, this.pTail.next = t, this.pTail = t, this.map.set(e, 1);}} }, { key: "has", value: function value(e) {return this.map.has(e);} }, { key: "tail", value: function value() {return this.pTail;} }, { key: "size", value: function value() {return this.map.size;} }, { key: "data", value: function value() {return Array.from(this.map.keys());} }, { key: "reset", value: function value() {for (var e; null !== this.pNodeToDel;) {e = this.pNodeToDel, this.pNodeToDel = this.pNodeToDel.next, e.next = null, e = null;}this.pTail = null, this.map.clear();} }]), e;}(),Na = function () {function e(t) {r(this, e), this.tim = t;}return i(e, [{ key: "upload", value: function value(e) {switch (e.type) {case t.MSG_IMAGE:return this._uploadImage(e);case t.MSG_FILE:return this._uploadFile(e);case t.MSG_AUDIO:return this._uploadAudio(e);case t.MSG_VIDEO:return this._uploadVideo(e);default:return Promise.resolve();}} }, { key: "_uploadImage", value: function value(e) {var t = this.tim,n = t.uploadController,r = t.messageController,o = e.getElements()[0],i = r.getMessageOptionByID(e.messageID);return n.uploadImage({ file: i.payload.file, to: i.to, onProgress: function onProgress(e) {if (o.updatePercent(e), se(i.onProgress)) try {i.onProgress(e);} catch (t) {return Vr(new ht({ code: dt.MESSAGE_ONPROGRESS_FUNCTION_ERROR, message: "".concat(Dt) }));}} }).then(function (e) {var t,n = e.location,r = e.fileType,i = e.fileSize,s = Ce(n);return o.updateImageFormat(r), o.updateImageInfoArray({ size: i, url: s }), t = o._imageMemoryURL, N ? new Promise(function (e, n) {wx.getImageInfo({ src: t, success: function success(t) {e({ width: t.width, height: t.height });}, fail: function fail() {e({ width: 0, height: 0 });} });}) : x && 9 === F ? Promise.resolve({ width: 0, height: 0 }) : new Promise(function (e, n) {var r = new Image();r.onload = function () {e({ width: this.width, height: this.height }), r = null;}, r.onerror = function () {e({ width: 0, height: 0 }), r = null;}, r.src = t;});}).then(function (t) {var n = t.width,r = t.height;return o.updateImageInfoArray({ width: n, height: r }), e;});} }, { key: "_uploadFile", value: function value(e) {var t = this.tim,n = t.uploadController,r = t.messageController,o = e.getElements()[0],i = r.getMessageOptionByID(e.messageID);return n.uploadFile({ file: i.payload.file, to: i.to, onProgress: function onProgress(e) {if (o.updatePercent(e), se(i.onProgress)) try {i.onProgress(e);} catch (t) {return Vr(new ht({ code: dt.MESSAGE_ONPROGRESS_FUNCTION_ERROR, message: "".concat(Dt) }));}} }).then(function (t) {var n = t.location,r = Ce(n);return o.updateFileUrl(r), e;});} }, { key: "_uploadAudio", value: function value(e) {var t = this.tim,n = t.uploadController,r = t.messageController,o = e.getElements()[0],i = r.getMessageOptionByID(e.messageID);return n.uploadAudio({ file: i.payload.file, to: i.to, onProgress: function onProgress(e) {if (o.updatePercent(e), se(i.onProgress)) try {i.onProgress(e);} catch (t) {return Vr(new ht({ code: dt.MESSAGE_ONPROGRESS_FUNCTION_ERROR, message: "".concat(Dt) }));}} }).then(function (t) {var n = t.location,r = Ce(n);return o.updateAudioUrl(r), e;});} }, { key: "_uploadVideo", value: function value(e) {var t = this.tim,n = t.uploadController,r = t.messageController,o = e.getElements()[0],i = r.getMessageOptionByID(e.messageID);return n.uploadVideo({ file: i.payload.file, to: i.to, onProgress: function onProgress(e) {if (o.updatePercent(e), se(i.onProgress)) try {i.onProgress(e);} catch (t) {return Vr(new ht({ code: dt.MESSAGE_ONPROGRESS_FUNCTION_ERROR, message: "".concat(Dt) }));}} }).then(function (t) {var n = Ce(t.location);return o.updateVideoUrl(n), e;});} }]), e;}(),La = function (n) {c(s, n);var o = _(s);function s(e) {var t;return r(this, s), (t = o.call(this, e))._initializeMembers(), t._initializeListener(), t._initialzeHandlers(), t.messageOptionMap = new Map(), t;}return i(s, [{ key: "_initializeMembers", value: function value() {this.messagesList = new Da({ tim: this.tim }), this.currentMessageKey = {}, this.singlyLinkedList = new Oa(100), this._peerReadTimeMap = new Map();} }, { key: "_initialzeHandlers", value: function value() {this.readReportHandler = new Aa(this.tim, this), this.getMessageHandler = new ka({ messageController: this, tim: this.tim }), this.uploadFileHandler = new Na(this.tim);} }, { key: "reset", value: function value() {this.messagesList.reset(), this.currentMessageKey = {}, this.getMessageHandler.reset(), this.singlyLinkedList.reset(), this._peerReadTimeMap.clear(), this.messageOptionMap.clear();} }, { key: "_initializeListener", value: function value() {var e = this.tim.innerEmitter;e.on(rr, this._onReceiveC2CMessage, this), e.on(Vn, this._onSyncMessagesProcessing, this), e.on(Kn, this._onSyncMessagesFinished, this), e.on(or, this._onReceiveGroupMessage, this), e.on(ir, this._onReceiveGroupTips, this), e.on(sr, this._onReceiveSystemNotice, this), e.on(lr, this._onReceiveGroupMessageRevokedNotice, this), e.on(pr, this._onReceiveC2CMessageRevokedNotice, this), e.on(hr, this._onC2CMessageReadReceipt, this), e.on(Er, this._clearConversationMessages, this);} }, { key: "sendMessageInstance", value: function value(e, n) {var r,o = this,i = null;switch (e.conversationType) {case t.CONV_C2C:i = this._handleOnSendC2CMessageSuccess.bind(this);break;case t.CONV_GROUP:i = this._handleOnSendGroupMessageSuccess.bind(this);break;default:return Vr(new ht({ code: dt.MESSAGE_SEND_INVALID_CONVERSATION_TYPE, message: St }));}return this.singlyLinkedList.pushIn(e.random), this.uploadFileHandler.upload(e).then(function () {var i = null;return e.isSendable() ? e.conversationType !== t.CONV_GROUP || o.tim.groupController.hasLocalGroup(e.to) ? (o._addSendMessageTotalCount(e), r = Date.now(), e.conversationType === t.CONV_C2C ? i = o._createC2CMessagePack(e, n) : e.conversationType === t.CONV_GROUP && (i = o._createGroupMessagePack(e, n)), o.request(i)) : (J.warn("MessageController.sendMessageInstance failed. userId=".concat(e.from, " 未加入群 groupID=").concat(e.to, "。发消息前先使用 joinGroup 接口申请加群，详细请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#joinGroup")), Vr(new ht({ code: dt.MESSAGE_SEND_FAIL, message: Mt }))) : Vr({ code: dt.MESSAGE_FILE_URL_IS_EMPTY, message: xt });}).then(function (n) {return o._addSendMessageSuccessCount(e, r), e.conversationType === t.CONV_GROUP && (e.sequence = n.data.sequence, e.time = n.data.time, e.generateMessageID(o.tim.context.identifier)), o.messagesList.pushIn(e), i(e, n.data), o.messageOptionMap.delete(e.messageID), o.emitInnerEvent(Bn, { eventDataList: [{ conversationID: e.conversationID, unreadCount: 0, type: e.conversationType, subType: e.conversationSubType, lastMessage: e }] }), new Ur({ message: e });}).catch(function (t) {e.status = be.FAIL;var n = new Br();return n.setMethod(Zr).setMessageType(e.type).setText("".concat(o._generateTjgID(e), "-").concat(e.type, "-").concat(e.from, "-").concat(e.to)).setStart(), o.probeNetwork().then(function (e) {var r = y(e, 2),o = r[0],i = r[1];n.setError(t, o, i).setEnd();}), J.error("MessageController.sendMessageInstance error:", t), Vr(new ht({ code: t && t.code ? t.code : dt.MESSAGE_SEND_FAIL, message: t && t.message ? t.message : Mt, data: { message: e } }));});} }, { key: "_getSendMessageSpecifiedKey", value: function value(e) {if (e.conversationType === t.CONV_C2C) return Kr.SEND_MESSAGE_C2C;if (e.conversationType === t.CONV_GROUP) {var n = this.tim.groupController.getLocalGroupProfile(e.to).type;if (function (e) {return e === t.GRP_WORK;}(n)) return Kr.SEND_MESSAGE_GROUP_WORK;if (Se(n)) return Kr.SEND_MESSAGE_GROUP_PUBLIC;if (Te(n)) return Kr.SEND_MESSAGE_GROUP_MEETING;if (De(n)) return Kr.SEND_MESSAGE_GROUP_AV;}} }, { key: "_addSendMessageTotalCount", value: function value(e) {var t = this.tim.sumStatController;t.addTotalCount(Kr.SEND_MESSAGE);var n = this._getSendMessageSpecifiedKey(e);t.addTotalCount(n);} }, { key: "_addSendMessageSuccessCount", value: function value(e, t) {var n = this.tim.sumStatController,r = Math.abs(Date.now() - t);n.addSuccessCount(Kr.SEND_MESSAGE), n.addCost(Kr.SEND_MESSAGE, r);var o = this._getSendMessageSpecifiedKey(e);n.addSuccessCount(o), n.addCost(o, r);} }, { key: "resendMessage", value: function value(e) {return e.isResend = !0, e.status = be.UNSEND, this.sendMessageInstance(e);} }, { key: "_isFileLikeMessage", value: function value(e) {return [t.MSG_IMAGE, t.MSG_FILE, t.MSG_AUDIO, t.MSG_VIDEO].indexOf(e.type) >= 0;} }, { key: "_resendBinaryTypeMessage", value: function value() {} }, { key: "_canIUseOnlineOnlyFlag", value: function value(e) {var n = this.tim.groupController.getJoinedAVChatRoom();return !n || !n.includes(e.to) || e.conversationType !== t.CONV_GROUP;} }, { key: "_createC2CMessagePack", value: function value(e, t) {var n = 0,r = null;return t && (t.offlinePushInfo && (r = t.offlinePushInfo), !0 === t.onlineUserOnly && (n = 1, r ? r.disablePush = !0 : r = { disablePush: !0 })), { name: "c2cMessage", action: "create", tjgID: this._generateTjgID(e), param: { toAccount: e.to, msgBody: e.getElements(), msgSeq: e.sequence, msgRandom: e.random, msgLifeTime: this._canIUseOnlineOnlyFlag(e) && n ? 0 : void 0, offlinePushInfo: r ? { pushFlag: !0 === r.disablePush ? 1 : 0, title: r.title || "", desc: r.description || "", ext: r.extension || "", apnsInfo: { badgeMode: !0 === r.ignoreIOSBadge ? 1 : 0 }, androidInfo: { OPPOChannelID: r.androidOPPOChannelID || "" } } : void 0 } };} }, { key: "_handleOnSendC2CMessageSuccess", value: function value(e, t) {e.status = be.SUCCESS, e.time = t.time;} }, { key: "_createGroupMessagePack", value: function value(e, t) {var n = 0,r = null;return t && (!0 === t.onlineUserOnly && (n = 1), t.offlinePushInfo && (r = t.offlinePushInfo)), { name: "groupMessage", action: "create", tjgID: this._generateTjgID(e), param: { groupID: e.to, msgBody: e.getElements(), random: e.random, priority: e.priority, clientSequence: e.clientSequence, onlineOnlyFlag: this._canIUseOnlineOnlyFlag(e) ? n : 0, offlinePushInfo: r ? { pushFlag: !0 === r.disablePush ? 1 : 0, title: r.title || "", desc: r.description || "", ext: r.extension || "", apnsInfo: { badgeMode: !0 === r.ignoreIOSBadge ? 1 : 0 }, androidInfo: { OPPOChannelID: r.androidOPPOChannelID || "" } } : void 0 } };} }, { key: "_handleOnSendGroupMessageSuccess", value: function value(e, t) {e.sequence = t.sequence, e.time = t.time, e.status = be.SUCCESS;} }, { key: "_onReceiveC2CMessage", value: function value(n) {J.debug("MessageController._onReceiveC2CMessage nums=".concat(n.data.length));var r = Date.now(),o = this._newC2CMessageStoredAndSummary({ notifiesList: n.data, type: t.CONV_C2C, C2CRemainingUnreadList: n.C2CRemainingUnreadList }),i = o.eventDataList,s = o.result;if (i.length > 0 && this.emitInnerEvent(Yn, { eventDataList: i, result: s }), s.length > 0) {var a = this.tim.sumStatController;a.addTotalCount(Kr.MESSAGE_RECEIVED), a.addSuccessCount(Kr.MESSAGE_RECEIVED), a.addCost(Kr.MESSAGE_RECEIVED, Date.now() - r), this.emitOuterEvent(e.MESSAGE_RECEIVED, s);}} }, { key: "_onReceiveGroupMessage", value: function value(t) {J.debug("MessageController._onReceiveGroupMessage nums=".concat(t.data.length));var n = Date.now(),r = this.newGroupMessageStoredAndSummary(t.data),o = r.eventDataList,i = r.result;if (o.length > 0 && this.emitInnerEvent($n, { eventDataList: o, result: i, isGroupTip: !1 }), i.length > 0) {var s = this.tim.sumStatController;s.addTotalCount(Kr.MESSAGE_RECEIVED), s.addSuccessCount(Kr.MESSAGE_RECEIVED), s.addCost(Kr.MESSAGE_RECEIVED, Date.now() - n), this.emitOuterEvent(e.MESSAGE_RECEIVED, i);}} }, { key: "_onReceiveGroupTips", value: function value(t) {var n = Date.now(),r = t.data;J.debug("MessageController._onReceiveGroupTips nums=".concat(r.length));var o = this.newGroupTipsStoredAndSummary(r),i = o.eventDataList,s = o.result;if (i.length > 0 && this.emitInnerEvent($n, { eventDataList: i, result: s, isGroupTip: !0 }), s.length > 0) {var a = this.tim.sumStatController;a.addTotalCount(Kr.MESSAGE_RECEIVED), a.addSuccessCount(Kr.MESSAGE_RECEIVED), a.addCost(Kr.MESSAGE_RECEIVED, Date.now() - n), this.emitOuterEvent(e.MESSAGE_RECEIVED, s);}} }, { key: "_onReceiveSystemNotice", value: function value(t) {var n = Date.now(),r = t.data,o = r.groupSystemNotices,i = r.type;J.debug("MessageController._onReceiveSystemNotice nums=".concat(o.length));var s = this.newSystemNoticeStoredAndSummary({ notifiesList: o, type: i }),a = s.eventDataList,u = s.result;if (a.length > 0 && this.emitInnerEvent(Wn, { eventDataList: a, result: u, type: i }), u.length > 0 && "poll" === i) {var c = this.tim.sumStatController;c.addTotalCount(Kr.MESSAGE_RECEIVED), c.addSuccessCount(Kr.MESSAGE_RECEIVED), c.addCost(Kr.MESSAGE_RECEIVED, Date.now() - n), this.emitOuterEvent(e.MESSAGE_RECEIVED, u);}} }, { key: "_onReceiveGroupMessageRevokedNotice", value: function value(t) {var n = this;J.debug("MessageController._onReceiveGroupMessageRevokedNotice nums=".concat(t.data.length));var r = [],o = null;t.data.forEach(function (e) {e.elements.revokedInfos.forEach(function (e) {(o = n.messagesList.revoke("GROUP".concat(e.groupID), e.sequence)) && r.push(o);});}), 0 !== r.length && (this.emitInnerEvent(zn, r), this.emitOuterEvent(e.MESSAGE_REVOKED, r));} }, { key: "_onReceiveC2CMessageRevokedNotice", value: function value(t) {var n = this;J.debug("MessageController._onReceiveC2CMessageRevokedNotice nums=".concat(t.data.length));var r = [],o = null;t.data.forEach(function (e) {e.c2cMessageRevokedNotify.revokedInfos.forEach(function (e) {var t = n.tim.context.identifier === e.from ? "C2C".concat(e.to) : "C2C".concat(e.from);(o = n.messagesList.revoke(t, e.sequence, e.random)) && r.push(o);});}), 0 !== r.length && (this.emitInnerEvent(zn, r), this.emitOuterEvent(e.MESSAGE_REVOKED, r));} }, { key: "_onC2CMessageReadReceipt", value: function value(e) {var t = this;e.data.forEach(function (e) {var n = e.c2cMessageReadReceipt.to;e.c2cMessageReadReceipt.uinPairReadArray.forEach(function (e) {var r = e.peerReadTime;J.debug("MessageController._onC2CMessageReadReceipt to=".concat(n, " peerReadTime=").concat(r));var o = "C2C".concat(n);t.recordPeerReadTime(o, r), t._updateMessageIsPeerReadProperty(o, r);});});} }, { key: "_updateMessageIsPeerReadProperty", value: function value(n, r) {if (n.startsWith(t.CONV_C2C) && r > 0) {var o = this.messagesList.updateMessageIsPeerReadProperty(n, r);o.length > 0 && this.emitOuterEvent(e.MESSAGE_READ_BY_PEER, o);}} }, { key: "getPeerReadTime", value: function value(e) {var t = this;if (!Oe(e)) {var n = new Br();return n.setMethod(so).setStart(), J.log("MessageController.getPeerReadTime userIDList:".concat(e)), this.request({ name: "c2cPeerReadTime", action: "get", param: { userIDList: e } }).then(function (r) {var o = r.data.peerReadTimeList;J.log("MessageController.getPeerReadTime ok. peerReadTimeList:".concat(o));for (var i = "", s = 0; s < e.length; s++) {i += "".concat(e[s], "-").concat(o[s], " "), o[s] > 0 && t.recordPeerReadTime("C2C".concat(e[s]), o[s]);}n.setCode(0).setNetworkType(t.getNetworkType()).setText(i).setEnd();}).catch(function (e) {t.probeNetwork().then(function (t) {var r = y(t, 2),o = r[0],i = r[1];n.setError(e, o, i).setEnd();}), J.warn("MessageController.getPeerReadTime failed. error:", e);});}} }, { key: "recordPeerReadTime", value: function value(e, t) {this._peerReadTimeMap.has(e) ? this._peerReadTimeMap.get(e) < t && this._peerReadTimeMap.set(e, t) : this._peerReadTimeMap.set(e, t);} }, { key: "_clearConversationMessages", value: function value(e) {var t = e.data;this.messagesList.removeByConversationID(t), this.getMessageHandler.deleteCompletedItem(t);} }, { key: "_pushIntoNoticeResult", value: function value(e, t) {return !(!this.messagesList.pushIn(t) || this.singlyLinkedList.has(t.random)) && (e.push(t), !0);} }, { key: "_newC2CMessageStoredAndSummary", value: function value(e) {for (var n = e.notifiesList, r = e.type, o = e.C2CRemainingUnreadList, i = e.isFromSync, s = null, a = [], u = [], c = {}, l = this.tim.bigDataHallwayController, p = 0, h = n.length; p < h; p++) {var d = n[p];if (d.currentUser = this.tim.context.identifier, d.conversationType = r, d.isSystemMessage = !!d.isSystemMessage, s = new Dn(d), d.elements = l.parseElements(d.elements, d.from), s.setElement(d.elements), !i) if (!this._pushIntoNoticeResult(u, s)) continue;void 0 === c[s.conversationID] ? c[s.conversationID] = a.push({ conversationID: s.conversationID, unreadCount: "out" === s.flow ? 0 : 1, type: s.conversationType, subType: s.conversationSubType, lastMessage: s }) - 1 : (a[c[s.conversationID]].type = s.conversationType, a[c[s.conversationID]].subType = s.conversationSubType, a[c[s.conversationID]].lastMessage = s, "in" === s.flow && a[c[s.conversationID]].unreadCount++);}if (re(o)) for (var f = function f(e, n) {var r = a.find(function (t) {return t.conversationID === "C2C".concat(o[e].from);});r ? r.unreadCount += o[e].count : a.push({ conversationID: "C2C".concat(o[e].from), unreadCount: o[e].count, type: t.CONV_C2C, lastMsgTime: o[e].lastMsgTime });}, g = 0, m = o.length; g < m; g++) {f(g);}return { eventDataList: a, result: u };} }, { key: "newGroupMessageStoredAndSummary", value: function value(e) {var n = null,r = [],o = {},i = [],s = t.CONV_GROUP,a = this.tim.bigDataHallwayController,u = e.length;u > 1 && e.sort(function (e, t) {return e.sequence - t.sequence;});for (var c = 0; c < u; c++) {var l = e[c];if (l.currentUser = this.tim.context.identifier, l.conversationType = s, l.isSystemMessage = !!l.isSystemMessage, n = new Dn(l), l.elements = a.parseElements(l.elements, l.from), n.setElement(l.elements), !this._isMessageFromAVChatroom(n)) this._pushIntoNoticeResult(i, n) && (void 0 === o[n.conversationID] ? o[n.conversationID] = r.push({ conversationID: n.conversationID, unreadCount: "out" === n.flow ? 0 : 1, type: n.conversationType, subType: n.conversationSubType, lastMessage: n }) - 1 : (r[o[n.conversationID]].type = n.conversationType, r[o[n.conversationID]].subType = n.conversationSubType, r[o[n.conversationID]].lastMessage = n, "in" === n.flow && r[o[n.conversationID]].unreadCount++));}return { eventDataList: r, result: i };} }, { key: "_isMessageFromAVChatroom", value: function value(e) {var t = e.conversationID.slice(5);return this.tim.groupController.checkJoinedAVChatRoomByID(t);} }, { key: "newGroupTipsStoredAndSummary", value: function value(e) {for (var n = null, r = [], o = [], i = {}, s = 0, a = e.length; s < a; s++) {var c = e[s];if (c.currentUser = this.tim.context.identifier, c.conversationType = t.CONV_GROUP, (n = new Dn(c)).setElement({ type: t.MSG_GRP_TIP, content: u({}, c.elements, { groupProfile: c.groupProfile }) }), n.isSystemMessage = !1, !this._isMessageFromAVChatroom(n)) this._pushIntoNoticeResult(o, n) && (void 0 === i[n.conversationID] ? i[n.conversationID] = r.push({ conversationID: n.conversationID, unreadCount: "out" === n.flow ? 0 : 1, type: n.conversationType, subType: n.conversationSubType, lastMessage: n }) - 1 : (r[i[n.conversationID]].type = n.conversationType, r[i[n.conversationID]].subType = n.conversationSubType, r[i[n.conversationID]].lastMessage = n, "in" === n.flow && r[i[n.conversationID]].unreadCount++));}return { eventDataList: r, result: o };} }, { key: "newSystemNoticeStoredAndSummary", value: function value(e) {var n = e.notifiesList,r = e.type,o = null,i = n.length,s = 0,a = [],c = { conversationID: t.CONV_SYSTEM, unreadCount: 0, type: t.CONV_SYSTEM, subType: null, lastMessage: null };for (s = 0; s < i; s++) {var l = n[s];if (l.elements.operationType !== ze) l.currentUser = this.tim.context.identifier, l.conversationType = t.CONV_SYSTEM, l.conversationID = t.CONV_SYSTEM, (o = new Dn(l)).setElement({ type: t.MSG_GRP_SYS_NOTICE, content: u({}, l.elements, { groupProfile: l.groupProfile }) }), o.isSystemMessage = !0, (1 === o.sequence && 1 === o.random || 2 === o.sequence && 2 === o.random) && (o.sequence = me(), o.random = me(), o.generateMessageID(l.currentUser), J.log("MessageController.newSystemNoticeStoredAndSummary sequence and random maybe duplicated, regenerate. ID=".concat(o.ID))), this._pushIntoNoticeResult(a, o) && ("poll" === r ? c.unreadCount++ : "sync" === r && o.setIsRead(!0), c.subType = o.conversationSubType);}return c.lastMessage = a[a.length - 1], { eventDataList: a.length > 0 ? [c] : [], result: a };} }, { key: "_onSyncMessagesProcessing", value: function value(e) {var n = this._newC2CMessageStoredAndSummary({ notifiesList: e.data, type: t.CONV_C2C, isFromSync: !0, C2CRemainingUnreadList: e.C2CRemainingUnreadList }),r = n.eventDataList,o = n.result;this.emitInnerEvent(Hn, { eventDataList: r, result: o });} }, { key: "_onSyncMessagesFinished", value: function value(e) {this.triggerReady();var n = this._newC2CMessageStoredAndSummary({ notifiesList: e.data.messageList, type: t.CONV_C2C, isFromSync: !0, C2CRemainingUnreadList: e.data.C2CRemainingUnreadList }),r = n.eventDataList,o = n.result;this.emitInnerEvent(jn, { eventDataList: r, result: o });} }, { key: "getHistoryMessages", value: function value(e) {if (e.conversationID === t.CONV_SYSTEM) return Fr();!e.count && (e.count = 15), e.count > 20 && (e.count = 20);var n = this.messagesList.getLocalOldestMessageByConversationID(e.conversationID);n || ((n = {}).time = 0, n.sequence = 0, 0 === e.conversationID.indexOf(t.CONV_C2C) ? (n.to = e.conversationID.replace(t.CONV_C2C, ""), n.conversationType = t.CONV_C2C) : 0 === e.conversationID.indexOf(t.CONV_GROUP) && (n.to = e.conversationID.replace(t.CONV_GROUP, ""), n.conversationType = t.CONV_GROUP));var r = "";switch (n.conversationType) {case t.CONV_C2C:return r = e.conversationID.replace(t.CONV_C2C, ""), this.getC2CRoamMessages({ conversationID: e.conversationID, peerAccount: r, count: e.count, lastMessageTime: void 0 === this.currentMessageKey[e.conversationID] ? 0 : n.time });case t.CONV_GROUP:return this.getGroupRoamMessages({ conversationID: e.conversationID, groupID: n.to, count: e.count, sequence: n.sequence - 1 });default:return Fr();}} }, { key: "getC2CRoamMessages", value: function value(e) {var n = this,r = e.conversationID,o = void 0 !== this.currentMessageKey[r] ? this.currentMessageKey[r] : "";J.log("MessageController.getC2CRoamMessages toAccount=".concat(e.peerAccount, " count=").concat(e.count || 15, " lastMessageTime=").concat(e.lastMessageTime || 0, " messageKey=").concat(o));var i = new Br();return i.setMethod(eo).setStart(), this.request({ name: "c2cMessage", action: "query", param: { peerAccount: e.peerAccount, count: e.count || 15, lastMessageTime: e.lastMessageTime || 0, messageKey: o } }).then(function (s) {var a = s.data,u = a.complete,c = a.messageList;oe(c) ? J.log("MessageController.getC2CRoamMessages ok. complete=".concat(u, " but messageList is undefined!")) : J.log("MessageController.getC2CRoamMessages ok. complete=".concat(u, " nums=").concat(c.length)), i.setCode(0).setNetworkType(n.getNetworkType()).setText("".concat(e.peerAccount, "-").concat(e.count || 15, "-").concat(e.lastMessageTime || 0, "-").concat(o, "-").concat(u, "-").concat(c ? c.length : "undefined")).setEnd(), 1 === u && n.getMessageHandler.setCompleted(r);var l = n._roamMessageStore(c, t.CONV_C2C, r);n.readReportHandler.updateIsRead(r), n.currentMessageKey[r] = s.data.messageKey;var p = n._peerReadTimeMap.get(r);if (J.log("MessageController.getC2CRoamMessages update isPeerRead property. conversationID=".concat(r, " peerReadTime=").concat(p)), p) n._updateMessageIsPeerReadProperty(r, p);else {var h = r.replace(t.CONV_C2C, "");n.getPeerReadTime([h]).then(function () {n._updateMessageIsPeerReadProperty(r, n._peerReadTimeMap.get(r));});}return l;}).catch(function (t) {return n.probeNetwork().then(function (n) {var r = y(n, 2),s = r[0],a = r[1];i.setError(t, s, a).setText("".concat(e.peerAccount, "-").concat(e.count || 15, "-").concat(e.lastMessageTime || 0, "-").concat(o)).setEnd();}), J.warn("MessageController.getC2CRoamMessages failed. ".concat(t)), Vr(t);});} }, { key: "_computeLastSequence", value: function value(e) {return e.sequence >= 0 ? Promise.resolve(e.sequence) : this.tim.groupController.getGroupLastSequence(e.groupID);} }, { key: "getGroupRoamMessages", value: function value(e) {var n = this,r = new Br(),o = 0;return this._computeLastSequence(e).then(function (t) {return o = t, J.log("MessageController.getGroupRoamMessages groupID=".concat(e.groupID, " lastSequence=").concat(o)), r.setMethod(to).setStart(), n.request({ name: "groupMessage", action: "query", param: { groupID: e.groupID, count: 21, sequence: o } });}).then(function (i) {var s = i.data,a = s.messageList,u = s.complete;oe(a) ? J.log("MessageController.getGroupRoamMessages ok. complete=".concat(u, " but messageList is undefined!")) : J.log("MessageController.getGroupRoamMessages ok. complete=".concat(u, " nums=").concat(a.length)), r.setCode(0).setNetworkType(n.getNetworkType()).setText("".concat(e.groupID, "-").concat(o, "-").concat(u, "-").concat(a ? a.length : "undefined")).setEnd();var c = "GROUP".concat(e.groupID);if (2 === u || Oe(a)) return n.getMessageHandler.setCompleted(c), [];var l = n._roamMessageStore(a, t.CONV_GROUP, c);return n.readReportHandler.updateIsRead(c), n._patchConversationLastMessage(c), l;}).catch(function (t) {return n.probeNetwork().then(function (n) {var i = y(n, 2),s = i[0],a = i[1];r.setError(t, s, a).setText("".concat(e.groupID, "-").concat(o)).setEnd();}), J.warn("MessageController.getGroupRoamMessages failed. ".concat(t)), Vr(t);});} }, { key: "_patchConversationLastMessage", value: function value(e) {var t = this.tim.conversationController.getLocalConversation(e);if (t) {var n = t.lastMessage,r = n.messageForShow,o = n.payload;if (Oe(r) || Oe(o)) {var i = this.messagesList.getLocalMessageList(e);if (0 === i.length) return;var s = i[i.length - 1];J.log("MessageController._patchConversationLastMessage conversationID:".concat(e, " payload:"), s.payload), t.updateLastMessage(s);}}} }, { key: "_roamMessageStore", value: function value() {var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],n = arguments.length > 1 ? arguments[1] : void 0,r = arguments.length > 2 ? arguments[2] : void 0,o = null,i = [],s = 0,a = e.length,c = null,l = n === t.CONV_GROUP,p = this.tim.bigDataHallwayController,h = function h() {s = l ? e.length - 1 : 0, a = l ? 0 : e.length;},d = function d() {l ? --s : ++s;},f = function f() {return l ? s >= a : s < a;};for (h(); f(); d()) {if (l && 1 === e[s].sequence && this.getMessageHandler.setCompleted(r), 1 !== e[s].isPlaceMessage) if ((o = new Dn(e[s])).to = e[s].to, o.isSystemMessage = !!e[s].isSystemMessage, o.conversationType = n, e[s].event === xe.JSON.TYPE.GROUP.TIP ? c = { type: t.MSG_GRP_TIP, content: u({}, e[s].elements, { groupProfile: e[s].groupProfile }) } : (e[s].elements = p.parseElements(e[s].elements, e[s].from), c = e[s].elements), Oe(c)) {var g = new Br();g.setMethod(io).setText("from:".concat(o.from, " to:").concat(o.to, " sequence:").concat(o.sequence, " event:").concat(e[s].event)).setStart(), g.setCode(0).setNetworkType(this.getNetworkType()).setEnd();} else o.setElement(c), o.reInitialize(this.tim.context.identifier), i.push(o);}return this.messagesList.unshift(i), h = d = f = null, i;} }, { key: "getLocalMessageList", value: function value(e) {return this.messagesList.getLocalMessageList(e);} }, { key: "getLocalMessage", value: function value(e, t) {return this.messagesList.getLocalMessage(e, t);} }, { key: "hasLocalMessage", value: function value(e, t) {return this.messagesList.hasLocalMessage(e, t);} }, { key: "deleteLocalMessage", value: function value(e) {e instanceof Dn && this.messagesList.remove(e);} }, { key: "revokeMessage", value: function value(e) {var n,r = this;e.conversationType === t.CONV_C2C ? n = { name: "c2cMessageWillBeRevoked", action: "create", param: { msgInfo: { fromAccount: e.from, toAccount: e.to, msgSeq: e.sequence, msgRandom: e.random, msgTimeStamp: e.time } } } : e.conversationType === t.CONV_GROUP && (n = { name: "groupMessageWillBeRevoked", action: "create", param: { to: e.to, msgSeqList: [{ msgSeq: e.sequence }] } });var o = new Br();return o.setMethod(no).setMessageType(e.type).setText("".concat(this._generateTjgID(e), "-").concat(e.type, "-").concat(e.from, "-").concat(e.to)).setStart(), this.request(n).then(function (t) {var n = t.data.recallRetList;if (!Oe(n) && 0 !== n[0].retCode) {var i = new ht({ code: n[0].retCode, message: pt[n[0].retCode] || At, data: { message: e } });return o.setCode(i.code).setMessage(i.message).setEnd(), Vr(i);}return J.info("MessageController.revokeMessage ok. ID=".concat(e.ID)), e.isRevoked = !0, o.setCode(0).setEnd(), r.emitInnerEvent(zn, [e]), new Ur({ message: e });}).catch(function (t) {r.probeNetwork().then(function (e) {var n = y(e, 2),r = n[0],i = n[1];o.setError(t, r, i).setEnd();});var n = new ht({ code: t && t.code ? t.code : dt.MESSAGE_REVOKE_FAIL, message: t && t.message ? t.message : At, data: { message: e } });return J.warn("MessageController.revokeMessage failed. ID=".concat(e.ID, " code=").concat(n.code, " message=").concat(n.message)), Vr(n);});} }, { key: "setMessageRead", value: function value(e) {var t = this;return new Promise(function (n, r) {t.ready(function () {t.readReportHandler.setMessageRead(e).then(n).catch(r);});});} }, { key: "getMessageList", value: function value(e) {return this.getMessageHandler.getMessageList(e);} }, { key: "createTextMessage", value: function value(e) {e.currentUser = this.tim.context.identifier;var t = new Dn(e),n = "string" == typeof e.payload ? e.payload : e.payload.text,r = new qe({ text: n });return t.setElement(r), t;} }, { key: "createCustomMessage", value: function value(e) {e.currentUser = this.tim.context.identifier;var t = new Dn(e),n = new Cn({ data: e.payload.data, description: e.payload.description, extension: e.payload.extension });return t.setElement(n), t;} }, { key: "createImageMessage", value: function value(e) {e.currentUser = this.tim.context.identifier;var t = new Dn(e);if (N) {var n = e.payload.file;if (Q(n)) return void J.warn("微信小程序环境下调用 createImageMessage 接口时，payload.file 不支持传入 File 对象");var r = n.tempFilePaths[0],o = { url: r, name: r.slice(r.lastIndexOf("/") + 1), size: n.tempFiles[0].size, type: r.slice(r.lastIndexOf(".") + 1).toLowerCase() };e.payload.file = o;} else if (O && Q(e.payload.file)) {var i = e.payload.file;e.payload.file = { files: [i] };}var s = new ot({ imageFormat: "UNKNOWN", uuid: this._generateUUID(), file: e.payload.file });return t.setElement(s), this.messageOptionMap.set(t.messageID, e), t;} }, { key: "createFileMessage", value: function value(e) {if (!N) {if (O && Q(e.payload.file)) {var t = e.payload.file;e.payload.file = { files: [t] };}e.currentUser = this.tim.context.identifier;var n = new Dn(e),r = new Mn({ uuid: this._generateUUID(), file: e.payload.file });return n.setElement(r), this.messageOptionMap.set(n.messageID, e), n;}J.warn("微信小程序目前不支持选择文件， createFileMessage 接口不可用！");} }, { key: "createAudioMessage", value: function value(e) {if (N) {var t = e.payload.file;if (N) {var n = { url: t.tempFilePath, name: t.tempFilePath.slice(t.tempFilePath.lastIndexOf("/") + 1), size: t.fileSize, second: parseInt(t.duration) / 1e3, type: t.tempFilePath.slice(t.tempFilePath.lastIndexOf(".") + 1).toLowerCase() };e.payload.file = n;}e.currentUser = this.tim.context.identifier;var r = new Dn(e),o = new st({ second: Math.floor(t.duration / 1e3), size: t.fileSize, url: t.tempFilePath, uuid: this._generateUUID() });return r.setElement(o), this.messageOptionMap.set(r.messageID, e), r;}J.warn("createAudioMessage 目前只支持微信小程序发语音消息");} }, { key: "createVideoMessage", value: function value(e) {e.currentUser = this.tim.context.identifier, e.payload.file.thumbUrl = "https://webim-1252463788.cos.ap-shanghai.myqcloud.com/assets/images/transparent.png", e.payload.file.thumbSize = 1668;var t = {};if (N) {if (Q(e.payload.file)) return void J.warn("微信小程序环境下调用 createVideoMessage 接口时，payload.file 不支持传入 File 对象");var n = e.payload.file;t.url = n.tempFilePath, t.name = n.tempFilePath.slice(n.tempFilePath.lastIndexOf("/") + 1), t.size = n.size, t.second = n.duration, t.type = n.tempFilePath.slice(n.tempFilePath.lastIndexOf(".") + 1).toLowerCase();} else if (O) {if (Q(e.payload.file)) {var r = e.payload.file;e.payload.file.files = [r];}var o = e.payload.file;t.url = window.URL.createObjectURL(o.files[0]), t.name = o.files[0].name, t.size = o.files[0].size, t.second = o.files[0].duration || 0, t.type = o.files[0].type.split("/")[1];}e.payload.file.videoFile = t;var i = new Dn(e),s = new En({ videoFormat: t.type, videoSecond: Number(t.second.toFixed(0)), videoSize: t.size, remoteVideoUrl: "", videoUrl: t.url, videoUUID: this._generateUUID(), thumbUUID: this._generateUUID(), thumbWidth: e.payload.file.width || 200, thumbHeight: e.payload.file.height || 200, thumbUrl: e.payload.file.thumbUrl, thumbSize: e.payload.file.thumbSize, thumbFormat: e.payload.file.thumbUrl.slice(e.payload.file.thumbUrl.lastIndexOf(".") + 1).toLowerCase() });return i.setElement(s), this.messageOptionMap.set(i.messageID, e), i;} }, { key: "createFaceMessage", value: function value(e) {e.currentUser = this.tim.context.identifier;var t = new Dn(e),n = new it(e.payload);return t.setElement(n), t;} }, { key: "_generateUUID", value: function value() {var e = this.tim.context;return "".concat(e.SDKAppID, "-").concat(e.identifier, "-").concat(function () {for (var e = "", t = 32; t > 0; --t) {e += _e[Math.floor(Math.random() * ye)];}return e;}());} }, { key: "_generateTjgID", value: function value(e) {return this.tim.context.tinyID + "-" + e.random;} }, { key: "getMessageOptionByID", value: function value(e) {return this.messageOptionMap.get(e);} }, { key: "isMessageSentByCurrentInstance", value: function value(e) {return !(!this.messagesList.hasLocalMessage(e.conversationID, e.ID) && !this.singlyLinkedList.has(e.random));} }]), s;}(Pr),wa = function () {function e(t) {r(this, e), this.userID = "", this.avatar = "", this.nick = "", this.role = "", this.joinTime = "", this.lastSendMsgTime = "", this.nameCard = "", this.muteUntil = 0, this.memberCustomField = [], this._initMember(t);}return i(e, [{ key: "_initMember", value: function value(e) {this.updateMember(e);} }, { key: "updateMember", value: function value(e) {var t = [null, void 0, "", 0, NaN];e.memberCustomField && Ee(this.memberCustomField, e.memberCustomField), he(this, e, ["memberCustomField"], t);} }, { key: "updateRole", value: function value(e) {["Owner", "Admin", "Member"].indexOf(e) < 0 || (this.role = e);} }, { key: "updateMuteUntil", value: function value(e) {oe(e) || (this.muteUntil = Math.floor((Date.now() + 1e3 * e) / 1e3));} }, { key: "updateNameCard", value: function value(e) {oe(e) || (this.nameCard = e);} }, { key: "updateMemberCustomField", value: function value(e) {e && Ee(this.memberCustomField, e);} }]), e;}(),Pa = function () {function e(t) {r(this, e), this.tim = t.tim, this.groupController = t.groupController, this._initListeners();}return i(e, [{ key: "_initListeners", value: function value() {this.tim.innerEmitter.on($n, this._onReceivedGroupTips, this);} }, { key: "_onReceivedGroupTips", value: function value(e) {var t = this,n = e.data,r = n.result;n.isGroupTip && r.forEach(function (e) {switch (e.payload.operationType) {case 1:t._onNewMemberComeIn(e);break;case 2:t._onMemberQuit(e);break;case 3:t._onMemberKickedOut(e);break;case 4:t._onMemberSetAdmin(e);break;case 5:t._onMemberCancelledAdmin(e);break;case 6:t._onGroupProfileModified(e);break;case 7:t._onMemberInfoModified(e);break;default:J.warn("GroupTipsHandler._onReceivedGroupTips Unhandled groupTips. operationType=", e.payload.operationType);}});} }, { key: "_onNewMemberComeIn", value: function value(e) {var t = e.payload,n = t.memberNum,r = t.groupProfile.groupID,o = this.groupController.getLocalGroupProfile(r);o && Z(n) && (o.memberNum = n);} }, { key: "_onMemberQuit", value: function value(e) {var t = e.payload,n = t.memberNum,r = t.groupProfile.groupID,o = this.groupController.getLocalGroupProfile(r);o && Z(n) && (o.memberNum = n), this.groupController.deleteLocalGroupMembers(r, e.payload.userIDList);} }, { key: "_onMemberKickedOut", value: function value(e) {var t = e.payload,n = t.memberNum,r = t.groupProfile.groupID,o = this.groupController.getLocalGroupProfile(r);o && Z(n) && (o.memberNum = n), this.groupController.deleteLocalGroupMembers(r, e.payload.userIDList);} }, { key: "_onMemberSetAdmin", value: function value(e) {var n = this,r = e.payload.groupProfile.groupID;e.payload.userIDList.forEach(function (e) {var o = n.groupController.getLocalGroupMemberInfo(r, e);o && o.updateRole(t.GRP_MBR_ROLE_ADMIN);});} }, { key: "_onMemberCancelledAdmin", value: function value(e) {var n = this,r = e.payload.groupProfile.groupID;e.payload.userIDList.forEach(function (e) {var o = n.groupController.getLocalGroupMemberInfo(r, e);o && o.updateRole(t.GRP_MBR_ROLE_MEMBER);});} }, { key: "_onGroupProfileModified", value: function value(e) {var t = this,n = e.payload.newGroupProfile,r = e.payload.groupProfile.groupID,o = this.groupController.getLocalGroupProfile(r);Object.keys(n).forEach(function (e) {switch (e) {case "ownerID":t._ownerChaged(o, n);break;default:o[e] = n[e];}}), this.groupController.emitGroupListUpdate(!0, !0);} }, { key: "_ownerChaged", value: function value(e, n) {var r = e.groupID,o = this.groupController.getLocalGroupProfile(r),i = this.tim.context.identifier;if (i === n.ownerID) {o.updateGroup({ selfInfo: { role: t.GRP_MBR_ROLE_OWNER } });var s = this.groupController.getLocalGroupMemberInfo(r, i),a = this.groupController.getLocalGroupProfile(r).ownerID,u = this.groupController.getLocalGroupMemberInfo(r, a);s && s.updateRole(t.GRP_MBR_ROLE_OWNER), u && u.updateRole(t.GRP_MBR_ROLE_MEMBER);}} }, { key: "_onMemberInfoModified", value: function value(e) {var t = this,n = e.payload.groupProfile.groupID;e.payload.memberList.forEach(function (e) {var r = t.groupController.getLocalGroupMemberInfo(n, e.userID);r && e.muteTime && r.updateMuteUntil(e.muteTime);});} }]), e;}(),Ga = function () {function n(e) {r(this, n), this.groupController = e.groupController, this.tim = e.tim, this.pendencyMap = new Map(), this._initLiceners();}return i(n, [{ key: "_initLiceners", value: function value() {this.tim.innerEmitter.on(Wn, this._onReceivedGroupSystemNotice, this), this.tim.innerEmitter.on(Kn, this._clearGroupSystemNotice, this);} }, { key: "_clearGroupSystemNotice", value: function value() {var e = this;this.getPendencyList().then(function (n) {n.forEach(function (t) {e.pendencyMap.set("".concat(t.from, "_").concat(t.groupID, "_").concat(t.to), t);});var r = e.tim.messageController.getLocalMessageList(t.CONV_SYSTEM),o = [];r.forEach(function (t) {var n = t.payload,r = n.operatorID,i = n.operationType,s = n.groupProfile;if (i === Fe) {var a = "".concat(r, "_").concat(s.groupID, "_").concat(s.to),u = e.pendencyMap.get(a);u && Z(u.handled) && 0 !== u.handled && o.push(t);}}), e.groupController.deleteGroupSystemNotice({ messageList: o });});} }, { key: "getPendencyList", value: function value(e) {var t = this;return this.groupController.request({ name: "group", action: "getGroupPendency", param: { startTime: e && e.startTime ? e.startTime : 0, limit: e && e.limit ? e.limit : 10, handleAccount: this.tim.context.identifier } }).then(function (e) {var n = e.data,r = n.pendencyList;return 0 !== n.nextStartTime ? t.getPendencyList({ startTime: n.nextStartTime }).then(function (e) {return [].concat(v(r), v(e));}) : r;});} }, { key: "_onReceivedGroupSystemNotice", value: function value(t) {var n = this,r = t.data,o = r.result;"sync" !== r.type && o.forEach(function (t) {switch (t.payload.operationType) {case 1:n._onApplyGroupRequest(t);break;case 2:n._onApplyGroupRequestAgreed(t);break;case 3:n._onApplyGroupRequestRefused(t);break;case 4:n._onMemberKicked(t);break;case 5:n._onGroupDismissed(t);break;case 6:break;case 7:n._onInviteGroup(t);break;case 8:n._onQuitGroup(t);break;case 9:n._onSetManager(t);break;case 10:n._onDeleteManager(t);break;case 11:case 12:case 15:break;case 255:n.groupController.emitOuterEvent(e.GROUP_SYSTEM_NOTICE_RECEIVED, { message: t, type: Xe });}});} }, { key: "_onApplyGroupRequest", value: function value(t) {this.groupController.emitOuterEvent(e.GROUP_SYSTEM_NOTICE_RECEIVED, { message: t, type: Fe });} }, { key: "_onApplyGroupRequestAgreed", value: function value(t) {var n = this,r = t.payload.groupProfile.groupID;this.groupController.hasLocalGroup(r) || this.groupController.getGroupProfile({ groupID: r }).then(function (e) {var t = e.data.group;t && (n.groupController.updateGroupMap([t]), n.groupController.emitGroupListUpdate());}), this.groupController.emitOuterEvent(e.GROUP_SYSTEM_NOTICE_RECEIVED, { message: t, type: Ve });} }, { key: "_onApplyGroupRequestRefused", value: function value(t) {this.groupController.emitOuterEvent(e.GROUP_SYSTEM_NOTICE_RECEIVED, { message: t, type: Ke });} }, { key: "_onMemberKicked", value: function value(t) {var n = t.payload.groupProfile.groupID;this.groupController.hasLocalGroup(n) && this.groupController.deleteLocalGroupAndConversation(n), this.groupController.emitOuterEvent(e.GROUP_SYSTEM_NOTICE_RECEIVED, { message: t, type: Be });} }, { key: "_onGroupDismissed", value: function value(t) {var n = t.payload.groupProfile.groupID,r = this.groupController.hasLocalGroup(n),o = this.groupController.AVChatRoomHandler;r && this.groupController.deleteLocalGroupAndConversation(n), o.checkJoinedAVChatRoomByID(n) && o.reset(n), this.groupController.emitOuterEvent(e.GROUP_SYSTEM_NOTICE_RECEIVED, { message: t, type: He });} }, { key: "_onInviteGroup", value: function value(t) {var n = this,r = t.payload.groupProfile.groupID;this.groupController.hasLocalGroup(r) || this.groupController.getGroupProfile({ groupID: r }).then(function (e) {var t = e.data.group;t && (n.groupController.updateGroupMap([t]), n.groupController.emitGroupListUpdate());}), this.groupController.emitOuterEvent(e.GROUP_SYSTEM_NOTICE_RECEIVED, { message: t, type: je });} }, { key: "_onQuitGroup", value: function value(t) {var n = t.payload.groupProfile.groupID;this.groupController.hasLocalGroup(n) && this.groupController.deleteLocalGroupAndConversation(n), this.groupController.emitOuterEvent(e.GROUP_SYSTEM_NOTICE_RECEIVED, { message: t, type: Ye });} }, { key: "_onSetManager", value: function value(n) {var r = n.payload.groupProfile,o = r.to,i = r.groupID,s = this.groupController.getLocalGroupMemberInfo(i, o);s && s.updateRole(t.GRP_MBR_ROLE_ADMIN), this.groupController.emitOuterEvent(e.GROUP_SYSTEM_NOTICE_RECEIVED, { message: n, type: $e });} }, { key: "_onDeleteManager", value: function value(n) {var r = n.payload.groupProfile,o = r.to,i = r.groupID,s = this.groupController.getLocalGroupMemberInfo(i, o);s && s.updateRole(t.GRP_MBR_ROLE_MEMBER), this.groupController.emitOuterEvent(e.GROUP_SYSTEM_NOTICE_RECEIVED, { message: n, type: We });} }, { key: "reset", value: function value() {this.pendencyMap.clear();} }]), n;}(),ba = { 3: !0, 4: !0, 5: !0, 6: !0 },Ua = function () {function n(e) {var t = e.tim,o = e.groupController;r(this, n), this.tim = t, this.groupController = o, this.sequencesLinkedList = new Oa(100), this.receivedMessageCount = 0, this._pollingRequestInfoMap = new Map(), this._pollingInstanceMap = new Map(), this._joinedGroupMap = new Map();}return i(n, [{ key: "hasJoinedAVChatRoom", value: function value() {return this._joinedGroupMap.size > 0;} }, { key: "checkJoinedAVChatRoomByID", value: function value(e) {return this._joinedGroupMap.has(e);} }, { key: "getJoinedAVChatRoom", value: function value() {return this._joinedGroupMap.size > 0 ? v(this._joinedGroupMap.keys()) : null;} }, { key: "start", value: function value(e) {var t = this._pollingRequestInfoMap.get(e),n = { key: t.key, startSeq: t.startSeq };if (this._pollingInstanceMap.has(e)) {var r = this._pollingInstanceMap.get(e);r.isRunning() || r.start();} else {var o = this.groupController.createTransportCapsule({ name: "AVChatRoom", action: "startLongPoll", param: n }),i = this.tim.connectionController.createRunLoop({ pack: o, before: this._updateRequestData.bind(this, e), success: this._handleSuccess.bind(this, e), fail: this._handleFailure.bind(this), isAVChatRoomLoop: !0 });i.start(), this._pollingInstanceMap.set(e, i), J.log("AVChatRoomHandler.start message channel started. groupID=".concat(e));}} }, { key: "stop", value: function value(e) {var t = this._pollingInstanceMap.get(e);t && t.isRunning() && (t.abort(), t.stop(), J.log("AVChatRoomHandler.stop message channel stopped. groupID=".concat(e)));} }, { key: "startRunLoop", value: function value(e) {var t = this;return this._precheck().then(function () {var n = e.longPollingKey,r = e.group,o = r.groupID;return t._pollingRequestInfoMap.set(o, { key: n, startSeq: 0 }), t._joinedGroupMap.set(o, r), t.groupController.updateGroupMap([r]), t.groupController.emitGroupListUpdate(!0, !1), t.start(o), t.groupController.isLoggedIn() ? Fr({ status: we.SUCCESS, group: r }) : Fr({ status: we.SUCCESS });});} }, { key: "joinWithoutAuth", value: function value(e) {var t = this;return this.groupController.request({ name: "group", action: "applyJoinAVChatRoom", param: e }).then(function (n) {var r = n.data.longPollingKey;if (oe(r)) return Vr(new ht({ code: dt.CANNOT_JOIN_NON_AVCHATROOM_WITHOUT_LOGIN, message: Xt }));J.log("AVChatRoomHandler.joinWithoutAuth ok. groupID:", e.groupID), t.groupController.emitInnerEvent(Dr), t.groupController.emitInnerEvent(Tr, e.groupID);var o = new Ma({ groupID: e.groupID });return t.startRunLoop({ group: o, longPollingKey: r }), new Ur({ status: we.SUCCESS });}).catch(function (t) {return J.error("AVChatRoomHandler.joinWithoutAuth error:".concat(de(t), ". groupID:").concat(e.groupID)), Vr(t);});} }, { key: "_precheck", value: function value() {if (this.tim.context.unlimitedAVChatRoom) return Promise.resolve();if (!this.hasJoinedAVChatRoom()) return Promise.resolve();var e = y(this._joinedGroupMap.entries().next().value, 2),n = e[0],r = e[1];if (this.groupController.isLoggedIn()) {if (!(r.selfInfo.role === t.GRP_MBR_ROLE_OWNER || r.ownerID === this.tim.loginInfo.identifier)) return this.groupController.quitGroup(n);this.groupController.deleteLocalGroupAndConversation(n);} else this.groupController.deleteLocalGroupAndConversation(n);return this.reset(n), Promise.resolve();} }, { key: "_updateRequestData", value: function value(e, t) {var n = this._pollingRequestInfoMap.get(e),r = n.key,o = n.startSeq;t.StartSeq = o, t.key = r, this.tim.sumStatController.addTotalCount(Kr.LONG_POLLING_AV);} }, { key: "_handleSuccess", value: function value(e, t) {this.tim.sumStatController.addSuccessCount(Kr.LONG_POLLING_AV), this.tim.sumStatController.addCost(Kr.LONG_POLLING_AV, t.data.timecost);var n = t.data,r = n.key,o = n.nextSeq,i = n.rspMsgList;this._pollingRequestInfoMap.set(e, { key: r, startSeq: o }), re(i) && i.length > 0 && (i.forEach(function (e) {e.to = e.groupID;}), this._dispatchNotice(i)), this.groupController.emitInnerEvent(fr);} }, { key: "_handleFailure", value: function value(e) {if (e.error) if ("ECONNABORTED" === e.error.code || e.error.code === dt.NETWORK_TIMEOUT) {if (e.error.config) {var t = e.error.config.url,n = e.error.config.data;J.log("AVChatRoomHandler._handleFailure request timed out. url=".concat(t, " data=").concat(n));} else J.log("AVChatRoomHandler._handleFailure request timed out");} else J.log("AVChatRoomHandler._handleFailure request failed due to network error");this.groupController.emitInnerEvent(dr);} }, { key: "_dispatchNotice", value: function value(n) {if (re(n) && 0 !== n.length) {var r = Date.now(),o = null,i = [],s = [],a = n.length;a > 1 && n.sort(function (e, t) {return e.sequence - t.sequence;});for (var u = 0; u < a; u++) {if (ba[n[u].event]) {this.receivedMessageCount += 1;var c = (o = this.packMessage(n[u], n[u].event)).conversationID;if (this.receivedMessageCount % 40 == 0 && this.tim.messageLossController.detectMessageLoss(c, this.sequencesLinkedList.data()), null !== this.sequencesLinkedList.tail()) {var l = this.sequencesLinkedList.tail().value,p = o.sequence - l;p > 1 && p <= 20 ? this.tim.messageLossController.onMessageMaybeLost(c, l + 1, p - 1) : p < -1 && p >= -20 && this.tim.messageLossController.onMessageMaybeLost(c, o.sequence + 1, Math.abs(p) - 1);}this.sequencesLinkedList.pushIn(o.sequence), this._isMessageSentByCurrentInstance(o) || (o.conversationType === t.CONV_SYSTEM && s.push(o), i.push(o));} else J.warn("AVChatRoomHandler._dispatchMessage 未处理的 event 类型：", n[u].event);}if (s.length > 0 && this.groupController.emitInnerEvent(Wn, { result: s, eventDataList: [], type: "poll" }), 0 !== i.length) {var h = this.packConversationOption(i);h.length > 0 && this.groupController.emitInnerEvent($n, { eventDataList: h, type: "poll" }), J.debug("AVChatRoomHandler._dispatchNotice nums=".concat(i.length));var d = this.tim.sumStatController;d.addTotalCount(Kr.MESSAGE_RECEIVED_AV), d.addSuccessCount(Kr.MESSAGE_RECEIVED_AV), d.addCost(Kr.MESSAGE_RECEIVED_AV, Date.now() - r), this.groupController.emitOuterEvent(e.MESSAGE_RECEIVED, i);}}} }, { key: "_isMessageSentByCurrentInstance", value: function value(e) {return !!this.tim.messageController.isMessageSentByCurrentInstance(e);} }, { key: "packMessage", value: function value(e, n) {e.currentUser = this.tim.context.identifier, e.conversationType = 5 === n ? t.CONV_SYSTEM : t.CONV_GROUP, e.isSystemMessage = !!e.isSystemMessage;var r = new Dn(e),o = this.packElements(e, n);return r.setElement(o), r;} }, { key: "packElements", value: function value(e, n) {return 4 === n || 6 === n ? { type: t.MSG_GRP_TIP, content: u({}, e.elements, { groupProfile: e.groupProfile }) } : 5 === n ? { type: t.MSG_GRP_SYS_NOTICE, content: u({}, e.elements, { groupProfile: e.groupProfile }) } : this.tim.bigDataHallwayController.parseElements(e.elements, e.from);} }, { key: "packConversationOption", value: function value(e) {for (var t = new Map(), n = 0; n < e.length; n++) {var r = e[n],o = r.conversationID;if (t.has(o)) {var i = t.get(o);i.lastMessage = r, "in" === r.flow && i.unreadCount++;} else t.set(o, { conversationID: r.conversationID, unreadCount: "out" === r.flow ? 0 : 1, type: r.conversationType, subType: r.conversationSubType, lastMessage: r });}return v(t.values());} }, { key: "reset", value: function value(e) {if (0 !== this._pollingInstanceMap.size) {if (e) J.log("AVChatRoomHandler.reset groupID=".concat(e)), this.stop(e), this._pollingInstanceMap.delete(e), this._joinedGroupMap.delete(e), this._pollingRequestInfoMap.delete(e);else {J.log("AVChatRoomHandler.reset all");var t,n = C(this._pollingInstanceMap.keys());try {for (n.s(); !(t = n.n()).done;) {var r = t.value;this.stop(r);}} catch (o) {n.e(o);} finally {n.f();}this._pollingInstanceMap.clear(), this._joinedGroupMap.clear(), this._pollingRequestInfoMap.clear();}this.sequencesLinkedList.reset(), this.receivedMessageCount = 0;}} }]), n;}(),qa = function (n) {c(s, n);var o = _(s);function s(e) {var t;return r(this, s), (t = o.call(this, e)).groupMap = new Map(), t.groupMemberListMap = new Map(), t.groupNoticeHandler = new Ga({ tim: e, groupController: g(t) }), t.groupTipsHandler = new Pa({ tim: e, groupController: g(t) }), t.AVChatRoomHandler = new Ua({ tim: e, groupController: g(t) }), t._initListeners(), t;}return i(s, [{ key: "createGroup", value: function value(e) {var n = this;if (!["Public", "Private", "ChatRoom", "AVChatRoom"].includes(e.type)) {var r = new ht({ code: dt.ILLEGAL_GROUP_TYPE, message: Bt });return Vr(r);}De(e.type) && !oe(e.memberList) && e.memberList.length > 0 && (J.warn("GroupController.createGroup 创建AVChatRoom时不能添加群成员，自动忽略该字段"), e.memberList = void 0), Se(e.type) || oe(e.joinOption) || (J.warn("GroupController.createGroup 创建Work/Meeting/AVChatRoom群时不能设置字段：joinOption，自动忽略该字段"), e.joinOption = void 0);var o = new Br();return o.setMethod(ho).setStart(), J.log("GroupController.createGroup."), this.request({ name: "group", action: "create", param: e }).then(function (r) {if (o.setCode(0).setNetworkType(n.getNetworkType()).setText("groupType=".concat(e.type, " groupID=").concat(r.data.groupID)).setEnd(), J.log("GroupController.createGroup ok. groupID:", r.data.groupID), e.type === t.GRP_AVCHATROOM) return n.getGroupProfile({ groupID: r.data.groupID });n.updateGroupMap([u({}, e, { groupID: r.data.groupID })]);var i = n.tim.createCustomMessage({ to: r.data.groupID, conversationType: t.CONV_GROUP, payload: { data: "group_create", extension: "".concat(n.tim.context.identifier, "创建群组") } });return n.tim.sendMessage(i), n.emitGroupListUpdate(), n.getGroupProfile({ groupID: r.data.groupID });}).then(function (e) {var n = e.data.group;return n.selfInfo.messageRemindType = t.MSG_REMIND_ACPT_AND_NOTE, n.selfInfo.role = t.GRP_MBR_ROLE_OWNER, e;}).catch(function (t) {return o.setText("groupType=".concat(e.type)), n.probeNetwork().then(function (e) {var n = y(e, 2),r = n[0],i = n[1];o.setError(t, r, i).setEnd();}), J.error("GroupController.createGroup error:", t), Vr(t);});} }, { key: "joinGroup", value: function value(e) {if (this.hasLocalGroup(e.groupID)) {var n = { status: t.JOIN_STATUS_ALREADY_IN_GROUP };return Fr(n);}if (e.type === t.GRP_WORK) {var r = new ht({ code: dt.CANNOT_JOIN_WORK, message: Ht });return Vr(r);}return J.log("GroupController.joinGroup. groupID:", e.groupID), this.isLoggedIn() ? this.applyJoinGroup(e) : this.AVChatRoomHandler.joinWithoutAuth(e);} }, { key: "quitGroup", value: function value(e) {var t = this;J.log("GroupController.quitGroup. groupID:", e);var n = this.AVChatRoomHandler.checkJoinedAVChatRoomByID(e);if (n && !this.isLoggedIn()) return J.log("GroupController.quitGroup anonymously ok. groupID:", e), this.deleteLocalGroupAndConversation(e), this.AVChatRoomHandler.reset(e), Fr({ groupID: e });var r = new Br();return r.setMethod(go).setStart(), this.request({ name: "group", action: "quitGroup", param: { groupID: e } }).then(function () {return r.setCode(0).setNetworkType(t.getNetworkType()).setText("groupID=".concat(e)).setEnd(), J.log("GroupController.quitGroup ok. groupID:", e), n && t.AVChatRoomHandler.reset(e), t.deleteLocalGroupAndConversation(e), new Ur({ groupID: e });}).catch(function (n) {return r.setText("groupID=".concat(e)), t.probeNetwork().then(function (e) {var t = y(e, 2),o = t[0],i = t[1];r.setError(n, o, i).setEnd();}), J.error("GroupController.quitGroup error. error:".concat(de(n), " groupID:").concat(e)), Vr(n);});} }, { key: "changeGroupOwner", value: function value(e) {var n = this;if (this.hasLocalGroup(e.groupID) && this.getLocalGroupProfile(e.groupID).type === t.GRP_AVCHATROOM) return Vr(new ht({ code: dt.CANNOT_CHANGE_OWNER_IN_AVCHATROOM, message: jt }));if (e.newOwnerID === this.tim.loginInfo.identifier) return Vr(new ht({ code: dt.CANNOT_CHANGE_OWNER_TO_SELF, message: Yt }));var r = new Br();return r.setMethod(_o).setStart(), J.log("GroupController.changeGroupOwner. groupID:", e.groupID), this.request({ name: "group", action: "changeGroupOwner", param: e }).then(function () {r.setCode(0).setNetworkType(n.getNetworkType()).setText("groupID=".concat(e.groupID)).setEnd(), J.log("GroupController.changeGroupOwner ok. groupID:", e.groupID);var t = e.groupID,o = e.newOwnerID;n.groupMap.get(t).ownerID = o;var i = n.groupMemberListMap.get(t);if (i instanceof Map) {var s = i.get(n.tim.loginInfo.identifier);oe(s) || (s.updateRole("Member"), n.groupMap.get(t).selfInfo.role = "Member");var a = i.get(o);oe(a) || a.updateRole("Owner");}return n.emitGroupListUpdate(!0, !1), new Ur({ group: n.groupMap.get(t) });}).catch(function (t) {return r.setText("groupID=".concat(e.groupID)), n.probeNetwork().then(function (e) {var n = y(e, 2),o = n[0],i = n[1];r.setError(t, o, i).setEnd();}), J.error("GroupController.changeGroupOwner error:".concat(de(t), " groupID:").concat(e.groupID)), Vr(t);});} }, { key: "dismissGroup", value: function value(e) {var n = this;if (this.hasLocalGroup(e) && this.getLocalGroupProfile(e).type === t.GRP_WORK) return Vr(new ht({ code: dt.CANNOT_DISMISS_WORK, message: $t }));var r = new Br();return r.setMethod(Io).setStart(), J.log("GroupController.dismissGroup. groupID:".concat(e)), this.request({ name: "group", action: "destroyGroup", param: { groupID: e } }).then(function () {return r.setCode(0).setNetworkType(n.getNetworkType()).setText("groupID=".concat(e)).setEnd(), J.log("GroupController.dismissGroup ok. groupID:".concat(e)), n.deleteLocalGroupAndConversation(e), n.checkJoinedAVChatRoomByID(e) && n.AVChatRoomHandler.reset(e), new Ur({ groupID: e });}).catch(function (t) {return r.setText("groupID=".concat(e)), n.probeNetwork().then(function (e) {var n = y(e, 2),o = n[0],i = n[1];r.setError(t, o, i).setEnd();}), J.error("GroupController.dismissGroup error:".concat(de(t), " groupID:").concat(e)), Vr(t);});} }, { key: "updateGroupProfile", value: function value(e) {var t = this;!this.hasLocalGroup(e.groupID) || Se(this.getLocalGroupProfile(e.groupID).type) || oe(e.joinOption) || (J.warn("GroupController.updateGroupProfile Work/Meeting/AVChatRoom群不能设置字段：joinOption，自动忽略该字段"), e.joinOption = void 0), oe(e.muteAllMembers) || (e.muteAllMembers ? e.muteAllMembers = "On" : e.muteAllMembers = "Off");var n = new Br();return n.setMethod(Mo).setStart(), n.setText(JSON.stringify(e)), J.log("GroupController.updateGroupProfile. groupID:", e.groupID), this.request({ name: "group", action: "updateGroupProfile", param: e }).then(function () {(n.setCode(0).setNetworkType(t.getNetworkType()).setEnd(), J.log("GroupController.updateGroupProfile ok. groupID:", e.groupID), t.hasLocalGroup(e.groupID)) && (t.groupMap.get(e.groupID).updateGroup(e), t._setStorageGroupList());return new Ur({ group: t.groupMap.get(e.groupID) });}).catch(function (r) {return t.probeNetwork().then(function (e) {var t = y(e, 2),o = t[0],i = t[1];n.setError(r, o, i).setEnd();}), J.log("GroupController.updateGroupProfile failed. error:".concat(de(r), " groupID:").concat(e.groupID)), Vr(r);});} }, { key: "setGroupMemberRole", value: function value(e) {var n = this,r = e.groupID,o = e.userID,i = e.role,s = this.groupMap.get(r);if (s.selfInfo.role !== t.GRP_MBR_ROLE_OWNER) return Vr(new ht({ code: dt.NOT_OWNER, message: Qt }));if ([t.GRP_WORK, t.GRP_AVCHATROOM].includes(s.type)) return Vr(new ht({ code: dt.CANNOT_SET_MEMBER_ROLE_IN_WORK_AND_AVCHATROOM, message: Zt }));if ([t.GRP_MBR_ROLE_ADMIN, t.GRP_MBR_ROLE_MEMBER].indexOf(i) < 0) return Vr(new ht({ code: dt.INVALID_MEMBER_ROLE, message: en }));if (o === this.tim.loginInfo.identifier) return Vr(new ht({ code: dt.CANNOT_SET_SELF_MEMBER_ROLE, message: tn }));var a = new Br();return a.setMethod(Lo).setStart(), a.setText("groupID=".concat(r, " userID=").concat(o, " role=").concat(i)), J.log("GroupController.setGroupMemberRole. groupID:".concat(r, ". userID: ").concat(o)), this._modifyGroupMemberInfo({ groupID: r, userID: o, role: i }).then(function (e) {return a.setCode(0).setNetworkType(n.getNetworkType()).setEnd(), J.log("GroupController.setGroupMemberRole ok. groupID:".concat(r, ". userID: ").concat(o)), new Ur({ group: s, member: e });}).catch(function (e) {return n.probeNetwork().then(function (t) {var n = y(t, 2),r = n[0],o = n[1];a.setError(e, r, o).setEnd();}), J.error("GroupController.setGroupMemberRole error:".concat(de(e), " groupID:").concat(r, " userID:").concat(o)), Vr(e);});} }, { key: "setGroupMemberMuteTime", value: function value(e) {var t = this,n = e.groupID,r = e.userID,o = e.muteTime;if (r === this.tim.loginInfo.identifier) return Vr(new ht({ code: dt.CANNOT_MUTE_SELF, message: nn }));J.log("GroupController.setGroupMemberMuteTime. groupID:".concat(n, ". userID: ").concat(r));var i = new Br();return i.setMethod(Oo).setStart(), i.setText("groupID=".concat(n, " userID=").concat(r, " muteTime=").concat(o)), this._modifyGroupMemberInfo({ groupID: n, userID: r, muteTime: o }).then(function (e) {return i.setCode(0).setNetworkType(t.getNetworkType()).setEnd(), J.log("GroupController.setGroupMemberMuteTime ok. groupID:".concat(n, ". userID: ").concat(r)), new Ur({ group: t.getLocalGroupProfile(n), member: e });}).catch(function (e) {return t.probeNetwork().then(function (t) {var n = y(t, 2),r = n[0],o = n[1];i.setError(e, r, o).setEnd();}), J.error("GroupController.setGroupMemberMuteTime error:".concat(de(e), " groupID:").concat(n, " userID:").concat(r)), Vr(e);});} }, { key: "setMessageRemindType", value: function value(e) {var t = this,n = new Br();n.setMethod(vo).setStart(), n.setText("groupID=".concat(e.groupID, " userID=").concat(e.userID || this.tim.loginInfo.identifier)), J.log("GroupController.setMessageRemindType. groupID:".concat(e.groupID, ". userID: ").concat(e.userID || this.tim.loginInfo.identifier));var r = e.groupID,o = e.messageRemindType;return this._modifyGroupMemberInfo({ groupID: r, messageRemindType: o, userID: this.tim.loginInfo.identifier }).then(function () {n.setCode(0).setNetworkType(t.getNetworkType()).setEnd(), J.log("GroupController.setMessageRemindType ok. groupID:".concat(e.groupID, " userID:").concat(e.userID || t.tim.loginInfo.identifier));var r = t.getLocalGroupProfile(e.groupID);return r && (r.selfInfo.messageRemindType = o), new Ur({ group: r });}).catch(function (r) {return t.probeNetwork().then(function (e) {var t = y(e, 2),o = t[0],i = t[1];n.setError(r, o, i).setEnd();}), J.error("GroupController.setMessageRemindType error:".concat(de(r), " groupID:").concat(e.groupID, " userID:").concat(e.userID || t.tim.loginInfo.identifier)), Vr(r);});} }, { key: "setGroupMemberNameCard", value: function value(e) {var t = this,n = e.groupID,r = e.userID,o = void 0 === r ? this.tim.loginInfo.identifier : r,i = e.nameCard;J.log("GroupController.setGroupMemberNameCard. groupID:".concat(n, ". userID: ").concat(o));var s = new Br();return s.setMethod(No).setStart(), s.setText("groupID=".concat(n, " userID=").concat(o, " nameCard=").concat(i)), this._modifyGroupMemberInfo({ groupID: n, userID: o, nameCard: i }).then(function (e) {J.log("GroupController.setGroupMemberNameCard ok. groupID:".concat(n, ". userID: ").concat(o)), s.setCode(0).setNetworkType(t.getNetworkType()).setEnd();var r = t.getLocalGroupProfile(n);return o === t.tim.loginInfo.identifier && r && r.setSelfNameCard(i), new Ur({ group: r, member: e });}).catch(function (e) {return t.probeNetwork().then(function (t) {var n = y(t, 2),r = n[0],o = n[1];s.setError(e, r, o).setEnd();}), J.error("GroupController.setGroupMemberNameCard error:".concat(de(e), " groupID:").concat(n, " userID:").concat(o)), Vr(e);});} }, { key: "setGroupMemberCustomField", value: function value(e) {var t = this,n = e.groupID,r = e.userID,o = void 0 === r ? this.tim.loginInfo.identifier : r,i = e.memberCustomField;J.log("GroupController.setGroupMemberCustomField. groupID:".concat(n, ". userID: ").concat(o));var s = new Br();return s.setMethod(wo).setStart(), s.setText("groupID=".concat(n, " userID=").concat(o, " memberCustomField=").concat(i)), this._modifyGroupMemberInfo({ groupID: n, userID: o, memberCustomField: i }).then(function (e) {return s.setCode(0).setNetworkType(t.getNetworkType()).setEnd(), J.log("GroupController.setGroupMemberCustomField ok. groupID:".concat(n, ". userID: ").concat(o)), new Ur({ group: t.groupMap.get(n), member: e });}).catch(function (e) {return t.probeNetwork().then(function (t) {var n = y(t, 2),r = n[0],o = n[1];s.setError(e, r, o).setEnd();}), J.error("GroupController.setGroupMemberCustomField error:".concat(de(e), " groupID:").concat(n, " userID:").concat(o)), Vr(e);});} }, { key: "getGroupList", value: function value(e) {var t = this,n = new Br();n.setMethod(Co).setStart(), J.log("GroupController.getGroupList");var r = { introduction: "Introduction", notification: "Notification", createTime: "CreateTime", ownerID: "Owner_Account", lastInfoTime: "LastInfoTime", memberNum: "MemberNum", maxMemberNum: "MaxMemberNum", joinOption: "ApplyJoinOption", muteAllMembers: "ShutUpAllMember" },o = ["Type", "Name", "FaceUrl", "NextMsgSeq", "LastMsgTime"];return e && e.groupProfileFilter && e.groupProfileFilter.forEach(function (e) {r[e] && o.push(r[e]);}), this.request({ name: "group", action: "list", param: { responseFilter: { groupBaseInfoFilter: o, selfInfoFilter: ["Role", "JoinTime", "MsgFlag"] } } }).then(function (e) {var r = e.data.groups;return n.setCode(0).setNetworkType(t.getNetworkType()).setText(r.length).setEnd(), J.log("GroupController.getGroupList ok. nums=".concat(r.length)), t._groupListTreeShaking(r), t.updateGroupMap(r), t.tempConversationList && (J.log("GroupController.getGroupList update last message with tempConversationList, nums=".concat(t.tempConversationList.length)), t._handleUpdateGroupLastMessage({ data: t.tempConversationList }), t.tempConversationList = null), t.emitGroupListUpdate(), new Ur({ groupList: t.getLocalGroups() });}).catch(function (e) {return t.probeNetwork().then(function (t) {var r = y(t, 2),o = r[0],i = r[1];n.setError(e, o, i).setEnd();}), J.error("GroupController.getGroupList error:", e), Vr(e);});} }, { key: "getGroupMemberList", value: function value(e) {var t = this,n = e.groupID,r = e.offset,o = void 0 === r ? 0 : r,i = e.count,s = void 0 === i ? 15 : i,a = new Br();a.setMethod(Do).setStart(), J.log("GroupController.getGroupMemberList groupID: ".concat(n, " offset: ").concat(o, " count: ").concat(s));var u = [];return this.request({ name: "group", action: "getGroupMemberList", param: { groupID: n, offset: o, limit: s > 100 ? 100 : s, memberInfoFilter: ["Role", "NameCard", "ShutUpUntil"] } }).then(function (e) {var r = e.data,o = r.members,i = r.memberNum;return re(o) && 0 !== o.length ? (t.hasLocalGroup(n) && (t.getLocalGroupProfile(n).memberNum = i), u = t._updateLocalGroupMemberMap(n, o), t.tim.getUserProfile({ userIDList: o.map(function (e) {return e.userID;}), tagList: [et.NICK, et.AVATAR] })) : Promise.resolve([]);}).then(function (e) {var r = e.data;if (!re(r) || 0 === r.length) return Fr({ memberList: [] });var i = r.map(function (e) {return { userID: e.userID, nick: e.nick, avatar: e.avatar };});return t._updateLocalGroupMemberMap(n, i), a.setCode(0).setNetworkType(t.getNetworkType()).setText("groupID=".concat(n, " offset=").concat(o, " count=").concat(s)).setEnd(), J.log("GroupController.getGroupMemberList ok."), new Ur({ memberList: u });}).catch(function (e) {return t.probeNetwork().then(function (t) {var n = y(t, 2),r = n[0],o = n[1];a.setError(e, r, o).setEnd();}), J.error("GroupController.getGroupMemberList error:", e), Vr(e);});} }, { key: "getLocalGroups", value: function value() {return v(this.groupMap.values());} }, { key: "getLocalGroupProfile", value: function value(e) {return this.groupMap.get(e);} }, { key: "hasLocalGroup", value: function value(e) {return this.groupMap.has(e);} }, { key: "getLocalGroupMemberInfo", value: function value(e, t) {return this.groupMemberListMap.has(e) ? this.groupMemberListMap.get(e).get(t) : null;} }, { key: "setLocalGroupMember", value: function value(e, t) {if (this.groupMemberListMap.has(e)) this.groupMemberListMap.get(e).set(t.userID, t);else {var n = new Map().set(t.userID, t);this.groupMemberListMap.set(e, n);}} }, { key: "hasLocalGroupMember", value: function value(e, t) {return this.groupMemberListMap.has(e) && this.groupMemberListMap.get(e).has(t);} }, { key: "hasLocalGroupMemberMap", value: function value(e) {return this.groupMemberListMap.has(e);} }, { key: "getGroupProfile", value: function value(e) {var t = this,n = new Br();n.setMethod(Eo).setStart(), J.log("GroupController.getGroupProfile. groupID:", e.groupID);var r = e.groupID,o = e.groupCustomFieldFilter,i = { groupIDList: [r], responseFilter: { groupBaseInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "Owner_Account", "CreateTime", "InfoSeq", "LastInfoTime", "LastMsgTime", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "NextMsgSeq", "ShutUpAllMember"], groupCustomFieldFilter: o } };return this.getGroupProfileAdvance(i).then(function (o) {var i,s = o.data,a = s.successGroupList,u = s.failureGroupList;return J.log("GroupController.getGroupProfile ok. groupID:".concat(e.groupID)), u.length > 0 ? Vr(u[0]) : (De(a[0].type) && !t.hasLocalGroup(r) ? i = new Ma(a[0]) : (t.updateGroupMap(a), i = t.getLocalGroupProfile(r)), n.setCode(0).setNetworkType(t.getNetworkType()).setText("groupID=".concat(i.groupID, " type=").concat(i.type, " muteAllMembers=").concat(i.muteAllMembers, " ownerID=").concat(i.ownerID)).setEnd(), i && i.selfInfo && !i.selfInfo.nameCard ? t.updateSelfInfo(i).then(function (e) {return new Ur({ group: e });}) : new Ur({ group: i }));}).catch(function (r) {return t.probeNetwork().then(function (t) {var o = y(t, 2),i = o[0],s = o[1];n.setError(r, i, s).setText("groupID=".concat(e.groupID)).setEnd();}), J.error("GroupController.getGroupProfile error:".concat(de(r), " groupID:").concat(e.groupID)), Vr(r);});} }, { key: "getGroupMemberProfile", value: function value(e) {var t = this,n = new Br();n.setMethod(Ao).setText(e.userIDList.length > 5 ? "userIDList.length=".concat(e.userIDList.length) : "userIDList=".concat(e.userIDList)).setStart(), J.log("GroupController.getGroupMemberProfile groupID:".concat(e.groupID, " userIDList:").concat(e.userIDList.join(","))), e.userIDList.length > 50 && (e.userIDList = e.userIDList.slice(0, 50));var r = e.groupID,o = e.userIDList;return this._getGroupMemberProfileAdvance(u({}, e, { userIDList: o })).then(function (e) {var n = e.data.members;return re(n) && 0 !== n.length ? (t._updateLocalGroupMemberMap(r, n), t.tim.getUserProfile({ userIDList: n.map(function (e) {return e.userID;}), tagList: [et.NICK, et.AVATAR] })) : Fr([]);}).then(function (e) {var i = e.data.map(function (e) {return { userID: e.userID, nick: e.nick, avatar: e.avatar };});t._updateLocalGroupMemberMap(r, i);var s = o.filter(function (e) {return t.hasLocalGroupMember(r, e);}).map(function (e) {return t.getLocalGroupMemberInfo(r, e);});return n.setCode(0).setNetworkType(t.getNetworkType()).setEnd(), new Ur({ memberList: s });});} }, { key: "_getGroupMemberProfileAdvance", value: function value(e) {return this.request({ name: "group", action: "getGroupMemberProfile", param: u({}, e, { memberInfoFilter: e.memberInfoFilter ? e.memberInfoFilter : ["Role", "JoinTime", "NameCard", "ShutUpUntil"] }) });} }, { key: "updateSelfInfo", value: function value(e) {var t = e.groupID;J.log("GroupController.updateSelfInfo groupID:", t);var n = { groupID: t, userIDList: [this.tim.loginInfo.identifier] };return this.getGroupMemberProfile(n).then(function (n) {var r = n.data.memberList;return J.log("GroupController.updateSelfInfo ok. groupID:", t), e && 0 !== r.length && e.updateSelfInfo(r[0]), e;});} }, { key: "addGroupMember", value: function value(e) {var t = this,n = new Br();n.setMethod(ko).setText("groupID=".concat(e.groupID)).setStart();var r = this.getLocalGroupProfile(e.groupID);if (De(r.type)) {var o = new ht({ code: dt.CANNOT_ADD_MEMBER_IN_AVCHATROOM, message: zt });return n.setCode(dt.CANNOT_ADD_MEMBER_IN_AVCHATROOM).setMessage(zt).setNetworkType(this.getNetworkType()).setText("groupID=".concat(e.groupID, " groupType=").concat(r.type)).setEnd(), Vr(o);}return e.userIDList = e.userIDList.map(function (e) {return { userID: e };}), J.log("GroupController.addGroupMember. groupID:", e.groupID), this.request({ name: "group", action: "addGroupMember", param: e }).then(function (o) {var i = o.data.members;n.setCode(0).setNetworkType(t.getNetworkType()).setText("groupID=".concat(e.groupID)).setEnd(), J.log("GroupController.addGroupMember ok. groupID:", e.groupID);var s = i.filter(function (e) {return 1 === e.result;}).map(function (e) {return e.userID;}),a = i.filter(function (e) {return 0 === e.result;}).map(function (e) {return e.userID;}),u = i.filter(function (e) {return 2 === e.result;}).map(function (e) {return e.userID;});return 0 === s.length ? new Ur({ successUserIDList: s, failureUserIDList: a, existedUserIDList: u }) : (r.memberNum += s.length, new Ur({ successUserIDList: s, failureUserIDList: a, existedUserIDList: u, group: r }));}).catch(function (r) {return t.probeNetwork().then(function (t) {var o = y(t, 2),i = o[0],s = o[1];n.setError(r, i, s).setText("groupID=".concat(e.groupID)).setEnd();}), J.error("GroupController.addGroupMember error:".concat(de(r), " groupID:").concat(e.groupID)), Vr(r);});} }, { key: "deleteGroupMember", value: function value(e) {var n = this,r = new Br();r.setMethod(Ro).setText(e.userIDList.length > 5 ? "userIDList.length=".concat(e.userIDList.length) : "userIDList=".concat(e.userIDList)).setStart(), J.log("GroupController.deleteGroupMember groupID:".concat(e.groupID, " userIDList:").concat(e.userIDList));var o = this.getLocalGroupProfile(e.groupID);return o.type === t.GRP_AVCHATROOM ? Vr(new ht({ code: dt.CANNOT_KICK_MEMBER_IN_AVCHATROOM, message: Jt })) : this.request({ name: "group", action: "deleteGroupMember", param: e }).then(function () {return r.setCode(0).setNetworkType(n.getNetworkType()).setEnd(), J.log("GroupController.deleteGroupMember ok"), o.memberNum--, n.deleteLocalGroupMembers(e.groupID, e.userIDList), new Ur({ group: o, userIDList: e.userIDList });}).catch(function (t) {return n.probeNetwork().then(function (n) {var o = y(n, 2),i = o[0],s = o[1];r.setError(t, i, s).setText("groupID=".concat(e.groupID)).setEnd();}), J.error("GroupController.deleteGroupMember error:".concat(de(t), " groupID:").concat(e.groupID)), Vr(t);});} }, { key: "searchGroupByID", value: function value(e) {var t = this,n = { groupIDList: [e] },r = new Br();return r.setMethod(mo).setText("groupID=".concat(e)).setStart(), J.log("GroupController.searchGroupByID. groupID:".concat(e)), this.request({ name: "group", action: "searchGroupByID", param: n }).then(function (n) {var o = n.data.groupProfile;if (o[0].errorCode !== Pe.SUCCESS) throw new ht({ code: o[0].errorCode, message: o[0].errorInfo });return r.setCode(0).setNetworkType(t.getNetworkType()).setEnd(), J.log("GroupController.searchGroupByID ok. groupID:".concat(e)), new Ur({ group: new Ma(o[0]) });}).catch(function (n) {return t.probeNetwork().then(function (e) {var t = y(e, 2),o = t[0],i = t[1];r.setError(n, o, i).setEnd();}), J.warn("GroupController.searchGroupByID error:".concat(de(n), " groupID:").concat(e)), Vr(n);});} }, { key: "applyJoinGroup", value: function value(e) {var t = this,n = new Br();return n.setMethod(fo).setStart(), this.request({ name: "group", action: "applyJoinGroup", param: e }).then(function (r) {var o = r.data,i = o.joinedStatus,s = o.longPollingKey;switch (n.setCode(0).setNetworkType(t.getNetworkType()).setText("groupID=".concat(e.groupID, " joinedStatus=").concat(i)).setEnd(), J.log("GroupController.joinGroup ok. groupID:".concat(e.groupID, " joinedStatus:").concat(i, " longPollingKey:").concat(s)), i) {case we.WAIT_APPROVAL:return new Ur({ status: we.WAIT_APPROVAL });case we.SUCCESS:return t.getGroupProfile({ groupID: e.groupID }).then(function (n) {var r = n.data.group,o = { status: we.SUCCESS, group: r };return oe(s) ? (t.emitGroupListUpdate(!0, !1), new Ur(o)) : (t.emitInnerEvent(Tr, e.groupID), t.AVChatRoomHandler.startRunLoop({ longPollingKey: s, group: r }));});default:var a = new ht({ code: dt.JOIN_GROUP_FAIL, message: Wt });return J.error("GroupController.joinGroup error:".concat(de(a), " groupID:").concat(e.groupID)), Vr(a);}}).catch(function (r) {return n.setText("groupID=".concat(e.groupID)), t.probeNetwork().then(function (e) {var t = y(e, 2),o = t[0],i = t[1];n.setError(r, o, i).setEnd();}), J.error("GroupController.joinGroup error:".concat(de(r), " groupID:").concat(e.groupID)), Vr(r);});} }, { key: "applyJoinAVChatRoom", value: function value(e) {return this.AVChatRoomHandler.applyJoinAVChatRoom(e);} }, { key: "handleGroupApplication", value: function value(e) {var t = this,n = e.message.payload,r = n.groupProfile.groupID,o = n.authentication,i = n.messageKey,s = n.operatorID,a = new Br();return a.setMethod(yo).setText("groupID=".concat(r)).setStart(), J.log("GroupController.handleApplication. groupID:", r), this.request({ name: "group", action: "handleApplyJoinGroup", param: u({}, e, { applicant: s, groupID: r, authentication: o, messageKey: i }) }).then(function () {return a.setCode(0).setNetworkType(t.getNetworkType()).setEnd(), J.log("GroupController.handleApplication ok. groupID:", r), t.deleteGroupSystemNotice({ messageList: [e.message] }), new Ur({ group: t.getLocalGroupProfile(r) });}).catch(function (e) {return t.probeNetwork().then(function (t) {var n = y(t, 2),r = n[0],o = n[1];a.setError(e, r, o).setEnd();}), J.error("GroupController.handleApplication error. error:".concat(de(e), " groupID:").concat(r)), Vr(e);});} }, { key: "deleteGroupSystemNotice", value: function value(e) {var n = this;return re(e.messageList) && 0 !== e.messageList.length ? (J.log("GroupController.deleteGroupSystemNotice " + e.messageList.map(function (e) {return e.ID;})), this.request({ name: "group", action: "deleteGroupSystemNotice", param: { messageListToDelete: e.messageList.map(function (e) {return { from: t.CONV_SYSTEM, messageSeq: e.clientSequence, messageRandom: e.random };}) } }).then(function () {return J.log("GroupController.deleteGroupSystemNotice ok"), e.messageList.forEach(function (e) {n.tim.messageController.deleteLocalMessage(e);}), new Ur();}).catch(function (e) {return J.error("GroupController.deleteGroupSystemNotice error:", e), Vr(e);})) : Fr();} }, { key: "getGroupProfileAdvance", value: function value(e) {return re(e.groupIDList) && e.groupIDList.length > 50 && (J.warn("GroupController.getGroupProfileAdvance 获取群资料的数量不能超过50个"), e.groupIDList.length = 50), J.log("GroupController.getGroupProfileAdvance. groupIDList:", e.groupIDList), this.request({ name: "group", action: "query", param: e }).then(function (e) {J.log("GroupController.getGroupProfileAdvance ok.");var t = e.data.groups,n = t.filter(function (e) {return oe(e.errorCode) || e.errorCode === Pe.SUCCESS;}),r = t.filter(function (e) {return e.errorCode && e.errorCode !== Pe.SUCCESS;}).map(function (e) {return new ht({ code: Number("500".concat(e.errorCode)), message: e.errorInfo, data: { groupID: e.groupID } });});return new Ur({ successGroupList: n, failureGroupList: r });}).catch(function (t) {return J.error("GroupController.getGroupProfileAdvance error:".concat(de(t), " groupIDList:").concat(e.groupIDList)), Vr(t);});} }, { key: "_deleteLocalGroup", value: function value(e) {return this.groupMap.delete(e), this.groupMemberListMap.delete(e), this._setStorageGroupList(), this.groupMap.has(e) && this.groupMemberListMap.has(e);} }, { key: "_initGroupList", value: function value() {var e = this,t = new Br();t.setMethod(So).setStart(), J.time(Kr.INIT_GROUP_LIST), J.log("GroupController._initGroupList");var n = this._getStorageGroupList();re(n) && n.length > 0 ? (n.forEach(function (t) {e.groupMap.set(t.groupID, new Ma(t));}), this.emitGroupListUpdate(!0, !1), t.setCode(0).setNetworkType(this.getNetworkType()).setText(this.groupMap.size).setEnd()) : t.setCode(0).setNetworkType(this.getNetworkType()).setText(0).setEnd(), this.triggerReady(), J.log("GroupController._initGroupList ok. initCost=".concat(J.timeEnd(Kr.INIT_GROUP_LIST), "ms")), this.getGroupList();} }, { key: "_initListeners", value: function value() {var e = this.tim.innerEmitter;e.once(xn, this._initGroupList, this), e.on(Mr, this._handleUpdateGroupLastMessage, this), e.on($n, this._handleReceivedGroupMessage, this), e.on(Sr, this._handleProfileUpdated, this);} }, { key: "emitGroupListUpdate", value: function value() {var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],n = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],r = this.getLocalGroups();n && this.emitInnerEvent(gr, r), t && this.emitOuterEvent(e.GROUP_LIST_UPDATED, r);} }, { key: "_handleReceivedGroupMessage", value: function value(e) {var n = this,r = e.data.eventDataList;Array.isArray(r) && r.forEach(function (e) {var r = e.conversationID.replace(t.CONV_GROUP, "");n.groupMap.has(r) && (n.groupMap.get(r).nextMessageSeq = e.lastMessage.sequence + 1);});} }, { key: "_onReceivedGroupSystemNotice", value: function value(e) {var t = e.data;this.groupNoticeHandler._onReceivedGroupNotice(t);} }, { key: "_handleUpdateGroupLastMessage", value: function value(e) {var n = e.data;if (J.log("GroupController._handleUpdateGroupLastMessage convNums=".concat(n.length, " groupNums=").concat(this.groupMap.size)), 0 !== this.groupMap.size) {for (var r, o, i, s = !1, a = 0, u = n.length; a < u; a++) {(r = n[a]).conversationID && r.type !== t.CONV_GROUP && (o = r.conversationID.split(/^GROUP/)[1], (i = this.getLocalGroupProfile(o)) && (i.lastMessage = r.lastMessage, s = !0));}s && (this.groupMap = this._sortLocalGroupList(this.groupMap), this.emitGroupListUpdate(!0, !1));} else this.tempConversationList = n;} }, { key: "_sortLocalGroupList", value: function value(e) {var t = v(e).filter(function (e) {var t = y(e, 2);t[0];return !Oe(t[1].lastMessage);});return t.sort(function (e, t) {return t[1].lastMessage.lastTime - e[1].lastMessage.lastTime;}), new Map([].concat(v(t), v(e)));} }, { key: "_getStorageGroupList", value: function value() {return this.tim.storage.getItem("groupMap");} }, { key: "_setStorageGroupList", value: function value() {var e = this.getLocalGroups().filter(function (e) {var t = e.type;return !De(t);}).slice(0, 20).map(function (e) {return { groupID: e.groupID, name: e.name, avatar: e.avatar, type: e.type };});this.tim.storage.setItem("groupMap", e);} }, { key: "updateGroupMap", value: function value(e) {var t = this;e.forEach(function (e) {t.groupMap.has(e.groupID) ? t.groupMap.get(e.groupID).updateGroup(e) : t.groupMap.set(e.groupID, new Ma(e));}), this._setStorageGroupList();} }, { key: "_updateLocalGroupMemberMap", value: function value(e, t) {var n = this;return re(t) && 0 !== t.length ? t.map(function (t) {return n.hasLocalGroupMember(e, t.userID) ? n.getLocalGroupMemberInfo(e, t.userID).updateMember(t) : n.setLocalGroupMember(e, new wa(t)), n.getLocalGroupMemberInfo(e, t.userID);}) : [];} }, { key: "deleteLocalGroupMembers", value: function value(e, t) {var n = this.groupMemberListMap.get(e);n && t.forEach(function (e) {n.delete(e);});} }, { key: "_modifyGroupMemberInfo", value: function value(e) {var t = this,n = e.groupID,r = e.userID;return this.request({ name: "group", action: "modifyGroupMemberInfo", param: e }).then(function () {if (t.hasLocalGroupMember(n, r)) {var o = t.getLocalGroupMemberInfo(n, r);return oe(e.muteTime) || o.updateMuteUntil(e.muteTime), oe(e.role) || o.updateRole(e.role), oe(e.nameCard) || o.updateNameCard(e.nameCard), oe(e.memberCustomField) || o.updateMemberCustomField(e.memberCustomField), o;}return t.getGroupMemberProfile({ groupID: n, userIDList: [r] }).then(function (e) {return y(e.data.memberList, 1)[0];});});} }, { key: "_groupListTreeShaking", value: function value(e) {for (var t = new Map(v(this.groupMap)), n = 0, r = e.length; n < r; n++) {t.delete(e[n].groupID);}this.AVChatRoomHandler.hasJoinedAVChatRoom() && this.AVChatRoomHandler.getJoinedAVChatRoom().forEach(function (e) {t.delete(e);});for (var o = v(t.keys()), i = 0, s = o.length; i < s; i++) {this.groupMap.delete(o[i]);}} }, { key: "_handleProfileUpdated", value: function value(e) {for (var t = this, n = e.data, r = function r(e) {var r = n[e];t.groupMemberListMap.forEach(function (e) {e.has(r.userID) && e.get(r.userID).updateMember({ nick: r.nick, avatar: r.avatar });});}, o = 0; o < n.length; o++) {r(o);}} }, { key: "getJoinedAVChatRoom", value: function value() {return this.AVChatRoomHandler.getJoinedAVChatRoom();} }, { key: "deleteLocalGroupAndConversation", value: function value(e) {this._deleteLocalGroup(e), this.tim.conversationController.deleteLocalConversation("GROUP".concat(e)), this.emitGroupListUpdate(!0, !1);} }, { key: "checkJoinedAVChatRoomByID", value: function value(e) {return this.AVChatRoomHandler.checkJoinedAVChatRoomByID(e);} }, { key: "getGroupLastSequence", value: function value(e) {var t = this,n = new Br();n.setMethod(To).setStart();var r = 0;if (this.hasLocalGroup(e)) {var o = this.getLocalGroupProfile(e);if (o.lastMessage.lastSequence > 0) return r = o.lastMessage.lastSequence, J.log("GroupController.getGroupLastSequence got lastSequence=".concat(r, " from local group profile[lastMessage.lastSequence]. groupID=").concat(e)), n.setCode(0).setNetworkType(this.getNetworkType()).setText("got lastSequence=".concat(r, " from local group profile[lastMessage.lastSequence]. groupID=").concat(e)).setEnd(), Promise.resolve(r);if (o.nextMessageSeq > 1) return r = o.nextMessageSeq - 1, J.log("GroupController.getGroupLastSequence got lastSequence=".concat(r, " from local group profile[nextMessageSeq]. groupID=").concat(e)), n.setCode(0).setNetworkType(this.getNetworkType()).setText("got lastSequence=".concat(r, " from local group profile[nextMessageSeq]. groupID=").concat(e)).setEnd(), Promise.resolve(r);}var i = "GROUP".concat(e),s = this.tim.conversationController.getLocalConversation(i);if (s && s.lastMessage.lastSequence) return r = s.lastMessage.lastSequence, J.log("GroupController.getGroupLastSequence got lastSequence=".concat(r, " from local conversation profile[lastMessage.lastSequence]. groupID=").concat(e)), n.setCode(0).setNetworkType(this.getNetworkType()).setText("got lastSequence=".concat(r, " from local conversation profile[lastMessage.lastSequence]. groupID=").concat(e)).setEnd(), Promise.resolve(r);var a = { groupIDList: [e], responseFilter: { groupBaseInfoFilter: ["NextMsgSeq"] } };return this.getGroupProfileAdvance(a).then(function (o) {var i = o.data.successGroupList;return Oe(i) ? J.log("GroupController.getGroupLastSequence successGroupList is empty. groupID=".concat(e)) : (r = i[0].nextMessageSeq - 1, J.log("GroupController.getGroupLastSequence got lastSequence=".concat(r, " from getGroupProfileAdvance. groupID=").concat(e))), n.setCode(0).setNetworkType(t.getNetworkType()).setText("got lastSequence=".concat(r, " from getGroupProfileAdvance. groupID=").concat(e)).setEnd(), r;}).catch(function (r) {return t.probeNetwork().then(function (t) {var o = y(t, 2),i = o[0],s = o[1];n.setError(r, i, s).setText("get lastSequence failed from getGroupProfileAdvance. groupID=".concat(e)).setEnd();}), J.warn("GroupController.getGroupLastSequence failed. ".concat(r)), Vr(r);});} }, { key: "reset", value: function value() {this.groupMap.clear(), this.groupMemberListMap.clear(), this.resetReady(), this.groupNoticeHandler.reset(), this.AVChatRoomHandler.reset(), this.tim.innerEmitter.once(xn, this._initGroupList, this);} }]), s;}(Pr),xa = function (n) {c(s, n);var o = _(s);function s(e) {var n;r(this, s), (n = o.call(this, e)).REALTIME_MESSAGE_TIMEOUT = 11e4, n.LONGPOLLING_ID_TIMEOUT = 3e5, n._currentState = t.NET_STATE_CONNECTED, n._status = { OPENIM: { lastResponseReceivedTime: 0, jitterCount: 0, failedCount: 0 }, AVCHATROOM: { lastResponseReceivedTime: 0, jitterCount: 0, failedCount: 0 } };var i = n.tim.innerEmitter;return i.on(Xn, n._onGetLongPollIDFailed, g(n)), i.on(Qn, n._onOpenIMResponseOK, g(n)), i.on(Jn, n._onOpenIMRequestFailed, g(n)), i.on(fr, n._onAVChatroomResponseOK, g(n)), i.on(dr, n._onAVChatroomRequestFailed, g(n)), n;}return i(s, [{ key: "_onGetLongPollIDFailed", value: function value() {this._currentState !== t.NET_STATE_DISCONNECTED && this._emitNetStateChangeEvent(t.NET_STATE_DISCONNECTED);} }, { key: "_onOpenIMResponseOK", value: function value() {this._onResponseOK("OPENIM");} }, { key: "_onOpenIMRequestFailed", value: function value() {this._onRequestFailed("OPENIM");} }, { key: "_onAVChatroomResponseOK", value: function value() {this.isLoggedIn() || this._onResponseOK("AVCHATROOM");} }, { key: "_onAVChatroomRequestFailed", value: function value() {this.isLoggedIn() || this._onRequestFailed("AVCHATROOM");} }, { key: "_onResponseOK", value: function value(e) {var n = this._status[e],r = Date.now();if (0 !== n.lastResponseReceivedTime) {var o = r - n.lastResponseReceivedTime;if (J.debug("StatusController._onResponseOK key=".concat(e, " currentState=").concat(this._currentState, " interval=").concat(o, " failedCount=").concat(n.failedCount, " jitterCount=").concat(n.jitterCount)), n.failedCount > 0 && (n.failedCount = 0, n.jitterCount += 1, this._currentState !== t.NET_STATE_CONNECTED && this._emitNetStateChangeEvent(t.NET_STATE_CONNECTED)), o <= this.REALTIME_MESSAGE_TIMEOUT) {if (n.jitterCount >= 3) {var i = new Br();i.setMethod(bo).setStart(), i.setCode(0).setText("".concat(e, "-").concat(o, "-").concat(n.jitterCount)).setNetworkType(this.getNetworkType()).setEnd(), n.jitterCount = 0;}} else if (o >= this.REALTIME_MESSAGE_TIMEOUT && o < this.LONGPOLLING_ID_TIMEOUT) {var s = new Br();s.setMethod(Uo).setStart(), s.setCode(0).setText("".concat(e, "-").concat(o)).setNetworkType(this.getNetworkType()).setEnd(), J.warn("StatusController._onResponseOK, fast start. key=".concat(e, " interval=").concat(o, " ms")), this.emitInnerEvent(Zn);} else if (o >= this.LONGPOLLING_ID_TIMEOUT) {var a = new Br();a.setMethod(qo).setStart(), a.setCode(0).setText("".concat(e, "-").concat(o)).setNetworkType(this.getNetworkType()).setEnd(), J.warn("StatusController._onResponseOK, slow start. key=".concat(e, " interval=").concat(o, " ms")), this.emitInnerEvent(er);}n.lastResponseReceivedTime = r;} else n.lastResponseReceivedTime = r;} }, { key: "_onRequestFailed", value: function value(e) {var n = this,r = this._status[e];Date.now() - r.lastResponseReceivedTime >= this.LONGPOLLING_ID_TIMEOUT ? this._currentState !== t.NET_STATE_DISCONNECTED && (J.warn("StatusController._onRequestFailed, disconnected, longpolling unavailable more than 5min. key=".concat(e, " networkType=").concat(this.getNetworkType())), this._emitNetStateChangeEvent(t.NET_STATE_DISCONNECTED)) : (r.failedCount += 1, r.failedCount > 5 ? this.probeNetwork().then(function (o) {var i = y(o, 2),s = i[0],a = i[1];s ? (n._currentState !== t.NET_STATE_CONNECTING && n._emitNetStateChangeEvent(t.NET_STATE_CONNECTING), J.warn("StatusController._onRequestFailed, connecting, network jitter. key=".concat(e, " networkType=").concat(a))) : (n._currentState !== t.NET_STATE_DISCONNECTED && n._emitNetStateChangeEvent(t.NET_STATE_DISCONNECTED), J.warn("StatusController._onRequestFailed, disconnected, longpolling unavailable. key=".concat(e, " networkType=").concat(a))), r.failedCount = 0, r.jitterCount = 0;}) : this._currentState === t.NET_STATE_CONNECTED && this._emitNetStateChangeEvent(t.NET_STATE_CONNECTING));} }, { key: "_emitNetStateChangeEvent", value: function value(t) {J.log("StatusController._emitNetStateChangeEvent net state changed from ".concat(this._currentState, " to ").concat(t)), this._currentState = t, this.emitOuterEvent(e.NET_STATE_CHANGE, { state: t });} }, { key: "reset", value: function value() {J.log("StatusController.reset"), this._currentState = t.NET_STATE_CONNECTED, this._status = { OPENIM: { lastResponseReceivedTime: 0, jitterCount: 0, failedCount: 0 }, AVCHATROOM: { lastResponseReceivedTime: 0, jitterCount: 0, failedCount: 0 } };} }]), s;}(Pr);function Fa() {return null;}var Va = function () {function e(t) {r(this, e), this.tim = t, this.isWX = N, this.storageQueue = new Map(), this.checkTimes = 0, this.checkTimer = setInterval(this._onCheckTimer.bind(this), 1e3), this._errorTolerantHandle();}return i(e, [{ key: "_errorTolerantHandle", value: function value() {!this.isWX && oe(window.localStorage) && (this.getItem = Fa, this.setItem = Fa, this.removeItem = Fa, this.clear = Fa);} }, { key: "_onCheckTimer", value: function value() {if (this.checkTimes++, this.checkTimes % 20 == 0) {if (0 === this.storageQueue.size) return;this._doFlush();}} }, { key: "_doFlush", value: function value() {try {var e,t = C(this.storageQueue);try {for (t.s(); !(e = t.n()).done;) {var n = y(e.value, 2),r = n[0],o = n[1];this.isWX ? wx.setStorageSync(this._getKey(r), o) : localStorage.setItem(this._getKey(r), JSON.stringify(o));}} catch (i) {t.e(i);} finally {t.f();}this.storageQueue.clear();} catch (s) {J.warn("Storage._doFlush error", s);}} }, { key: "_getPrefix", value: function value() {var e = this.tim.loginInfo,t = e.SDKAppID,n = e.identifier;return "TIM_".concat(t, "_").concat(n, "_");} }, { key: "getItem", value: function value(e) {var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];try {var n = t ? this._getKey(e) : e;return this.isWX ? wx.getStorageSync(n) : JSON.parse(localStorage.getItem(n));} catch (r) {J.warn("Storage.getItem error:", r);}} }, { key: "setItem", value: function value(e, t) {var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];if (n) {var o = r ? this._getKey(e) : e;this.isWX ? wx.setStorageSync(o, t) : localStorage.setItem(o, JSON.stringify(t));} else this.storageQueue.set(e, t);} }, { key: "clear", value: function value() {try {this.isWX ? wx.clearStorageSync() : localStorage.clear();} catch (e) {J.warn("Storage.clear error:", e);}} }, { key: "removeItem", value: function value(e) {var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];try {var n = t ? this._getKey(e) : e;this.isWX ? wx.removeStorageSync(n) : localStorage.removeItem(n);} catch (r) {J.warn("Storage.removeItem error:", r);}} }, { key: "getSize", value: function value(e) {var t = this,n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "b";try {var r = { size: 0, limitSize: 5242880, unit: n };if (Object.defineProperty(r, "leftSize", { enumerable: !0, get: function get() {return r.limitSize - r.size;} }), this.isWX && (r.limitSize = 1024 * wx.getStorageInfoSync().limitSize), e) r.size = JSON.stringify(this.getItem(e)).length + this._getKey(e).length;else if (this.isWX) {var o = wx.getStorageInfoSync(),i = o.keys;i.forEach(function (e) {r.size += JSON.stringify(wx.getStorageSync(e)).length + t._getKey(e).length;});} else for (var s in localStorage) {localStorage.hasOwnProperty(s) && (r.size += localStorage.getItem(s).length + s.length);}return this._convertUnit(r);} catch (a) {J.warn("Storage.getSize error:", a);}} }, { key: "_convertUnit", value: function value(e) {var t = {},n = e.unit;for (var r in t.unit = n, e) {"number" == typeof e[r] && ("kb" === n.toLowerCase() ? t[r] = Math.round(e[r] / 1024) : "mb" === n.toLowerCase() ? t[r] = Math.round(e[r] / 1024 / 1024) : t[r] = e[r]);}return t;} }, { key: "_getKey", value: function value(e) {return "".concat(this._getPrefix()).concat(e);} }, { key: "reset", value: function value() {this._doFlush(), this.checkTimes = 0;} }]), e;}(),Ka = T(function (e) {var t = Object.prototype.hasOwnProperty,n = "~";function r() {}function o(e, t, n) {this.fn = e, this.context = t, this.once = n || !1;}function i(e, t, r, i, s) {if ("function" != typeof r) throw new TypeError("The listener must be a function");var a = new o(r, i || e, s),u = n ? n + t : t;return e._events[u] ? e._events[u].fn ? e._events[u] = [e._events[u], a] : e._events[u].push(a) : (e._events[u] = a, e._eventsCount++), e;}function s(e, t) {0 == --e._eventsCount ? e._events = new r() : delete e._events[t];}function a() {this._events = new r(), this._eventsCount = 0;}Object.create && (r.prototype = Object.create(null), new r().__proto__ || (n = !1)), a.prototype.eventNames = function () {var e,r,o = [];if (0 === this._eventsCount) return o;for (r in e = this._events) {t.call(e, r) && o.push(n ? r.slice(1) : r);}return Object.getOwnPropertySymbols ? o.concat(Object.getOwnPropertySymbols(e)) : o;}, a.prototype.listeners = function (e) {var t = n ? n + e : e,r = this._events[t];if (!r) return [];if (r.fn) return [r.fn];for (var o = 0, i = r.length, s = new Array(i); o < i; o++) {s[o] = r[o].fn;}return s;}, a.prototype.listenerCount = function (e) {var t = n ? n + e : e,r = this._events[t];return r ? r.fn ? 1 : r.length : 0;}, a.prototype.emit = function (e, t, r, o, i, s) {var a = n ? n + e : e;if (!this._events[a]) return !1;var u,c,l = this._events[a],p = arguments.length;if (l.fn) {switch (l.once && this.removeListener(e, l.fn, void 0, !0), p) {case 1:return l.fn.call(l.context), !0;case 2:return l.fn.call(l.context, t), !0;case 3:return l.fn.call(l.context, t, r), !0;case 4:return l.fn.call(l.context, t, r, o), !0;case 5:return l.fn.call(l.context, t, r, o, i), !0;case 6:return l.fn.call(l.context, t, r, o, i, s), !0;}for (c = 1, u = new Array(p - 1); c < p; c++) {u[c - 1] = arguments[c];}l.fn.apply(l.context, u);} else {var h,d = l.length;for (c = 0; c < d; c++) {switch (l[c].once && this.removeListener(e, l[c].fn, void 0, !0), p) {case 1:l[c].fn.call(l[c].context);break;case 2:l[c].fn.call(l[c].context, t);break;case 3:l[c].fn.call(l[c].context, t, r);break;case 4:l[c].fn.call(l[c].context, t, r, o);break;default:if (!u) for (h = 1, u = new Array(p - 1); h < p; h++) {u[h - 1] = arguments[h];}l[c].fn.apply(l[c].context, u);}}}return !0;}, a.prototype.on = function (e, t, n) {return i(this, e, t, n, !1);}, a.prototype.once = function (e, t, n) {return i(this, e, t, n, !0);}, a.prototype.removeListener = function (e, t, r, o) {var i = n ? n + e : e;if (!this._events[i]) return this;if (!t) return s(this, i), this;var a = this._events[i];if (a.fn) a.fn !== t || o && !a.once || r && a.context !== r || s(this, i);else {for (var u = 0, c = [], l = a.length; u < l; u++) {(a[u].fn !== t || o && !a[u].once || r && a[u].context !== r) && c.push(a[u]);}c.length ? this._events[i] = 1 === c.length ? c[0] : c : s(this, i);}return this;}, a.prototype.removeAllListeners = function (e) {var t;return e ? (t = n ? n + e : e, this._events[t] && s(this, t)) : (this._events = new r(), this._eventsCount = 0), this;}, a.prototype.off = a.prototype.removeListener, a.prototype.addListener = a.prototype.on, a.prefixed = n, a.EventEmitter = a, e.exports = a;}),Ba = function Ba(e) {var t, n, r, o, i;return Oe(e.context) ? (t = "", n = 0, r = 0, o = 0, i = 1) : (t = e.context.a2Key, n = e.context.tinyID, r = e.context.SDKAppID, o = e.context.contentType, i = e.context.apn), { platform: Ln, websdkappid: Nn, v: On, a2: t, tinyid: n, sdkappid: r, contentType: o, apn: i, reqtime: function reqtime() {return +new Date();} };},Ha = function () {function e(t) {r(this, e), this.tim = t, this.tim.innerEmitter.on(Un, this._update, this), this.tim.innerEmitter.on(qn, this._update, this), this.tim.innerEmitter.on(Fn, this._updateSpecifiedConfig, this), this._initConfig();}return i(e, [{ key: "_update", value: function value(e) {this._initConfig();} }, { key: "_updateSpecifiedConfig", value: function value(e) {var t = this;e.data.forEach(function (e) {t._set(e);});} }, { key: "get", value: function value(e) {var t = e.name,r = e.action,o = e.param,i = e.tjgID;if (oe(this.config[t]) || oe(this.config[t][r])) throw new ht({ code: dt.NETWORK_PACKAGE_UNDEFINED, message: "".concat(hn, ": PackageConfig.").concat(t) });var s = function e(t) {if (0 === Object.getOwnPropertyNames(t).length) return Object.create(null);var r = Array.isArray(t) ? [] : Object.create(null),o = "";for (var i in t) {null !== t[i] ? void 0 !== t[i] ? (o = n(t[i]), ["string", "number", "function", "boolean"].indexOf(o) >= 0 ? r[i] = t[i] : r[i] = e(t[i])) : r[i] = void 0 : r[i] = null;}return r;}(this.config[t][r]);return s.requestData = this._initRequestData(o, s), s.encode = this._initEncoder(s), s.decode = this._initDecoder(s), i && (s.queryString.tjg_id = i), s;} }, { key: "_set", value: function value(e) {var t = e.key,r = e.value;if (!1 != !!t) {var o = t.split(".");if (!(o.length <= 0)) {!function e(t, r, o, i) {var s = r[o];"object" === n(t[s]) ? e(t[s], r, o + 1, i) : t[s] = i;}(this.config, o, 0, r);}}} }, { key: "_initConfig", value: function value() {var e;this.config = {}, this.config.accessLayer = (e = this.tim, { create: null, query: { serverName: Gn.NAME.WEB_IM, cmd: Gn.CMD.ACCESS_LAYER, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: { platform: Ln, identifier: e.context.identifier, usersig: e.context.userSig, contentType: e.context.contentType, apn: null !== e.context ? e.context.apn : 1, websdkappid: Nn, v: On }, requestData: {} }, update: null, delete: null }), this.config.login = function (e) {return { create: null, query: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.LOGIN, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: { websdkappid: Nn, v: On, platform: Ln, identifier: e.loginInfo.identifier, usersig: e.loginInfo.userSig, sdkappid: e.loginInfo.SDKAppID, accounttype: e.loginInfo.accountType, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: +new Date() / 1e3 }, requestData: { state: "Online" }, keyMaps: { request: { tinyID: "tinyId" }, response: { TinyId: "tinyID" } } }, update: null, delete: null };}(this.tim), this.config.logout = function (e) {return { create: null, query: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.LOGOUT_ALL, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: { websdkappid: Nn, v: On, platform: Ln, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : "", sdkappid: null !== e.loginInfo ? e.loginInfo.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : "", reqtime: +new Date() / 1e3 }, requestData: {} }, update: null, delete: null };}(this.tim), this.config.longPollLogout = function (e) {return { create: null, query: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.LOGOUT_LONG_POLL, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: { websdkappid: Nn, v: On, platform: Ln, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: function reqtime() {return Date.now();} }, requestData: { longPollID: "" }, keyMaps: { request: { longPollID: "LongPollingId" } } }, update: null, delete: null };}(this.tim), this.config.profile = function (e) {var t = Ba(e),n = Gn.NAME.PROFILE,r = Gn.CHANNEL.XHR,o = Pn;return { query: { serverName: n, cmd: Gn.CMD.PORTRAIT_GET, channel: r, protocol: o, method: "POST", queryString: t, requestData: { fromAccount: "", userItem: [] }, keyMaps: { request: { toAccount: "To_Account", standardSequence: "StandardSequence", customSequence: "CustomSequence" } } }, update: { serverName: n, cmd: Gn.CMD.PORTRAIT_SET, channel: r, protocol: o, method: "POST", queryString: t, requestData: { fromAccount: "", profileItem: [{ tag: et.NICK, value: "" }, { tag: et.GENDER, value: "" }, { tag: et.ALLOWTYPE, value: "" }, { tag: et.AVATAR, value: "" }] } } };}(this.tim), this.config.group = function (e) {var n = { websdkappid: Nn, v: On, platform: Ln, a2: null !== e.context && e.context.a2Key ? e.context.a2Key : void 0, tinyid: null !== e.context && e.context.tinyID ? e.context.tinyID : void 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, accounttype: null !== e.context ? e.context.accountType : 0 },r = { request: { ownerID: "Owner_Account", userID: "Member_Account", newOwnerID: "NewOwner_Account", maxMemberNum: "MaxMemberCount", groupCustomField: "AppDefinedData", memberCustomField: "AppMemberDefinedData", groupCustomFieldFilter: "AppDefinedDataFilter_Group", memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember", messageRemindType: "MsgFlag", userIDList: "MemberList", groupIDList: "GroupIdList", applyMessage: "ApplyMsg", muteTime: "ShutUpTime", muteAllMembers: "ShutUpAllMember", joinOption: "ApplyJoinOption" }, response: { GroupIdList: "groups", MsgFlag: "messageRemindType", AppDefinedData: "groupCustomField", AppMemberDefinedData: "memberCustomField", AppDefinedDataFilter_Group: "groupCustomFieldFilter", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", InfoSeq: "infoSequence", MemberList: "members", GroupInfo: "groups", ShutUpUntil: "muteUntil", ShutUpAllMember: "muteAllMembers", ApplyJoinOption: "joinOption" } };return { create: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.CREATE_GROUP, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { type: t.GRP_WORK, name: void 0, groupID: void 0, ownerID: e.loginInfo.identifier, introduction: void 0, notification: void 0, avatar: void 0, maxMemberNum: void 0, joinOption: void 0, memberList: void 0, groupCustomField: void 0 }, keyMaps: r }, list: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.GET_JOINED_GROUPS, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { userID: e.loginInfo.identifier, limit: void 0, offset: void 0, groupType: void 0, responseFilter: void 0 }, keyMaps: r }, query: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.GET_GROUP_INFO, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupIDList: void 0, responseFilter: void 0 }, keyMaps: r }, getGroupMemberProfile: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.GET_GROUP_MEMBER_INFO, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0, userIDList: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 }, keyMaps: { request: u({}, r.request, { userIDList: "Member_List_Account" }), response: r.response } }, getGroupMemberList: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.GET_GROUP_MEMBER_LIST, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0, limit: 0, offset: 0, memberRoleFilter: void 0, memberInfoFilter: void 0 }, keyMaps: r }, quitGroup: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.QUIT_GROUP, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0 } }, changeGroupOwner: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.CHANGE_GROUP_OWNER, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0, newOwnerID: void 0 }, keyMaps: r }, destroyGroup: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.DESTROY_GROUP, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0 } }, updateGroupProfile: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.MODIFY_GROUP_INFO, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0, name: void 0, introduction: void 0, notification: void 0, avatar: void 0, maxMemberNum: void 0, joinOption: void 0, groupCustomField: void 0, muteAllMembers: void 0 }, keyMaps: { request: u({}, r.request, { groupCustomField: "AppDefinedData" }), response: r.response } }, modifyGroupMemberInfo: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.MODIFY_GROUP_MEMBER_INFO, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0, userID: void 0, messageRemindType: void 0, nameCard: void 0, role: void 0, memberCustomField: void 0, muteTime: void 0 }, keyMaps: r }, addGroupMember: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.ADD_GROUP_MEMBER, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0, silence: void 0, userIDList: void 0 }, keyMaps: r }, deleteGroupMember: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.DELETE_GROUP_MEMBER, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0, userIDList: void 0, reason: void 0 }, keyMaps: { request: { userIDList: "MemberToDel_Account" } } }, searchGroupByID: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.SEARCH_GROUP_BY_ID, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupIDList: void 0, responseFilter: { groupBasePublicInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "CreateTime", "Owner_Account", "LastInfoTime", "LastMsgTime", "NextMsgSeq", "MemberNum", "MaxMemberNum", "ApplyJoinOption"] } }, keyMaps: { request: { groupIDList: "GroupIdList" } } }, applyJoinGroup: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.APPLY_JOIN_GROUP, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0, applyMessage: void 0, userDefinedField: void 0 }, keyMaps: r }, applyJoinAVChatRoom: { serverName: Gn.NAME.BIG_GROUP_NO_AUTH, cmd: Gn.CMD.APPLY_JOIN_GROUP, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: { websdkappid: Nn, v: On, platform: Ln, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, accounttype: null !== e.context ? e.context.accountType : 0 }, requestData: { groupID: void 0, applyMessage: void 0, userDefinedField: void 0 }, keyMaps: r }, handleApplyJoinGroup: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.HANDLE_APPLY_JOIN_GROUP, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { groupID: void 0, applicant: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, messageKey: void 0, userDefinedField: void 0 }, keyMaps: { request: { applicant: "Applicant_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg", messageKey: "MsgKey" }, response: { MsgKey: "messageKey" } } }, deleteGroupSystemNotice: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.DELETE_GROUP_SYSTEM_MESSAGE, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { messageListToDelete: void 0 }, keyMaps: { request: { messageListToDelete: "DelMsgList", messageSeq: "MsgSeq", messageRandom: "MsgRandom" } } }, getGroupPendency: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.GET_GROUP_PENDENCY, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: n, requestData: { startTime: void 0, limit: void 0, handleAccount: void 0 }, keyMaps: { request: { handleAccount: "Handle_Account" } } } };}(this.tim), this.config.longPollID = function (e) {return { create: {}, query: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.GET_LONG_POLL_ID, channel: Gn.CHANNEL.XHR, protocol: Pn, queryString: { websdkappid: Nn, v: On, platform: Ln, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: +new Date() / 1e3 }, requestData: {}, keyMaps: { response: { LongPollingId: "longPollingID" } } }, update: {}, delete: {} };}(this.tim), this.config.longPoll = function (e) {var t = { websdkappid: Nn, v: On, platform: Ln, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, accounttype: null !== e.context ? e.loginInfo.accountType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: Math.ceil(+new Date() / 1e3) };return { create: {}, query: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.LONG_POLL, channel: Gn.CHANNEL.AUTO, protocol: Pn, queryString: t, requestData: { timeout: null, cookie: { notifySeq: 0, noticeSeq: 0, longPollingID: 0 } }, keyMaps: { response: { C2cMsgArray: "C2CMessageArray", GroupMsgArray: "groupMessageArray", GroupTips: "groupTips", C2cNotifyMsgArray: "C2CNotifyMessageArray", ClientSeq: "clientSequence", MsgPriority: "priority", NoticeSeq: "noticeSequence", MsgContent: "content", MsgType: "type", MsgBody: "elements", ToGroupId: "to", Desc: "description", Ext: "extension" } } }, update: {}, delete: {} };}(this.tim), this.config.applyC2C = function (e) {var t = Ba(e),n = Gn.NAME.FRIEND,r = Gn.CHANNEL.XHR,o = Pn;return { create: { serverName: n, cmd: Gn.CMD.FRIEND_ADD, channel: r, protocol: o, queryString: t, requestData: { fromAccount: "", addFriendItem: [] } }, get: { serverName: n, cmd: Gn.CMD.GET_PENDENCY, channel: r, protocol: o, queryString: t, requestData: { fromAccount: "", pendencyType: "Pendency_Type_ComeIn" } }, update: { serverName: n, cmd: Gn.CMD.RESPONSE_PENDENCY, channel: r, protocol: o, queryString: t, requestData: { fromAccount: "", responseFriendItem: [] } }, delete: { serverName: n, cmd: Gn.CMD.DELETE_PENDENCY, channel: r, protocol: o, queryString: t, requestData: { fromAccount: "", toAccount: [], pendencyType: "Pendency_Type_ComeIn" } } };}(this.tim), this.config.friend = function (e) {var t = Ba(e),n = Gn.NAME.FRIEND,r = Gn.CHANNEL.XHR,o = Pn;return { get: { serverName: n, cmd: Gn.CMD.FRIEND_GET_ALL, channel: r, protocol: o, method: "POST", queryString: t, requestData: { fromAccount: "", timeStamp: 0, tagList: [et.NICK, "Tag_SNS_IM_Remark", et.AVATAR] }, keyMaps: { request: {}, response: {} } }, delete: { serverName: n, cmd: Gn.CMD.FRIEND_DELETE, channel: r, protocol: o, method: "POST", queryString: t, requestData: { fromAccount: "", toAccount: [], deleteType: "Delete_Type_Single" } } };}(this.tim), this.config.blacklist = function (e) {var t = Ba(e);return { create: { serverName: Gn.NAME.FRIEND, cmd: Gn.CMD.ADD_BLACKLIST, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { fromAccount: "", toAccount: [] } }, get: { serverName: Gn.NAME.FRIEND, cmd: Gn.CMD.GET_BLACKLIST, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { fromAccount: "", startIndex: 0, maxLimited: 30, lastSequence: 0 } }, delete: { serverName: Gn.NAME.FRIEND, cmd: Gn.CMD.DELETE_BLACKLIST, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { fromAccount: "", toAccount: [] } }, update: {} };}(this.tim), this.config.c2cMessage = function (e) {var t = { platform: Ln, websdkappid: Nn, v: On, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: function reqtime() {return +new Date();} },n = { request: { fromAccount: "From_Account", toAccount: "To_Account", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom", msgBody: "MsgBody", count: "MaxCnt", lastMessageTime: "LastMsgTime", messageKey: "MsgKey", peerAccount: "Peer_Account", data: "Data", description: "Desc", extension: "Ext", type: "MsgType", content: "MsgContent", sizeType: "Type", uuid: "UUID", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag" }, response: { MsgContent: "content", MsgTime: "time", Data: "data", Desc: "description", Ext: "extension", MsgKey: "messageKey", MsgType: "type", MsgBody: "elements", Download_Flag: "downloadFlag", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID" } };return { create: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.SEND_MESSAGE, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { fromAccount: e.loginInfo.identifier, toAccount: "", msgTimeStamp: Math.ceil(+new Date() / 1e3), msgSeq: 0, msgRandom: 0, msgBody: [], msgLifeTime: void 0, offlinePushInfo: { pushFlag: 0, title: "", desc: "", ext: "", apnsInfo: { badgeMode: 0 }, androidInfo: { OPPOChannelID: "" } } }, keyMaps: n }, query: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.GET_C2C_ROAM_MESSAGES, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { peerAccount: "", count: 15, lastMessageTime: 0, messageKey: "", withRecalledMsg: 1 }, keyMaps: n } };}(this.tim), this.config.c2cMessageWillBeRevoked = function (e) {var t = { platform: Ln, websdkappid: Nn, v: On, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: function reqtime() {return +new Date();} };return { create: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.REVOKE_C2C_MESSAGE, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { msgInfo: { fromAccount: "", toAccount: "", msgTimeStamp: Math.ceil(+new Date() / 1e3), msgSeq: 0, msgRandom: 0 } }, keyMaps: { request: { msgInfo: "MsgInfo", fromAccount: "From_Account", toAccount: "To_Account", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom", msgBody: "MsgBody" } } } };}(this.tim), this.config.c2cPeerReadTime = function (e) {var t = { platform: Ln, websdkappid: Nn, v: On, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: function reqtime() {return +new Date();} };return { get: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.GET_PEER_READ_TIME, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { userIDList: void 0 }, keyMaps: { request: { userIDList: "To_Account" }, response: { ReadTime: "peerReadTimeList" } } } };}(this.tim), this.config.groupMessage = function (e) {var t = { platform: Ln, websdkappid: Nn, v: On, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: function reqtime() {return +new Date();} },n = { request: { to: "GroupId", extension: "Ext", data: "Data", description: "Desc", random: "Random", sequence: "ReqMsgSeq", count: "ReqMsgNumber", type: "MsgType", priority: "MsgPriority", content: "MsgContent", elements: "MsgBody", sizeType: "Type", uuid: "UUID", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", clientSequence: "ClientSeq" }, response: { Random: "random", MsgTime: "time", MsgSeq: "sequence", ReqMsgSeq: "sequence", RspMsgList: "messageList", IsPlaceMsg: "isPlaceMessage", IsSystemMsg: "isSystemMessage", ToGroupId: "to", EnumFrom_AccountType: "fromAccountType", EnumTo_AccountType: "toAccountType", GroupCode: "groupCode", MsgPriority: "priority", MsgBody: "elements", MsgType: "type", MsgContent: "content", IsFinished: "complete", Download_Flag: "downloadFlag", ClientSeq: "clientSequence", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID" } };return { create: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.SEND_GROUP_MESSAGE, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { groupID: "", fromAccount: e.loginInfo.identifier, random: 0, clientSequence: 0, priority: "", msgBody: [], onlineOnlyFlag: 0, offlinePushInfo: { pushFlag: 0, title: "", desc: "", ext: "", apnsInfo: { badgeMode: 0 }, androidInfo: { OPPOChannelID: "" } } }, keyMaps: n }, query: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.GET_GROUP_ROAM_MESSAGES, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { withRecalledMsg: 1, groupID: "", count: 15, sequence: "" }, keyMaps: n }, update: null, delete: null };}(this.tim), this.config.groupMessageWillBeRevoked = function (e) {var t = { platform: Ln, websdkappid: Nn, v: On, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: function reqtime() {return +new Date();} };return { create: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.REVOKE_GROUP_MESSAGE, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { to: "", msgSeqList: [] }, keyMaps: { request: { to: "GroupId", msgSeqList: "MsgSeqList", msgSeq: "MsgSeq" } } } };}(this.tim), this.config.conversation = function (e) {var t = { platform: Ln, websdkappid: Nn, v: On, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1 };return { query: { serverName: Gn.NAME.RECENT_CONTACT, cmd: Gn.CMD.GET_CONVERSATION_LIST, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { fromAccount: e.loginInfo.identifier, count: 0 }, keyMaps: { request: {}, response: { SessionItem: "conversations", ToAccount: "groupID", To_Account: "userID", UnreadMsgCount: "unreadCount", MsgGroupReadedSeq: "messageReadSeq" } } }, pagingQuery: { serverName: Gn.NAME.RECENT_CONTACT, cmd: Gn.CMD.PAGING_GET_CONVERSATION_LIST, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { fromAccount: void 0, timeStamp: void 0, orderType: void 0 }, keyMaps: { request: {}, response: { SessionItem: "conversations", ToAccount: "groupID", To_Account: "userID", UnreadMsgCount: "unreadCount", MsgGroupReadedSeq: "messageReadSeq", C2cPeerReadTime: "c2cPeerReadTime" } } }, delete: { serverName: Gn.NAME.RECENT_CONTACT, cmd: Gn.CMD.DELETE_CONVERSATION, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { fromAccount: e.loginInfo.identifier, toAccount: void 0, type: 1, toGroupID: void 0 }, keyMaps: { request: { toGroupID: "ToGroupid" } } }, setC2CMessageRead: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.SET_C2C_MESSAGE_READ, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { C2CMsgReaded: void 0 }, keyMaps: { request: { lastMessageTime: "LastedMsgTime" } } }, setGroupMessageRead: { serverName: Gn.NAME.GROUP, cmd: Gn.CMD.SET_GROUP_MESSAGE_READ, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { groupID: void 0, messageReadSeq: void 0 }, keyMaps: { request: { messageReadSeq: "MsgReadedSeq" } } } };}(this.tim), this.config.syncMessage = function (e) {var t = { platform: Ln, websdkappid: Nn, v: On, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: function reqtime() {return [Math.ceil(+new Date()), Math.random()].join("");} };return { create: null, query: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.GET_MESSAGES, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { cookie: "", syncFlag: 0, needAbstract: 1 }, keyMaps: { request: { fromAccount: "From_Account", toAccount: "To_Account", from: "From_Account", to: "To_Account", time: "MsgTimeStamp", sequence: "MsgSeq", random: "MsgRandom", elements: "MsgBody" }, response: { MsgList: "messageList", SyncFlag: "syncFlag", To_Account: "to", From_Account: "from", ClientSeq: "clientSequence", MsgSeq: "sequence", NoticeSeq: "noticeSequence", NotifySeq: "notifySequence", MsgRandom: "random", MsgTimeStamp: "time", MsgContent: "content", ToGroupId: "groupID", MsgKey: "messageKey", GroupTips: "groupTips", MsgBody: "elements", MsgType: "type", C2CRemainingUnreadCount: "C2CRemainingUnreadList" } } }, update: null, delete: null };}(this.tim), this.config.AVChatRoom = function (e) {return { startLongPoll: { serverName: Gn.NAME.BIG_GROUP_LONG_POLLING_NO_AUTH, cmd: Gn.CMD.AVCHATROOM_LONG_POLL, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: { websdkappid: Nn, v: On, platform: Ln, sdkappid: e.loginInfo.SDKAppID, accounttype: "792", apn: null !== e.context ? e.context.apn : 1, reqtime: function reqtime() {return +new Date();} }, requestData: { USP: 1, startSeq: 1, holdTime: 90, key: void 0 }, keyMaps: { request: { USP: "USP" }, response: { ToGroupId: "groupID", MsgPriority: "priority" } } } };}(this.tim), this.config.cosUpload = function (e) {var t = { platform: Ln, websdkappid: Nn, v: On, a2: null !== e.context ? e.context.a2Key : "", tinyid: null !== e.context ? e.context.tinyID : 0, sdkappid: null !== e.context ? e.context.SDKAppID : 0, contentType: null !== e.context ? e.context.contentType : 0, apn: null !== e.context ? e.context.apn : 1, reqtime: function reqtime() {return Date.now();} };return { create: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.FILE_UPLOAD, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { appVersion: "2.1", fromAccount: "", toAccount: "", sequence: 0, time: function time() {return Math.ceil(Date.now() / 1e3);}, random: function random() {return me();}, fileStrMd5: "", fileSize: "", serverVer: 1, authKey: "", busiId: 1, pkgFlag: 1, sliceOffset: 0, sliceSize: 0, sliceData: "", contentType: "application/x-www-form-urlencoded" }, keyMaps: { request: {}, response: {} } }, update: null, delete: null };}(this.tim), this.config.cosSig = function (e) {var t = { sdkappid: function sdkappid() {return e.loginInfo.SDKAppID;}, identifier: function identifier() {return e.loginInfo.identifier;}, userSig: function userSig() {return e.context.userSig;} };return { create: null, query: { serverName: Gn.NAME.IM_COS_SIGN, cmd: Gn.CMD.COS_SIGN, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: t, requestData: { cmd: "open_im_cos_svc", subCmd: "get_cos_token", duration: 300, version: 2 }, keyMaps: { request: { userSig: "usersig", subCmd: "sub_cmd", cmd: "cmd", duration: "duration", version: "version" }, response: { expired_time: "expiredTime", bucket_name: "bucketName", session_token: "sessionToken", tmp_secret_id: "secretId", tmp_secret_key: "secretKey" } } }, update: null, delete: null };}(this.tim), this.config.bigDataHallwayAuthKey = function (e) {return { create: null, query: { serverName: Gn.NAME.OPEN_IM, cmd: Gn.CMD.BIG_DATA_HALLWAY_AUTH_KEY, channel: Gn.CHANNEL.XHR, protocol: Pn, method: "POST", queryString: { websdkappid: Nn, v: On, platform: Ln, sdkappid: e.loginInfo.SDKAppID, accounttype: "792", apn: null !== e.context ? e.context.apn : 1, reqtime: function reqtime() {return +new Date();} }, requestData: {} } };}(this.tim), this.config.ssoEventStat = function (e) {var t = { sdkappid: e.loginInfo.SDKAppID, reqtime: Math.ceil(+new Date() / 1e3) };return { create: { serverName: Gn.NAME.IM_OPEN_STAT, cmd: Gn.CMD.TIM_WEB_REPORT, channel: Gn.CHANNEL.AUTO, protocol: Pn, queryString: t, requestData: { table: "", report: [] }, keyMaps: { request: { table: "table", report: "report", SDKAppID: "sdkappid", version: "version", tinyID: "tinyid", userID: "userid", platform: "platform", method: "method", time: "time", start: "start", end: "end", cost: "cost", status: "status", codeint: "codeint", message: "message", pointer: "pointer", text: "text", msgType: "msgtype", networkType: "networktype", startts: "startts", endts: "endts", timespan: "timespan" } } }, query: {}, update: {}, delete: {} };}(this.tim), this.config.ssoSumStat = function (e) {var t = null;null !== e.context && (t = { sdkappid: e.context.SDKAppID, reqtime: Math.ceil(+new Date() / 1e3) });return { create: { serverName: Gn.NAME.IM_OPEN_STAT, cmd: Gn.CMD.TIM_WEB_REPORT, channel: Gn.CHANNEL.AUTO, protocol: Pn, queryString: t, requestData: { table: "", report: [] }, keyMaps: { request: { table: "table", report: "report", SDKAppID: "sdkappid", version: "version", tinyID: "tinyid", userID: "userid", item: "item", lpID: "lpid", platform: "platform", networkType: "networktype", total: "total", successRate: "successrate", avg: "avg", timespan: "timespan", time: "time" } } }, query: {}, update: {}, delete: {} };}(this.tim);} }, { key: "_initRequestData", value: function value(e, t) {if (void 0 === e) return Or(t.requestData, this._getRequestMap(t), this.tim);var n = t.requestData,r = Object.create(null);for (var o in n) {if (Object.prototype.hasOwnProperty.call(n, o)) {if (r[o] = "function" == typeof n[o] ? n[o]() : n[o], void 0 === e[o]) continue;r[o] = e[o];}}return r = Or(r, this._getRequestMap(t), this.tim);} }, { key: "_getRequestMap", value: function value(e) {if (e.keyMaps && e.keyMaps.request && Object.keys(e.keyMaps.request).length > 0) return e.keyMaps.request;} }, { key: "_initEncoder", value: function value(e) {switch (e.protocol) {case Pn:return function (e) {if ("string" === n(e)) try {return JSON.parse(e);} catch (t) {return e;}return e;};case wn:return function (e) {return e;};default:return function (e) {return J.warn("PackageConfig._initEncoder(), unknow response type, data: ", JSON.stringify(e)), e;};}} }, { key: "_initDecoder", value: function value(e) {switch (e.protocol) {case Pn:return function (e) {if ("string" === n(e)) try {return JSON.parse(e);} catch (t) {return e;}return e;};case wn:return function (e) {return e;};default:return function (e) {return J.warn("PackageConfig._initDecoder(), unknow response type, data: ", e), e;};}} }]), e;}(),ja = function ja() {for (var e = [], t = Ya(arguments), n = 0; n < arguments.length; n++) {Number.isInteger(arguments[n]) ? e.push(arguments[n]) : e.push(!0 == !!arguments[n] ? "1" : "0");}return e.join(t);},Ya = function Ya(e) {var t = e.length,n = e[t - 1];if ("string" != typeof n) return "";if (n.length > 1) return "";var r = e[t - 1];return delete e[t - 1], e.length -= t === e.length ? 1 : 0, r;},$a = { C2CMessageArray: 1, groupMessageArray: 1, groupTips: 1, C2CNotifyMessageArray: 1, profileModify: 1, friendListMod: 1 },Wa = function (e) {c(n, e);var t = _(n);function n(e) {var o;return r(this, n), (o = t.call(this, e))._initialization(), o;}return i(n, [{ key: "_initialization", value: function value() {this._syncOffset = "", this._syncNoticeList = [], this._syncEventArray = [], this._syncMessagesIsRunning = !1, this._syncMessagesFinished = !1, this._isLongPoll = !1, this._longPollID = 0, this._noticeSequence = 0, this._initializeListener(), this._runLoop = null, this._initShuntChannels();} }, { key: "_initShuntChannels", value: function value() {this._shuntChannels = Object.create(null), this._shuntChannels.C2CMessageArray = this._C2CMessageArrayChannel.bind(this), this._shuntChannels.groupMessageArray = this._groupMessageArrayChannel.bind(this), this._shuntChannels.groupTips = this._groupTipsChannel.bind(this), this._shuntChannels.C2CNotifyMessageArray = this._C2CNotifyMessageArrayChannel.bind(this), this._shuntChannels.profileModify = this._profileModifyChannel.bind(this), this._shuntChannels.friendListMod = this._friendListModChannel.bind(this);} }, { key: "_C2CMessageArrayChannel", value: function value(e, t, n) {this.emitInnerEvent(rr, t);} }, { key: "_groupMessageArrayChannel", value: function value(e, t, n) {this.emitInnerEvent(or, t);} }, { key: "_groupTipsChannel", value: function value(e, t, n) {var r = this;switch (e) {case 4:case 6:this.emitInnerEvent(ir, t);break;case 5:t.forEach(function (e) {re(e.elements.revokedInfos) ? r.emitInnerEvent(lr, t) : r.emitInnerEvent(sr, { groupSystemNotices: t, type: n });});break;default:J.log("NotificationController._groupTipsChannel unknown event=".concat(e, " type=").concat(n), t);}} }, { key: "_C2CNotifyMessageArrayChannel", value: function value(e, t, n) {if (t[0]) {var r = t[0];r.hasOwnProperty("kickoutMsgNotify") ? this.emitInnerEvent(nr) : r.hasOwnProperty("sysCmdMsgNotify") ? this.emitInnerEvent(cr) : r.hasOwnProperty("c2cMessageRevokedNotify") ? this.emitInnerEvent(pr, t) : r.hasOwnProperty("c2cMessageReadReceipt") && this.emitInnerEvent(hr, t);}} }, { key: "_profileModifyChannel", value: function value(e, t, n) {this.emitInnerEvent(ur, t);} }, { key: "_friendListModChannel", value: function value(e, t, n) {this.emitInnerEvent(ar, t);} }, { key: "_dispatchNotice", value: function value(e) {var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "poll";if (re(e)) for (var n = null, r = null, o = "", i = "", s = "", a = 0, u = 0, c = e.length; u < c; u++) {a = (n = e[u]).event, o = Object.keys(n).find(function (e) {return void 0 !== $a[e];}), se(this._shuntChannels[o]) ? (r = n[o], "poll" === t && this._updatenoticeSequence(r), this._shuntChannels[o](a, r, t)) : ("poll" === t && this._updatenoticeSequence(), i = "".concat(dt.NOTICE_RUNLOOP_UNEXPECTED_CONDITION), s = "".concat(gn, ": ").concat(a, ", ").concat(o), this.emitInnerEvent(Ir, new ht({ code: i, message: s, data: { payloadName: o, event: a } })), i = "", s = "");}} }, { key: "getLongPollID", value: function value() {return this._longPollID;} }, { key: "_IAmReady", value: function value() {this.triggerReady();} }, { key: "reset", value: function value() {this._noticeSequence = 0, this._resetSync(), this.closeNoticeChannel();} }, { key: "_resetSync", value: function value() {this._syncOffset = "", this._syncNoticeList = [], this._syncEventArray = [], this._syncMessagesIsRunning = !1, this._syncMessagesFinished = !1;} }, { key: "_setNoticeSeqInRequestData", value: function value(e) {e.Cookie.NoticeSeq = this._noticeSequence, this.tim.sumStatController.addTotalCount(Kr.LONG_POLLING);} }, { key: "_updatenoticeSequence", value: function value(e) {if (e) {var t = e[e.length - 1].noticeSequence;t && "number" == typeof t ? t <= this._noticeSequence || (this._noticeSequence = t) : this._noticeSequence++;} else this._noticeSequence++;} }, { key: "_initializeListener", value: function value() {var e = this.tim.innerEmitter;e.on(xn, this._startSyncMessages, this), e.on(yr, this.closeNoticeChannel, this), e.on(Zn, this._onFastStart, this);} }, { key: "openNoticeChannel", value: function value() {J.log("NotificationController.openNoticeChannel"), this._getLongPollID();} }, { key: "closeNoticeChannel", value: function value() {J.log("NotificationController.closeNoticeChannel"), (this._runLoop instanceof aa || this._runLoop instanceof ua) && (this._runLoop.abort(), this._runLoop.stop()), this._longPollID = 0, this._isLongPoll = !1;} }, { key: "_getLongPollID", value: function value() {var e = this;if (0 === this._longPollID) {var t = new Br();t.setMethod(Po).setStart(), this.request({ name: "longPollID", action: "query" }).then(function (n) {var r = n.data.longPollingID;e._onGetLongPollIDSuccess(r), t.setCode(0).setText("longPollingID=".concat(r)).setNetworkType(e.getNetworkType()).setEnd();}).catch(function (n) {var r = new ht({ code: n.code || dt.GET_LONGPOLL_ID_FAILED, message: n.message || _n });e.emitInnerEvent(Xn), e.emitInnerEvent(Ir, r), e.probeNetwork().then(function (e) {var n = y(e, 2),o = n[0],i = n[1];t.setError(r, o, i).setEnd();});});} else this._onGetLongPollIDSuccess(this._longPollID);} }, { key: "_onGetLongPollIDSuccess", value: function value(e) {this.emitInnerEvent(Fn, [{ key: "long_poll_logout.query.requestData.longPollingID", value: e }, { key: "longPoll.query.requestData.cookie.longPollingID", value: e }]), this._longPollID = e, this._startLongPoll(), this._IAmReady(), this.tim.sumStatController.recordLongPollingID(this._longPollID);} }, { key: "_startLongPoll", value: function value() {if (!0 !== this._isLongPoll) {J.log("NotificationController._startLongPoll...");var e = this.tim.connectionController,t = this.createTransportCapsule({ name: "longPoll", action: "query" });this._isLongPoll = !0, this._runLoop = e.createRunLoop({ pack: t, before: this._setNoticeSeqInRequestData.bind(this), success: this._onNoticeReceived.bind(this), fail: this._onNoticeFail.bind(this) }), this._runLoop.start();} else J.log("NotificationController._startLongPoll is running...");} }, { key: "_onFastStart", value: function value() {this.closeNoticeChannel(), this.syncMessage();} }, { key: "_onNoticeReceived", value: function value(e) {var t = e.data;if (t.errorCode !== Pe.SUCCESS) {var n = new Br();n.setMethod(Go).setStart(), n.setMessage(t.errorInfo || JSON.stringify(t)).setCode(t.errorCode).setNetworkType(this.getNetworkType()).setEnd(!0), this._onResponseError(t);} else this.emitInnerEvent(Qn);this.tim.sumStatController.addSuccessCount(Kr.LONG_POLLING), this.tim.sumStatController.addCost(Kr.LONG_POLLING, t.timecost), e.data.eventArray && this._dispatchNotice(e.data.eventArray);} }, { key: "_onResponseError", value: function value(e) {switch (e.errorCode) {case dt.LONG_POLL_KICK_OUT:J.warn("NotificationController._onResponseError, longPollingID=".concat(this._longPollID, " was kicked out")), this.emitInnerEvent(tr), this.closeNoticeChannel();break;case dt.MESSAGE_A2KEY_EXPIRED:case dt.ACCOUNT_A2KEY_EXPIRED:this.emitInnerEvent(vr);break;default:oe(e.errorCode) || oe(e.errorInfo) ? J.log("NotificationController._onResponseError, errorCode or errorInfo undefined!", e) : this.emitInnerEvent(Ir, new ht({ code: e.errorCode, message: e.errorInfo }));}} }, { key: "_onNoticeFail", value: function value(e) {if (e.error) if ("ECONNABORTED" === e.error.code || e.error.code === dt.NETWORK_TIMEOUT) {if (e.error.config) {var t = e.error.config.url,n = e.error.config.data;J.log("NotificationController._onNoticeFail request timed out. url=".concat(t, " data=").concat(n));} else J.log("NotificationController._onNoticeFail request timed out.");} else J.log("NotificationController._onNoticeFail request failed due to network error");this.emitInnerEvent(Jn);} }, { key: "_startSyncMessages", value: function value(e) {!0 !== this._syncMessagesFinished && this.syncMessage();} }, { key: "syncMessage", value: function value() {var e = this,t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;this._syncMessagesIsRunning = !0, this.request({ name: "syncMessage", action: "query", param: { cookie: t, syncFlag: n } }).then(function (t) {var n = t.data;switch (ja(n.cookie, n.syncFlag)) {case "00":case "01":e.emitInnerEvent(Ir, { code: dt.NOTICE_RUNLOOP_OFFSET_LOST, message: mn });break;case "10":case "11":n.eventArray && e._dispatchNotice(n.eventArray, "sync"), e._syncNoticeList = e._syncNoticeList.concat(n.messageList), e.emitInnerEvent(Vn, { data: n.messageList, C2CRemainingUnreadList: n.C2CRemainingUnreadList }), e._syncOffset = n.cookie, e.syncMessage(n.cookie, n.syncFlag);break;case "12":n.eventArray && e._dispatchNotice(n.eventArray, "sync"), e.openNoticeChannel(), e._syncNoticeList = e._syncNoticeList.concat(n.messageList), e.emitInnerEvent(Kn, { messageList: n.messageList, C2CRemainingUnreadList: n.C2CRemainingUnreadList }), e._syncOffset = n.cookie, e._syncNoticeList = [], e._syncMessagesIsRunning = !1, e._syncMessagesFinished = !0;}}).catch(function (t) {e._syncMessagesIsRunning = !1, J.error("NotificationController.syncMessage failed. error:", t);});} }]), n;}(Pr),za = function (e) {c(n, e);var t = _(n);function n(e) {var o;return r(this, n), (o = t.call(this, e)).COSSDK = null, o._cosUploadMethod = null, o.expiredTimeLimit = 300, o.appid = 0, o.bucketName = "", o.ciUrl = "", o.directory = "", o.downloadUrl = "", o.uploadUrl = "", o.expiredTimeOut = o.expiredTimeLimit, o.region = "ap-shanghai", o.cos = null, o.cosOptions = { secretId: "", secretKey: "", sessionToken: "", expiredTime: 0 }, o._timer = 0, o.tim.innerEmitter.on(xn, o._init, g(o)), o.triggerReady(), o;}return i(n, [{ key: "_expiredTimer", value: function value() {var e = this;this._timer = setInterval(function () {Math.ceil(Date.now() / 1e3) >= e.cosOptions.expiredTime - 60 && (e._getAuthorizationKey(), clearInterval(e._timer));}, 3e4);} }, { key: "_init", value: function value() {var e = N ? "cos-wx-sdk" : "cos-js-sdk";this.COSSDK = this.tim.getPlugin(e), this.COSSDK ? this._getAuthorizationKey() : J.warn("UploadController._init 没有检测到上传插件，将无法发送图片、音频、视频、文件等类型的消息。详细请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#registerPlugin");} }, { key: "_getAuthorizationKey", value: function value() {var e = this,t = Math.ceil(Date.now() / 1e3),n = new Br();n.setMethod(Jr).setStart(), this.request({ name: "cosSig", action: "query", param: { duration: this.expiredTimeLimit } }).then(function (r) {J.log("UploadController._getAuthorizationKey ok. data:", r.data);var o = r.data,i = o.expiredTime - t;n.setCode(0).setText("timeout=".concat(i, "s")).setNetworkType(e.getNetworkType()).setEnd(), e.appid = o.appid, e.bucketName = o.bucketName, e.ciUrl = o.ciUrl, e.directory = o.directory, e.downloadUrl = o.downloadUrl, e.uploadUrl = o.uploadUrl, e.expiredTimeOut = i, e.cosOptions = { secretId: o.secretId, secretKey: o.secretKey, sessionToken: o.sessionToken, expiredTime: o.expiredTime }, e._initUploaderMethod(), e._expiredTimer();}).catch(function (t) {e.probeNetwork().then(function (n) {var r = y(n, 2),o = r[0],i = r[1];e.setError(t, o, i).setEnd();}), J.warn("UploadController._getAuthorizationKey failed. error:", t);});} }, { key: "_initUploaderMethod", value: function value() {var e = this;this.appid && (this.cos = N ? new this.COSSDK({ ForcePathStyle: !0, getAuthorization: this._getAuthorization.bind(this) }) : new this.COSSDK({ getAuthorization: this._getAuthorization.bind(this) }), this._cosUploadMethod = N ? function (t, n) {e.cos.postObject(t, n);} : function (t, n) {e.cos.uploadFiles(t, n);});} }, { key: "_getAuthorization", value: function value(e, t) {t({ TmpSecretId: this.cosOptions.secretId, TmpSecretKey: this.cosOptions.secretKey, XCosSecurityToken: this.cosOptions.sessionToken, ExpiredTime: this.cosOptions.expiredTime });} }, { key: "uploadImage", value: function value(e) {if (!e.file) return Vr(new ht({ code: dt.MESSAGE_IMAGE_SELECT_FILE_FIRST, message: kt }));var t = this._checkImageType(e.file);if (!0 !== t) return t;var n = this._checkImageMime(e.file);if (!0 !== n) return n;var r = this._checkImageSize(e.file);return !0 !== r ? r : this.upload(e);} }, { key: "_checkImageType", value: function value(e) {var t = "";return t = N ? e.url.slice(e.url.lastIndexOf(".") + 1) : e.files[0].name.slice(e.files[0].name.lastIndexOf(".") + 1), vn.indexOf(t.toLowerCase()) >= 0 || Vr(new ht({ coe: dt.MESSAGE_IMAGE_TYPES_LIMIT, message: Rt }));} }, { key: "_checkImageMime", value: function value(e) {return !0;} }, { key: "_checkImageSize", value: function value(e) {var t = 0;return 0 === (t = N ? e.size : e.files[0].size) ? Vr(new ht({ code: dt.MESSAGE_FILE_IS_EMPTY, message: "".concat(Tt) })) : t < 20971520 || Vr(new ht({ coe: dt.MESSAGE_IMAGE_SIZE_LIMIT, message: "".concat(Ot) }));} }, { key: "uploadFile", value: function value(e) {var t = null;return e.file ? e.file.files[0].size > 104857600 ? (t = new ht({ code: dt.MESSAGE_FILE_SIZE_LIMIT, message: qt }), Vr(t)) : 0 === e.file.files[0].size ? (t = new ht({ code: dt.MESSAGE_FILE_IS_EMPTY, message: "".concat(Tt) }), Vr(t)) : this.upload(e) : (t = new ht({ code: dt.MESSAGE_FILE_SELECT_FILE_FIRST, message: Ut }), Vr(t));} }, { key: "uploadVideo", value: function value(e) {return e.file.videoFile.size > 104857600 ? Vr(new ht({ code: dt.MESSAGE_VIDEO_SIZE_LIMIT, message: "".concat(Pt) })) : 0 === e.file.videoFile.size ? Vr(new ht({ code: dt.MESSAGE_FILE_IS_EMPTY, message: "".concat(Tt) })) : -1 === In.indexOf(e.file.videoFile.type) ? Vr(new ht({ code: dt.MESSAGE_VIDEO_TYPES_LIMIT, message: "".concat(Gt) })) : N ? this.handleVideoUpload({ file: e.file.videoFile }) : O ? this.handleVideoUpload(e) : void 0;} }, { key: "handleVideoUpload", value: function value(e) {var t = this;return new Promise(function (n, r) {t.upload(e).then(function (e) {n(e);}).catch(function () {t.upload(e).then(function (e) {n(e);}).catch(function () {r(new ht({ code: dt.MESSAGE_VIDEO_UPLOAD_FAIL, message: wt }));});});});} }, { key: "uploadAudio", value: function value(e) {return e.file ? e.file.size > 20971520 ? Vr(new ht({ code: dt.MESSAGE_AUDIO_SIZE_LIMIT, message: "".concat(Lt) })) : 0 === e.file.size ? Vr(new ht({ code: dt.MESSAGE_FILE_IS_EMPTY, message: "".concat(Tt) })) : this.upload(e) : Vr(new ht({ code: dt.MESSAGE_AUDIO_UPLOAD_FAIL, message: Nt }));} }, { key: "upload", value: function value(e) {var t = this;if (!se(this._cosUploadMethod)) return J.warn("UploadController.upload 没有检测到上传插件，将无法发送图片、音频、视频、文件等类型的消息。详细请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html#registerPlugin"), Vr(new ht({ code: dt.COS_UNDETECTED, message: It }));var n = new Br();n.setMethod(Qr).setStart(), J.time(Kr.UPLOAD);var r = N ? e.file : e.file.files[0];return new Promise(function (o, i) {var s = N ? t._createCosOptionsWXMiniApp(e) : t._createCosOptionsWeb(e),a = t;t._cosUploadMethod(s, function (e, s) {var u = Object.create(null);if (s) {if (e || re(s.files) && s.files[0].error) {var c = new ht({ code: dt.MESSAGE_FILE_UPLOAD_FAIL, message: bt });return n.setError(c, !0, t.getNetworkType()).setEnd(), J.log("UploadController.upload failed, error:", s.files[0].error), 403 === s.files[0].error.statusCode && (J.warn("UploadController.upload failed. cos AccessKeyId was invalid, regain auth key!"), t._getAuthorizationKey()), void i(c);}u.fileName = r.name, u.fileSize = r.size, u.fileType = r.type.slice(r.type.indexOf("/") + 1).toLowerCase(), u.location = N ? s.Location : s.files[0].data.Location;var l = J.timeEnd(Kr.UPLOAD),p = a._formatFileSize(r.size),h = a._formatSpeed(1e3 * r.size / l),d = "size=".concat(p, ",time=").concat(l, "ms,speed=").concat(h);return J.log("UploadController.upload success name=".concat(r.name, ",").concat(d)), o(u), void n.setCode(0).setNetworkType(t.getNetworkType()).setText(d).setEnd();}var f = new ht({ code: dt.MESSAGE_FILE_UPLOAD_FAIL, message: bt });n.setError(f, !0, a.getNetworkType()).setEnd(), J.warn("UploadController.upload failed, error:", e), 403 === e.statusCode && (J.warn("UploadController.upload failed. cos AccessKeyId was invalid, regain auth key!"), t._getAuthorizationKey()), i(f);});});} }, { key: "_formatFileSize", value: function value(e) {return e < 1024 ? e + "B" : e < 1048576 ? Math.floor(e / 1024) + "KB" : Math.floor(e / 1048576) + "MB";} }, { key: "_formatSpeed", value: function value(e) {return e <= 1048576 ? (e / 1024).toFixed(1) + "KB/s" : (e / 1048576).toFixed(1) + "MB/s";} }, { key: "_createCosOptionsWeb", value: function value(e) {var t = this.tim.context.identifier,n = this._genFileName(t, e.to, e.file.files[0].name);return { files: [{ Bucket: "".concat(this.bucketName, "-").concat(this.appid), Region: this.region, Key: "".concat(this.directory, "/").concat(n), Body: e.file.files[0] }], SliceSize: 1048576, onProgress: function onProgress(t) {if ("function" == typeof e.onProgress) try {e.onProgress(t.percent);} catch (n) {J.warn("onProgress callback error:", n), J.error(n);}}, onFileFinish: function onFileFinish(e, t, n) {} };} }, { key: "_createCosOptionsWXMiniApp", value: function value(e) {var t = this.tim.context.identifier,n = this._genFileName(t, e.to, e.file.name),r = e.file.url;return { Bucket: "".concat(this.bucketName, "-").concat(this.appid), Region: this.region, Key: "".concat(this.directory, "/").concat(n), FilePath: r, onProgress: function onProgress(t) {if (J.log(JSON.stringify(t)), "function" == typeof e.onProgress) try {e.onProgress(t.percent);} catch (n) {J.warn("onProgress callback error:", n), J.error(n);}} };} }, { key: "_genFileName", value: function value(e, t, n) {return "".concat(e, "-").concat(t, "-").concat(me(99999), "-").concat(n);} }, { key: "reset", value: function value() {this._timer && (clearInterval(this._timer), this._timer = 0);} }]), n;}(Pr),Xa = function (e) {c(o, e);var n = _(o);function o(e) {var t;return r(this, o), (t = n.call(this, e)).FILETYPE = { SOUND: 2106, FILE: 2107, VIDEO: 2113 }, t._bdh_download_server = "grouptalk.c2c.qq.com", t._BDHBizID = 10001, t._authKey = "", t._expireTime = 0, t.tim.innerEmitter.on(xn, t._getAuthKey, g(t)), t;}return i(o, [{ key: "_getAuthKey", value: function value() {var e = this;this.request({ name: "bigDataHallwayAuthKey", action: "query" }).then(function (t) {t.data.authKey && (e._authKey = t.data.authKey, e._expireTime = parseInt(t.data.expireTime));});} }, { key: "_isFromOlderVersion", value: function value(e) {return 2 !== e.content.downloadFlag;} }, { key: "parseElements", value: function value(e, t) {if (!re(e) || !t) return [];for (var n = [], r = null, o = 0; o < e.length; o++) {r = e[o], this._needParse(r) ? n.push(this._parseElement(r, t)) : n.push(e[o]);}return n;} }, { key: "_needParse", value: function value(e) {return !(!this._isFromOlderVersion(e) || e.type !== t.MSG_AUDIO && e.type !== t.MSG_FILE && e.type !== t.MSG_VIDEO);} }, { key: "_parseElement", value: function value(e, n) {switch (e.type) {case t.MSG_AUDIO:return this._parseAudioElement(e, n);case t.MSG_FILE:return this._parseFileElement(e, n);case t.MSG_VIDEO:return this._parseVideoElement(e, n);}} }, { key: "_parseAudioElement", value: function value(e, t) {return e.content.url = this._genAudioUrl(e.content.uuid, t), e;} }, { key: "_parseFileElement", value: function value(e, t) {return e.content.url = this._genFileUrl(e.content.uuid, t, e.content.fileName), e;} }, { key: "_parseVideoElement", value: function value(e, t) {return e.content.url = this._genVideoUrl(e.content.uuid, t), e;} }, { key: "_genAudioUrl", value: function value(e, t) {return "" === this._authKey ? (J.warn("BigDataHallwayController._genAudioUrl no authKey!"), "") : "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(this.tim.context.SDKAppID, "&fileid=").concat(e, "&filetype=").concat(this.FILETYPE.SOUND, "&openid=").concat(t, "&ver=0");} }, { key: "_genFileUrl", value: function value(e, t, n) {return "" === this._authKey ? (J.warn("BigDataHallwayController._genFileUrl no authKey!"), "") : (n || (n = "".concat(Math.floor(1e5 * Math.random()), "-").concat(Date.now())), "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(this.tim.context.SDKAppID, "&fileid=").concat(e, "&filetype=").concat(this.FILETYPE.FILE, "&openid=").concat(t, "&ver=0&filename=").concat(encodeURIComponent(n)));} }, { key: "_genVideoUrl", value: function value(e, t) {return "" === this._authKey ? (J.warn("BigDataHallwayController._genVideoUrl no authKey!"), "") : "https://".concat(this._bdh_download_server, "/asn.com/stddownload_common_file?authkey=").concat(this._authKey, "&bid=").concat(this._BDHBizID, "&subbid=").concat(this.tim.context.SDKAppID, "&fileid=").concat(e, "&filetype=").concat(this.FILETYPE.VIDEO, "&openid=").concat(t, "&ver=0");} }, { key: "reset", value: function value() {this._authKey = "", this.expireTime = 0;} }]), o;}(Pr),Ja = { app_id: "", event_id: "", api_base: "https://pingtas.qq.com/pingd", prefix: "_mta_", version: "1.3.9", stat_share_app: !1, stat_pull_down_fresh: !1, stat_reach_bottom: !1, stat_param: !0 };function Qa() {try {var e = "s" + Za();return wx.setStorageSync(Ja.prefix + "ssid", e), e;} catch (t) {}}function Za(e) {for (var t = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], n = 10; 1 < n; n--) {var r = Math.floor(10 * Math.random()),o = t[r];t[r] = t[n - 1], t[n - 1] = o;}for (n = r = 0; 5 > n; n++) {r = 10 * r + t[n];}return (e || "") + (r + "") + +new Date();}function eu() {try {var e = getCurrentPages(),t = "/";return 0 < e.length && (t = e.pop().__route__), t;} catch (n) {console.log("get current page path error:" + n);}}function tu() {var e,t = { dm: "wechat.apps.xx", url: encodeURIComponent(eu() + ou(iu.Data.pageQuery)), pvi: "", si: "", ty: 0 };return t.pvi = ((e = function () {try {return wx.getStorageSync(Ja.prefix + "auid");} catch (t) {}}()) || (e = function () {try {var t = Za();return wx.setStorageSync(Ja.prefix + "auid", t), t;} catch (e) {}}(), t.ty = 1), e), t.si = function () {var e = function () {try {return wx.getStorageSync(Ja.prefix + "ssid");} catch (e) {}}();return e || (e = Qa()), e;}(), t;}function nu() {var e = function () {var e = wx.getSystemInfoSync();return { adt: encodeURIComponent(e.model), scl: e.pixelRatio, scr: e.windowWidth + "x" + e.windowHeight, lg: e.language, fl: e.version, jv: encodeURIComponent(e.system), tz: encodeURIComponent(e.platform) };}();return function (e) {wx.getNetworkType({ success: function success(t) {e(t.networkType);} });}(function (e) {try {wx.setStorageSync(Ja.prefix + "ntdata", e);} catch (t) {}}), e.ct = wx.getStorageSync(Ja.prefix + "ntdata") || "4g", e;}function ru() {var e,t = iu.Data.userInfo,n = [];for (e in t) {t.hasOwnProperty(e) && n.push(e + "=" + t[e]);}return t = n.join(";"), { r2: Ja.app_id, r4: "wx", ext: "v=" + Ja.version + (null !== t && "" !== t ? ";ui=" + encodeURIComponent(t) : "") };}function ou(e) {if (!Ja.stat_param || !e) return "";e = function (e) {if (1 > Ja.ignore_params.length) return e;var t,n = {};for (t in e) {0 <= Ja.ignore_params.indexOf(t) || (n[t] = e[t]);}return n;}(e);var t,n = [];for (t in e) {n.push(t + "=" + e[t]);}return 0 < n.length ? "?" + n.join("&") : "";}var iu = { App: { init: function init(e) {"appID" in e && (Ja.app_id = e.appID), "eventID" in e && (Ja.event_id = e.eventID), "statShareApp" in e && (Ja.stat_share_app = e.statShareApp), "statPullDownFresh" in e && (Ja.stat_pull_down_fresh = e.statPullDownFresh), "statReachBottom" in e && (Ja.stat_reach_bottom = e.statReachBottom), "ignoreParams" in e && (Ja.ignore_params = e.ignoreParams), "statParam" in e && (Ja.stat_param = e.statParam), Qa();try {"lauchOpts" in e && (iu.Data.lanchInfo = e.lauchOpts, iu.Data.lanchInfo.landing = 1);} catch (t) {}"autoReport" in e && e.autoReport && function () {var e = Page;Page = function Page(t) {var n = t.onLoad;t.onLoad = function (e) {n && n.call(this, e), iu.Data.lastPageQuery = iu.Data.pageQuery, iu.Data.pageQuery = e, iu.Data.lastPageUrl = iu.Data.pageUrl, iu.Data.pageUrl = eu(), iu.Data.show = !1, iu.Page.init();}, e(t);};}();} }, Page: { init: function init() {var e,t = getCurrentPages()[getCurrentPages().length - 1];t.onShow && (e = t.onShow, t.onShow = function () {if (!0 === iu.Data.show) {var t = iu.Data.lastPageQuery;iu.Data.lastPageQuery = iu.Data.pageQuery, iu.Data.pageQuery = t, iu.Data.lastPageUrl = iu.Data.pageUrl, iu.Data.pageUrl = eu();}iu.Data.show = !0, iu.Page.stat(), e.apply(this, arguments);}), Ja.stat_pull_down_fresh && t.onPullDownRefresh && function () {var e = t.onPullDownRefresh;t.onPullDownRefresh = function () {iu.Event.stat(Ja.prefix + "pulldownfresh", { url: t.__route__ }), e.apply(this, arguments);};}(), Ja.stat_reach_bottom && t.onReachBottom && function () {var e = t.onReachBottom;t.onReachBottom = function () {iu.Event.stat(Ja.prefix + "reachbottom", { url: t.__route__ }), e.apply(this, arguments);};}(), Ja.stat_share_app && t.onShareAppMessage && function () {var e = t.onShareAppMessage;t.onShareAppMessage = function () {return iu.Event.stat(Ja.prefix + "shareapp", { url: t.__route__ }), e.apply(this, arguments);};}();}, multiStat: function multiStat(e, t) {if (1 == t) iu.Page.stat(e);else {var n = getCurrentPages()[getCurrentPages().length - 1];n.onShow && function () {var t = n.onShow;n.onShow = function () {iu.Page.stat(e), t.call(this, arguments);};}();}}, stat: function stat(e) {if ("" != Ja.app_id) {var t = [],n = ru();if (e && (n.r2 = e), e = [tu(), n, nu()], iu.Data.lanchInfo) {e.push({ ht: iu.Data.lanchInfo.scene }), iu.Data.pageQuery && iu.Data.pageQuery._mta_ref_id && e.push({ rarg: iu.Data.pageQuery._mta_ref_id });try {1 == iu.Data.lanchInfo.landing && (n.ext += ";lp=1", iu.Data.lanchInfo.landing = 0);} catch (i) {}}e.push({ rdm: "/", rurl: 0 >= iu.Data.lastPageUrl.length ? iu.Data.pageUrl + ou(iu.Data.lastPageQuery) : encodeURIComponent(iu.Data.lastPageUrl + ou(iu.Data.lastPageQuery)) }), e.push({ rand: +new Date() }), n = 0;for (var r = e.length; n < r; n++) {for (var o in e[n]) {e[n].hasOwnProperty(o) && t.push(o + "=" + (void 0 === e[n][o] ? "" : e[n][o]));}}wx.request({ url: Ja.api_base + "?" + t.join("&").toLowerCase() });}} }, Event: { stat: function stat(e, t) {if ("" != Ja.event_id) {var n = [],r = tu(),o = ru();r.dm = "wxapps.click", r.url = e, o.r2 = Ja.event_id;var i,s = void 0 === t ? {} : t,a = [];for (i in s) {s.hasOwnProperty(i) && a.push(encodeURIComponent(i) + "=" + encodeURIComponent(s[i]));}for (s = a.join(";"), o.r5 = s, s = 0, o = (r = [r, o, nu(), { rand: +new Date() }]).length; s < o; s++) {for (var u in r[s]) {r[s].hasOwnProperty(u) && n.push(u + "=" + (void 0 === r[s][u] ? "" : r[s][u]));}}wx.request({ url: Ja.api_base + "?" + n.join("&").toLowerCase() });}} }, Data: { userInfo: null, lanchInfo: null, pageQuery: null, lastPageQuery: null, pageUrl: "", lastPageUrl: "", show: !1 } },su = iu,au = function () {function e() {r(this, e), this.cache = [], this.MtaWX = null, this._init();}return i(e, [{ key: "report", value: function value(e, t) {var n = this;try {O ? window.MtaH5 ? (window.MtaH5.clickStat(e, t), this.cache.forEach(function (e) {var t = e.name,r = e.param;window.MtaH5.clickStat(t, r), n.cache.shift();})) : this.cache.push({ name: e, param: t }) : N && (this.MtaWX ? (this.MtaWX.Event.stat(e, t), this.cache.forEach(function (e) {var t = e.name,r = e.param;n.MtaWX.stat(t, r), n.cache.shift();})) : this.cache.push({ name: e, param: t }));} catch (r) {}} }, { key: "stat", value: function value() {try {O && window.MtaH5 ? window.MtaH5.pgv() : N && this.MtaWX && this.MtaWX.Page.stat();} catch (e) {}} }, { key: "_init", value: function value() {try {if (O) {window._mtac = { autoReport: 0 };var e = document.createElement("script"),t = Me();e.src = "".concat(t, "//pingjs.qq.com/h5/stats.js?v2.0.4"), e.setAttribute("name", "MTAH5"), e.setAttribute("sid", "500690998"), e.setAttribute("cid", "500691017");var n = document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e, n);} else N && (this.MtaWX = su, this.MtaWX.App.init({ appID: "500690995", eventID: "500691014", autoReport: !1, statParam: !0 }));} catch (r) {}} }]), e;}(),uu = function (e) {c(n, e);var t = _(n);function n(e) {var o;r(this, n), (o = t.call(this, e)).MTA = new au();var i = o.tim.innerEmitter;return i.on(Ar, o._stat, g(o)), i.on(Dr, o._stat, g(o)), o;}return i(n, [{ key: "_stat", value: function value() {this.MTA.report("sdkappid", { value: this.tim.context.SDKAppID }), this.MTA.report("version", { value: Eu.VERSION }), this.MTA.stat();} }]), n;}(Pr),cu = function () {function e(t) {r(this, e), this._table = "timwebii", this._report = [];}return i(e, [{ key: "pushIn", value: function value(e) {J.debug("SSOLogBody.pushIn", this._report.length, e), this._report.push(e);} }, { key: "backfill", value: function value(e) {var t;re(e) && 0 !== e.length && (J.debug("SSOLogBody.backfill", this._report.length, e.length), (t = this._report).unshift.apply(t, v(e)));} }, { key: "getLogsNumInMemory", value: function value() {return this._report.length;} }, { key: "isEmpty", value: function value() {return 0 === this._report.length;} }, { key: "_reset", value: function value() {this._report.length = 0, this._report = [];} }, { key: "getTable", value: function value() {return this._table;} }, { key: "getLogsInMemory", value: function value() {var e = this._report.slice();return this._reset(), e;} }]), e;}(),lu = function (e) {c(n, e);var t = _(n);function n(e) {var o;return r(this, n), (o = t.call(this, e)).TAG = "im-ssolog-event", o._reportBody = new cu(), o._version = "2.7.1", o.MIN_THRESHOLD = 20, o.MAX_THRESHOLD = 100, o.WAITING_TIME = 6e4, o.INTERVAL = 2e4, o._timerID = 0, o._resetLastReportTime(), o._startReportTimer(), o._retryCount = 0, o.MAX_RETRY_COUNT = 3, o.tim.innerEmitter.on(mr, o._onLoginSuccess, g(o)), o;}return i(n, [{ key: "reportAtOnce", value: function value() {J.debug("EventStatController.reportAtOnce"), this._report();} }, { key: "_onLoginSuccess", value: function value() {var e = this,t = this.tim.storage,n = t.getItem(this.TAG, !1);Oe(n) || (J.log("EventStatController._onLoginSuccess get ssolog in storage, nums=" + n.length), n.forEach(function (t) {e._reportBody.pushIn(t);}), t.removeItem(this.TAG, !1));} }, { key: "pushIn", value: function value(e) {e instanceof Br && (e.setCommonInfo(this.tim.context.SDKAppID, this._version, this.tim.context.tinyID, this.tim.loginInfo.identifier, this.getPlatform()), this._reportBody.pushIn(e), this._reportBody.getLogsNumInMemory() >= this.MIN_THRESHOLD && this._report());} }, { key: "_resetLastReportTime", value: function value() {this._lastReportTime = Date.now();} }, { key: "_startReportTimer", value: function value() {var e = this;this._timerID = setInterval(function () {Date.now() < e._lastReportTime + e.WAITING_TIME || e._reportBody.isEmpty() || e._report();}, this.INTERVAL);} }, { key: "_stopReportTimer", value: function value() {this._timerID > 0 && (clearInterval(this._timerID), this._timerID = 0);} }, { key: "_report", value: function value() {var e = this;if (!this._reportBody.isEmpty()) {var t = this._reportBody.getLogsInMemory();this.request({ name: "ssoEventStat", action: "create", param: { table: this._reportBody.getTable(), report: t } }).then(function () {e._resetLastReportTime(), e._retryCount > 0 && (J.debug("EventStatController.report retry success"), e._retryCount = 0);}).catch(function (n) {if (J.warn("EventStatController.report, networkType:".concat(e.getNetworkType(), " error:").concat(de(n))), e._reportBody.backfill(t), e._reportBody.getLogsNumInMemory() > e.MAX_THRESHOLD || e._retryCount === e.MAX_RETRY_COUNT || 0 === e._timerID) return e._retryCount = 0, void e._flushAtOnce();e._retryCount += 1;});}} }, { key: "_flushAtOnce", value: function value() {var e = this.tim.storage,t = e.getItem(this.TAG, !1),n = this._reportBody.getLogsInMemory();if (Oe(t)) J.log("EventStatController._flushAtOnce nums=" + n.length), e.setItem(this.TAG, n, !0, !1);else {var r = n.concat(t);r.length > this.MAX_THRESHOLD && (r = r.slice(0, this.MAX_THRESHOLD)), J.log("EventStatController._flushAtOnce nums=" + r.length), e.setItem(this.TAG, r, !0, !1);}} }, { key: "reset", value: function value() {J.log("EventStatController.reset"), this._stopReportTimer(), this._report();} }]), n;}(Pr),pu = "none",hu = "online",du = function () {function e() {r(this, e), this._networkType = "", this.maxWaitTime = 3e3;}return i(e, [{ key: "start", value: function value() {var e = this;N ? (wx.getNetworkType({ success: function success(t) {e._networkType = t.networkType, t.networkType === pu ? J.warn("NetMonitor no network, please check!") : J.info("NetMonitor networkType:".concat(t.networkType));} }), wx.onNetworkStatusChange(this._onWxNetworkStatusChange.bind(this))) : this._networkType = hu;} }, { key: "_onWxNetworkStatusChange", value: function value(e) {this._networkType = e.networkType, e.isConnected ? J.info("NetMonitor networkType:".concat(e.networkType)) : J.warn("NetMonitor no network, please check!");} }, { key: "probe", value: function value() {var e = this;return new Promise(function (t, n) {if (N) wx.getNetworkType({ success: function success(n) {e._networkType = n.networkType, n.networkType === pu ? (J.warn("NetMonitor no network, please check!"), t([!1, n.networkType])) : (J.info("NetMonitor networkType:".concat(n.networkType)), t([!0, n.networkType]));} });else if (window && window.fetch) fetch("".concat(Me(), "//webim-1252463788.file.myqcloud.com/assets/test/speed.xml?random=").concat(Math.random())).then(function (e) {e.ok ? t([!0, hu]) : t([!1, pu]);}).catch(function (e) {t([!1, pu]);});else {var r = new XMLHttpRequest(),o = setTimeout(function () {J.warn("NetMonitor fetch timeout. Probably no network, please check!"), r.abort(), e._networkType = pu, t([!1, pu]);}, e.maxWaitTime);r.onreadystatechange = function () {4 === r.readyState && (clearTimeout(o), 200 === r.status || 304 === r.status ? (this._networkType = hu, t([!0, hu])) : (J.warn("NetMonitor fetch status:".concat(r.status, ". Probably no network, please check!")), this._networkType = pu, t([!1, pu])));}, r.open("GET", "".concat(Me(), "//webim-1252463788.file.myqcloud.com/assets/test/speed.xml?random=").concat(Math.random())), r.send();}});} }, { key: "getNetworkType", value: function value() {return this._networkType;} }, { key: "reset", value: function value() {this._networkType = "";} }]), e;}(),fu = function () {function e(t) {var n = this;r(this, e), re(t) ? (this._map = new Map(), t.forEach(function (e) {n._map.set(e, []);})) : J.warn("AverageCalculator.constructor need keys");}return i(e, [{ key: "push", value: function value(e, t) {return !(oe(e) || !this._map.has(e) || !Z(t)) && (this._map.get(e).push(t), !0);} }, { key: "getSize", value: function value(e) {return oe(e) || !this._map.has(e) ? -1 : this._map.get(e).length;} }, { key: "getAvg", value: function value(e) {if (oe(e) || !this._map.has(e)) return -1;var t = this._map.get(e),n = t.length;if (0 === n) return 0;var r = 0;return t.forEach(function (e) {r += e;}), t.length = 0, this._map.set(e, []), parseInt(r / n);} }, { key: "getMax", value: function value(e) {return oe(e) || !this._map.has(e) ? -1 : Math.max.apply(null, this._map.get(e));} }, { key: "getMin", value: function value(e) {return oe(e) || !this._map.has(e) ? -1 : Math.min.apply(null, this._map.get(e));} }, { key: "reset", value: function value() {this._map.forEach(function (e) {e.length = 0;});} }]), e;}(),gu = function () {function e(t) {var n = this;r(this, e), re(t) ? (this._map = new Map(), t.forEach(function (e) {n._map.set(e, { totalCount: 0, successCount: 0 });})) : J.warn("SuccessRateCalculator.constructor need keys");}return i(e, [{ key: "addTotalCount", value: function value(e) {return !(oe(e) || !this._map.has(e)) && (this._map.get(e).totalCount += 1, !0);} }, { key: "addSuccessCount", value: function value(e) {return !(oe(e) || !this._map.has(e)) && (this._map.get(e).successCount += 1, !0);} }, { key: "getSuccessRate", value: function value(e) {if (oe(e) || !this._map.has(e)) return -1;var t = this._map.get(e);if (0 === t.totalCount) return 1;var n = parseFloat((t.successCount / t.totalCount).toFixed(2));return n > 1 && (n = 1), t.totalCount = t.successCount = 0, n;} }, { key: "getTotalCount", value: function value(e) {return oe(e) || !this._map.has(e) ? -1 : this._map.get(e).totalCount;} }, { key: "reset", value: function value() {this._map.forEach(function (e) {e.totalCount = 0, e.successCount = 0;});} }]), e;}(),mu = function (e) {c(n, e);var t = _(n);function n(e) {var o;return r(this, n), (o = t.call(this, e)).TABLE = "timwebsum", o.TAG = "im-ssolog-sumstat", o._items = [Kr.LONG_POLLING, Kr.LONG_POLLING_AV, Kr.SEND_MESSAGE, Kr.SEND_MESSAGE_C2C, Kr.SEND_MESSAGE_GROUP_WORK, Kr.SEND_MESSAGE_GROUP_PUBLIC, Kr.SEND_MESSAGE_GROUP_MEETING, Kr.SEND_MESSAGE_GROUP_AV, Kr.MESSAGE_RECEIVED, Kr.MESSAGE_RECEIVED_AV], o._thresholdMap = new Map(), o._thresholdMap.set(Kr.LONG_POLLING, 100), o._thresholdMap.set(Kr.LONG_POLLING_AV, 150), o._thresholdMap.set(Kr.SEND_MESSAGE, 15), o._thresholdMap.set(Kr.SEND_MESSAGE_C2C, 6), o._thresholdMap.set(Kr.SEND_MESSAGE_GROUP_WORK, 6), o._thresholdMap.set(Kr.SEND_MESSAGE_GROUP_PUBLIC, 6), o._thresholdMap.set(Kr.SEND_MESSAGE_GROUP_MEENTING, 6), o._thresholdMap.set(Kr.SEND_MESSAGE_GROUP_AV, 6), o._thresholdMap.set(Kr.MESSAGE_RECEIVED, 50), o._thresholdMap.set(Kr.MESSAGE_RECEIVED_AV, 50), o._lpID = "", o._platform = o.getPlatform(), o._lastReportTime = 0, o._statInfoArr = [], o._retryCount = 0, o._avgCalc = new fu(o._items), o._successRateCalc = new gu(o._items), o.tim.innerEmitter.on(mr, o._onLoginSuccess, g(o)), o;}return i(n, [{ key: "_onLoginSuccess", value: function value() {var e = this,t = this.tim.storage,n = t.getItem(this.TAG, !1);Oe(n) || (J.log("SumStatController._onLoginSuccess get sumstatlog in storage, nums=" + n.length), n.forEach(function (t) {e._statInfoArr.pushIn(t);}), t.removeItem(this.TAG, !1));} }, { key: "recordLongPollingID", value: function value(e) {this._lpID = e;} }, { key: "addTotalCount", value: function value(e) {this._successRateCalc.addTotalCount(e) ? 1 === this._successRateCalc.getTotalCount(e) && (this._lastReportTime = Date.now()) : J.warn("SumStatController.addTotalCount invalid key:", e);} }, { key: "addSuccessCount", value: function value(e) {this._successRateCalc.addSuccessCount(e) || J.warn("SumStatController.addSuccessCount invalid key:", e);} }, { key: "addCost", value: function value(e, t) {this._avgCalc.push(e, t) ? (J.debug("SumStatController.addCost", e, t, this._avgCalc.getSize(e)), this._avgCalc.getSize(e) >= this._thresholdMap.get(e) && this._report(e)) : J.warn("SumStatController.addCost invalid key or cost:", e, t);} }, { key: "_getItemNum", value: function value(e) {switch (e) {case Kr.LONG_POLLING:return 1;case Kr.LONG_POLLING_AV:return 2;case Kr.SEND_MESSAGE:return 3;case Kr.MESSAGE_RECEIVED:return 4;case Kr.MESSAGE_RECEIVED_AV:return 5;case Kr.SEND_MESSAGE_C2C:return 6;case Kr.SEND_MESSAGE_GROUP_WORK:return 7;case Kr.SEND_MESSAGE_GROUP_PUBLIC:return 8;case Kr.SEND_MESSAGE_GROUP_MEETING:return 9;case Kr.SEND_MESSAGE_GROUP_AV:return 10;default:return 100;}} }, { key: "_getStatInfo", value: function value(e) {var t = null;return this._avgCalc.getSize(e) > 0 && (t = { SDKAppID: "".concat(this.tim.context.SDKAppID), version: "".concat("2.7.1"), tinyID: this.tim.context.tinyID, userID: this.tim.loginInfo.identifier, item: this._getItemNum(e), lpID: e === Kr.LONG_POLLING ? this._lpID : "", platform: this._platform, networkType: this.getNetworkType(), total: this._successRateCalc.getTotalCount(e), successRate: this._successRateCalc.getSuccessRate(e), avg: this._avgCalc.getAvg(e), timespan: Date.now() - this._lastReportTime, time: fe() }), t;} }, { key: "_report", value: function value(e) {var t = this,n = [],r = null;oe(e) ? this._items.forEach(function (e) {null !== (r = t._getStatInfo(e)) && n.push(r);}) : null !== (r = this._getStatInfo(e)) && n.push(r), J.debug("SumStatController._report", n), this._statInfoArr.length > 0 && (n = n.concat(this.statInfoArr), this._statInfoArr = []), this._doReport(n);} }, { key: "_doReport", value: function value(e) {var t = this;Oe(e) ? J.warn("SumStatController._doReport statInfoArr is empty, do nothing") : this.request({ name: "ssoSumStat", action: "create", param: { table: this.TABLE, report: e } }).then(function () {t._lastReportTime = Date.now(), t._retryCount > 0 && (J.debug("SumStatController._doReport retry success"), t._retryCount = 0);}).catch(function (n) {J.warn("SumStatController._doReport, online:".concat(t.getNetworkType(), " error:").concat(de(n)), e), t._retryCount <= 1 ? setTimeout(function () {J.info("SumStatController._doReport retry", e), t._retryCount += 1, t._doReport(e);}, 5e3) : (t._retryCount = 0, t._statInfoArr = t._statInfoArr.concat(e), t._flusgAtOnce());});} }, { key: "_flushAtOnce", value: function value() {var e = this.tim.storage,t = e.getItem(this.TAG, !1),n = this._statInfoArr;if (Oe(t)) J.log("SumStatController._flushAtOnce nums=" + n.length), e.setItem(this.TAG, n, !0, !1);else {var r = n.concat(t);r.length > 10 && (r = r.slice(0, 10)), J.log("SumStatController._flushAtOnce nums=" + r.length), e.setItem(this.TAG, r, !0, !1);}this._statInfoArr = [];} }, { key: "reset", value: function value() {J.info("SumStatController.reset"), this._report(), this._avgCalc.reset(), this._successRateCalc.reset();} }]), n;}(Pr),_u = function () {function e() {r(this, e), this._funcMap = new Map();}return i(e, [{ key: "defense", value: function value(e, t) {var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;if ("string" != typeof e) return null;if (0 === e.length) return null;if ("function" != typeof t) return null;if (this._funcMap.has(e) && this._funcMap.get(e).has(t)) return this._funcMap.get(e).get(t);this._funcMap.has(e) || this._funcMap.set(e, new Map());var r = null;return this._funcMap.get(e).has(t) ? r = this._funcMap.get(e).get(t) : (r = this._pack(e, t, n), this._funcMap.get(e).set(t, r)), r;} }, { key: "defenseOnce", value: function value(e, t) {var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;return "function" != typeof t ? null : this._pack(e, t, n);} }, { key: "find", value: function value(e, t) {return "string" != typeof e || 0 === e.length || "function" != typeof t ? null : this._funcMap.has(e) ? this._funcMap.get(e).has(t) ? this._funcMap.get(e).get(t) : (J.log("SafetyCallback.find: 找不到 func —— ".concat(e, "/").concat("" !== t.name ? t.name : "[anonymous]")), null) : (J.log("SafetyCallback.find: 找不到 eventName-".concat(e, " 对应的 func")), null);} }, { key: "delete", value: function value(e, t) {return "function" == typeof t && !!this._funcMap.has(e) && !!this._funcMap.get(e).has(t) && (this._funcMap.get(e).delete(t), 0 === this._funcMap.get(e).size && this._funcMap.delete(e), !0);} }, { key: "_pack", value: function value(e, t, n) {return function () {try {t.apply(n, Array.from(arguments));} catch (o) {var r = new Br();r.setMethod(Yo).setText("eventName=".concat(e)).setStart(), r.setCode(0).setMessage(o.message).setEnd();}};} }]), e;}(),yu = function (e) {c(n, e);var t = _(n);function n(e) {var o;return r(this, n), (o = t.call(this, e))._maybeLostSequencesMap = new Map(), o;}return i(n, [{ key: "onMessageMaybeLost", value: function value(e, t, n) {this._maybeLostSequencesMap.has(e) || this._maybeLostSequencesMap.set(e, []);for (var r = this._maybeLostSequencesMap.get(e), o = 0; o < n; o++) {r.push(t + o);}J.debug("MessageLossController.onMessageMaybeLost. maybeLostSequences:".concat(r));} }, { key: "detectMessageLoss", value: function value(e, t) {var n = this._maybeLostSequencesMap.get(e);if (!Oe(n) && !Oe(t)) {var r = t.filter(function (e) {return -1 !== n.indexOf(e);});if (J.debug("MessageLossController.detectMessageLoss. matchedSequences:".concat(r)), n.length === r.length) J.info("MessageLossController.detectMessageLoss no message loss. conversationID=".concat(e));else {var o,i = n.filter(function (e) {return -1 === r.indexOf(e);}),s = i.length;s <= 5 ? o = e + "-" + i.join("-") : (i.sort(function (e, t) {return e - t;}), o = e + " start:" + i[0] + " end:" + i[s - 1] + " count:" + s);var a = new Br();a.setMethod(xo).setStart(), a.setCode(0).setText(o).setNetworkType(this.getNetworkType()).setEnd(), J.warn("MessageLossController.detectMessageLoss message loss detected. conversationID:".concat(e, " lostSequences:").concat(i));}n.length = 0;}} }, { key: "reset", value: function value() {J.log("MessageLossController.reset"), this._maybeLostSequencesMap.clear();} }]), n;}(Pr),vu = function () {function t(e) {r(this, t);var n = new Br();n.setMethod(Hr).setStart(), wr.mixin(this), this._initOptions(e), this._initMemberVariables(), this._initControllers(), this._initListener(), Br.bindController(this.eventStatController), n.setCode(0).setText("mp=".concat(N, "-ua=").concat(L)).setEnd(), J.info("SDK inWxMiniApp:".concat(N, ", SDKAppID:").concat(e.SDKAppID, ", UserAgent:").concat(L)), this._safetyCallbackFactory = new _u();}return i(t, [{ key: "login", value: function value(e) {return J.time(Kr.SDK_READY), this._ssoLog = new Br(), this._ssoLog.setMethod(jr).setStart(), this.netMonitor.start(), this.loginInfo.identifier = e.identifier || e.userID, this.loginInfo.userSig = e.userSig, this.signController.login(this.loginInfo);} }, { key: "logout", value: function value() {var e = this.signController.logout();return this.resetSDK(), e;} }, { key: "on", value: function value(t, n, r) {t === e.GROUP_SYSTEM_NOTICE_RECEIVED && J.warn("！！！TIM.EVENT.GROUP_SYSTEM_NOTICE_RECEIVED v2.6.0起弃用，为了更好的体验，请在 TIM.EVENT.MESSAGE_RECEIVED 事件回调内接收处理群系统通知，详细请参考：https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/Message.html#.GroupSystemNoticePayload"), J.debug("on", "eventName:".concat(t)), this.outerEmitter.on(t, this._safetyCallbackFactory.defense(t, n, r), r);} }, { key: "once", value: function value(e, t, n) {J.debug("once", "eventName:".concat(e)), this.outerEmitter.once(e, this._safetyCallbackFactory.defenseOnce(e, t, n), n || this);} }, { key: "off", value: function value(e, t, n, r) {J.debug("off", "eventName:".concat(e));var o = this._safetyCallbackFactory.find(e, t);null !== o && (this.outerEmitter.off(e, o, n, r), this._safetyCallbackFactory.delete(e, t));} }, { key: "registerPlugin", value: function value(e) {var t = this;this.plugins || (this.plugins = {}), Object.keys(e).forEach(function (n) {t.plugins[n] = e[n];});var n = new Br();n.setMethod(Xr).setStart(), n.setCode(0).setText("key=".concat(Object.keys(e))).setEnd();} }, { key: "getPlugin", value: function value(e) {return this.plugins[e] || void 0;} }, { key: "setLogLevel", value: function value(e) {if (e <= 0) {console.log(["", " ________  ______  __       __  __       __  ________  _______", "|        \\|      \\|  \\     /  \\|  \\  _  |  \\|        \\|       \\", " \\$$$$$$$$ \\$$$$$$| $$\\   /  $$| $$ / \\ | $$| $$$$$$$$| $$$$$$$\\", "   | $$     | $$  | $$$\\ /  $$$| $$/  $\\| $$| $$__    | $$__/ $$", "   | $$     | $$  | $$$$\\  $$$$| $$  $$$\\ $$| $$  \\   | $$    $$", "   | $$     | $$  | $$\\$$ $$ $$| $$ $$\\$$\\$$| $$$$$   | $$$$$$$\\", "   | $$    _| $$_ | $$ \\$$$| $$| $$$$  \\$$$$| $$_____ | $$__/ $$", "   | $$   |   $$ \\| $$  \\$ | $$| $$$    \\$$$| $$     \\| $$    $$", "    \\$$    \\$$$$$$ \\$$      \\$$ \\$$      \\$$ \\$$$$$$$$ \\$$$$$$$", "", ""].join("\n")), console.log("%cIM 智能客服，随时随地解决您的问题 →_→ https://cloud.tencent.com/act/event/smarty-service?from=im-doc", "color:#ff0000");console.log(["", "参考以下文档，会更快解决问题哦！(#^.^#)\n", "SDK 更新日志: https://cloud.tencent.com/document/product/269/38492\n", "SDK 接口文档: https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html\n", "常见问题: https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/tutorial-01-faq.html\n", "反馈问题？戳我提 issue: https://github.com/tencentyun/TIMSDK/issues\n", "如果您需要在生产环境关闭上面的日志，请 tim.setLogLevel(1)\n"].join("\n"));}J.setLevel(e);} }, { key: "downloadLog", value: function value() {var e = document.createElement("a"),t = new Date(),n = new Blob(this.getLog());e.download = "TIM-" + t.getFullYear() + "-" + (t.getMonth() + 1) + "-" + t.getDate() + "-" + this.loginInfo.SDKAppID + "-" + this.context.identifier + ".txt", e.href = URL.createObjectURL(n), e.click(), URL.revokeObjectURL(n);} }, { key: "destroy", value: function value() {this.logout(), this.outerEmitter.emit(e.SDK_DESTROY, { SDKAppID: this.loginInfo.SDKAppID });} }, { key: "createTextMessage", value: function value(e) {return this.messageController.createTextMessage(e);} }, { key: "createImageMessage", value: function value(e) {return this.messageController.createImageMessage(e);} }, { key: "createAudioMessage", value: function value(e) {return this.messageController.createAudioMessage(e);} }, { key: "createVideoMessage", value: function value(e) {return this.messageController.createVideoMessage(e);} }, { key: "createCustomMessage", value: function value(e) {return this.messageController.createCustomMessage(e);} }, { key: "createFaceMessage", value: function value(e) {return this.messageController.createFaceMessage(e);} }, { key: "createFileMessage", value: function value(e) {return this.messageController.createFileMessage(e);} }, { key: "sendMessage", value: function value(e, t) {return e instanceof Dn ? this.messageController.sendMessageInstance(e, t) : Vr(new ht({ code: dt.MESSAGE_SEND_NEED_MESSAGE_INSTANCE, message: Et }));} }, { key: "revokeMessage", value: function value(e) {return this.messageController.revokeMessage(e);} }, { key: "resendMessage", value: function value(e) {return this.messageController.resendMessage(e);} }, { key: "getMessageList", value: function value(e) {return this.messageController.getMessageList(e);} }, { key: "setMessageRead", value: function value(e) {return this.messageController.setMessageRead(e);} }, { key: "getConversationList", value: function value() {return this.conversationController.getConversationList();} }, { key: "getConversationProfile", value: function value(e) {return this.conversationController.getConversationProfile(e);} }, { key: "deleteConversation", value: function value(e) {return this.conversationController.deleteConversation(e);} }, { key: "getMyProfile", value: function value() {return this.userController.getMyProfile();} }, { key: "getUserProfile", value: function value(e) {return this.userController.getUserProfile(e);} }, { key: "updateMyProfile", value: function value(e) {return this.userController.updateMyProfile(e);} }, { key: "getFriendList", value: function value() {return this.userController.getFriendList();} }, { key: "deleteFriend", value: function value(e) {return this.userController.deleteFriend(e);} }, { key: "getBlacklist", value: function value() {return this.userController.getBlacklist();} }, { key: "addToBlacklist", value: function value(e) {return this.userController.addBlacklist(e);} }, { key: "removeFromBlacklist", value: function value(e) {return this.userController.deleteBlacklist(e);} }, { key: "getGroupList", value: function value(e) {return this.groupController.getGroupList(e);} }, { key: "getGroupProfile", value: function value(e) {return this.groupController.getGroupProfile(e);} }, { key: "createGroup", value: function value(e) {return this.groupController.createGroup(e);} }, { key: "dismissGroup", value: function value(e) {return this.groupController.dismissGroup(e);} }, { key: "updateGroupProfile", value: function value(e) {return this.groupController.updateGroupProfile(e);} }, { key: "joinGroup", value: function value(e) {return this.groupController.joinGroup(e);} }, { key: "quitGroup", value: function value(e) {return this.groupController.quitGroup(e);} }, { key: "searchGroupByID", value: function value(e) {return this.groupController.searchGroupByID(e);} }, { key: "changeGroupOwner", value: function value(e) {return this.groupController.changeGroupOwner(e);} }, { key: "handleGroupApplication", value: function value(e) {return this.groupController.handleGroupApplication(e);} }, { key: "setMessageRemindType", value: function value(e) {return this.groupController.setMessageRemindType(e);} }, { key: "getGroupMemberList", value: function value(e) {return this.groupController.getGroupMemberList(e);} }, { key: "getGroupMemberProfile", value: function value(e) {return this.groupController.getGroupMemberProfile(e);} }, { key: "addGroupMember", value: function value(e) {return this.groupController.addGroupMember(e);} }, { key: "deleteGroupMember", value: function value(e) {return this.groupController.deleteGroupMember(e);} }, { key: "setGroupMemberMuteTime", value: function value(e) {return this.groupController.setGroupMemberMuteTime(e);} }, { key: "setGroupMemberRole", value: function value(e) {return this.groupController.setGroupMemberRole(e);} }, { key: "setGroupMemberNameCard", value: function value(e) {return this.groupController.setGroupMemberNameCard(e);} }, { key: "setGroupMemberCustomField", value: function value(e) {return this.groupController.setGroupMemberCustomField(e);} }, { key: "_initOptions", value: function value(e) {this.plugins = {};var t = e.SDKAppID || 0,n = me();this.context = { SDKAppID: t, accountType: n }, this.loginInfo = { SDKAppID: t, accountType: n, identifier: null, userSig: null, unlimitedAVChatRoom: e.unlimitedAVChatRoom || !1 }, this.options = { runLoopNetType: e.runLoopNetType || Je, enablePointer: e.enablePointer || !1 };} }, { key: "_initMemberVariables", value: function value() {this.innerEmitter = new Ka(), this.outerEmitter = new Ka(), xr(this.outerEmitter), this.packageConfig = new Ha(this), this.storage = new Va(this), this.netMonitor = new du(), this.outerEmitter._emit = this.outerEmitter.emit, this.outerEmitter.emit = function (e, t) {var n = arguments[0],r = [n, { name: arguments[0], data: arguments[1] }];this.outerEmitter._emit.apply(this.outerEmitter, r);}.bind(this), this.innerEmitter._emit = this.innerEmitter.emit, this.innerEmitter.emit = function (e, t) {var n;ne(arguments[1]) && arguments[1].data ? (J.warn("inner eventData has data property, please check!"), n = [e, { name: arguments[0], data: arguments[1].data }]) : n = [e, { name: arguments[0], data: arguments[1] }], this.innerEmitter._emit.apply(this.innerEmitter, n);}.bind(this);} }, { key: "_initControllers", value: function value() {this.exceptionController = new la(this), this.connectionController = new ca(this), this.contextController = new br(this), this.context = this.contextController.getContext(), this.signController = new Wo(this), this.messageController = new La(this), this.conversationController = new Ta(this), this.userController = new va(this), this.groupController = new qa(this), this.notificationController = new Wa(this), this.bigDataHallwayController = new Xa(this), this.statusController = new xa(this), this.uploadController = new za(this), this.messageLossController = new yu(this), this.eventStatController = new lu(this), this.sumStatController = new mu(this), this.mtaReportController = new uu(this), this._initReadyListener();} }, { key: "_initListener", value: function value() {var e = this;if (this.innerEmitter.on(er, this._onSlowStart, this), N && "function" == typeof wx.onAppShow && "function" == typeof wx.onAppHide) {var t = null;wx.onAppHide(function () {(t = new Br()).setMethod(jo).setStart();}), wx.onAppShow(function () {null !== t && t.setCode(0).setNetworkType(e.netMonitor.getNetworkType()).setEnd();});}} }, { key: "_initReadyListener", value: function value() {for (var e = this, t = this.readyList, n = 0, r = t.length; n < r; n++) {this[t[n]].ready(function () {return e._readyHandle();});}} }, { key: "_onSlowStart", value: function value() {J.log("slow start longpolling..."), this.resetSDK(), this.login(this.loginInfo);} }, { key: "resetSDK", value: function value() {var t = this;this.initList.forEach(function (e) {t[e].reset && t[e].reset();}), this.netMonitor.reset(), this.storage.reset(), this.resetReady(), this._initReadyListener(), this.outerEmitter.emit(e.SDK_NOT_READY);} }, { key: "_readyHandle", value: function value() {for (var t = this.readyList, n = !0, r = 0, o = t.length; r < o; r++) {if (!this[t[r]].isReady()) {n = !1;break;}}if (n) {var i = J.timeEnd(Kr.SDK_READY);J.warn("SDK is ready. cost=".concat(i, "ms")), this.triggerReady(), this.innerEmitter.emit(Ar), this.outerEmitter.emit(e.SDK_READY), this._ssoLog.setCode(0).setNetworkType(this.netMonitor.getNetworkType()).setText(i).setEnd();}} }]), t;}();vu.prototype.readyList = ["conversationController"], vu.prototype.initList = ["exceptionController", "connectionController", "signController", "contextController", "messageController", "conversationController", "userController", "groupController", "notificationController", "eventStatController", "sumStatController", "messageLossController", "statusController"];var Iu = { login: "login", on: "on", off: "off", ready: "ready", setLogLevel: "setLogLevel", joinGroup: "joinGroup", quitGroup: "quitGroup", registerPlugin: "registerPlugin" };function Mu(e, t) {return !(!e.isReady() && void 0 === Iu[t]) || (e.innerEmitter.emit(Ir, new ht({ code: dt.SDK_IS_NOT_READY, message: "".concat(t, " ").concat(yn, "，请参考 https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/module-EVENT.html#.SDK_READY") })), !1);}var Cu = {},Eu = {};return Eu.create = function (t) {if (t.SDKAppID && Cu[t.SDKAppID]) return Cu[t.SDKAppID];J.log("TIM.create");var n = new vu(t);n.on(e.SDK_DESTROY, function (e) {Cu[e.data.SDKAppID] = null, delete Cu[e.data.SDKAppID];});var r = function (e) {var t = Object.create(null);return Object.keys(Rn).forEach(function (n) {if (e[n]) {var r = Rn[n],o = new E();t[r] = function () {var t = Array.from(arguments);return o.use(function (t, r) {if (Mu(e, n)) return r();}).use(function (e, t) {if (!0 === Ne(e, kn[n], r)) return t();}).use(function (t, r) {return e[n].apply(e, t);}), o.run(t);};}}), t;}(n);return Cu[t.SDKAppID] = r, J.log("TIM.create ok"), r;}, Eu.TYPES = t, Eu.EVENT = e, Eu.VERSION = "2.7.1", J.log("TIM.VERSION: ".concat(Eu.VERSION)), Eu;});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 16:
/*!******************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/common/tim/tim.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _timWxSdk = _interopRequireDefault(__webpack_require__(/*! tim-wx-sdk */ 15));
var _cosWxSdkV = _interopRequireDefault(__webpack_require__(/*! cos-wx-sdk-v5 */ 17));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}


var options = {
  SDKAppID: 1400477019 // 接入时需要将0替换为您的即时通信应用的 SDKAppID
};
// 创建 SDK 实例，TIM.create() 方法对于同一个 SDKAppID 只会返回同一份实例
var tim = _timWxSdk.default.create(options); // SDK 实例通常用 tim 表示
var TIMData = _timWxSdk.default;
// 注册 COS SDK 插件
tim.registerPlugin({ 'cos-wx-sdk': _cosWxSdkV.default });



/* eslint-disable require-jsdoc */
function genTestUserSig(userID) {
  var SDKAPPID = 1400477019;
  var EXPIRETIME = 604800;
  var SECRETKEY = '792083b1cd556c90c74d3fe7b332fdac577276c687db157761ac32737d5418da';

  if (SDKAPPID === '' || SECRETKEY === '') {
    alert(
    '请先配置好您的账号信息： SDKAPPID 及 SECRETKEY ' +
    '\r\n\r\nPlease configure your SDKAPPID/SECRETKEY in js/debug/GenerateTestUserSig.js');

  }
  var generator = new LibGenerateTestUserSig(SDKAPPID, SECRETKEY, EXPIRETIME);
  var userSig = generator.genTestUserSig(userID);
  return {
    sdkAppId: SDKAPPID,
    userSig: userSig };

}var _default =

{
  tim: tim,
  TIMData: TIMData,
  genTestUserSig: genTestUserSig };exports.default = _default;

/***/ }),

/***/ 17:
/*!*****************************************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/node_modules/cos-wx-sdk-v5/demo/lib/cos-wx-sdk-v5.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}(function webpackUniversalModuleDefinition(root, factory) {
  if (true)
  module.exports = factory();else
  {}
})(this, function () {
  return (/******/function (modules) {// webpackBootstrap
      /******/ // The module cache
      /******/var installedModules = {};
      /******/
      /******/ // The require function
      /******/function __webpack_require__(moduleId) {
        /******/
        /******/ // Check if module is in cache
        /******/if (installedModules[moduleId]) {
          /******/return installedModules[moduleId].exports;
          /******/}
        /******/ // Create a new module (and put it into the cache)
        /******/var module = installedModules[moduleId] = {
          /******/i: moduleId,
          /******/l: false,
          /******/exports: {}
          /******/ };
        /******/
        /******/ // Execute the module function
        /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/
        /******/ // Flag the module as loaded
        /******/module.l = true;
        /******/
        /******/ // Return the exports of the module
        /******/return module.exports;
        /******/}
      /******/
      /******/
      /******/ // expose the modules object (__webpack_modules__)
      /******/__webpack_require__.m = modules;
      /******/
      /******/ // expose the module cache
      /******/__webpack_require__.c = installedModules;
      /******/
      /******/ // identity function for calling harmony imports with the correct context
      /******/__webpack_require__.i = function (value) {return value;};
      /******/
      /******/ // define getter function for harmony exports
      /******/__webpack_require__.d = function (exports, name, getter) {
        /******/if (!__webpack_require__.o(exports, name)) {
          /******/Object.defineProperty(exports, name, {
            /******/configurable: false,
            /******/enumerable: true,
            /******/get: getter
            /******/ });
          /******/}
        /******/};
      /******/
      /******/ // getDefaultExport function for compatibility with non-harmony modules
      /******/__webpack_require__.n = function (module) {
        /******/var getter = module && module.__esModule ?
        /******/function getDefault() {return module['default'];} :
        /******/function getModuleExports() {return module;};
        /******/__webpack_require__.d(getter, 'a', getter);
        /******/return getter;
        /******/};
      /******/
      /******/ // Object.prototype.hasOwnProperty.call
      /******/__webpack_require__.o = function (object, property) {return Object.prototype.hasOwnProperty.call(object, property);};
      /******/
      /******/ // __webpack_public_path__
      /******/__webpack_require__.p = "D:\\code\\cos-wx-sdk-v5\\demo\\lib";
      /******/
      /******/ // Load entry module and return exports
      /******/return __webpack_require__(__webpack_require__.s = 5);
      /******/}(
    /************************************************************************/
    /******/[
    /* 0 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";


      var md5 = __webpack_require__(8);
      var CryptoJS = __webpack_require__(6);
      var xml2json = __webpack_require__(10);
      var json2xml = __webpack_require__(7);
      var base64 = __webpack_require__(1);

      function camSafeUrlEncode(str) {
        return encodeURIComponent(str).
        replace(/!/g, '%21').
        replace(/'/g, '%27').
        replace(/\(/g, '%28').
        replace(/\)/g, '%29').
        replace(/\*/g, '%2A');
      }

      //测试用的key后面可以去掉
      var getAuth = function getAuth(opt) {
        opt = opt || {};

        var SecretId = opt.SecretId;
        var SecretKey = opt.SecretKey;
        var KeyTime = opt.KeyTime;
        var method = (opt.method || opt.Method || 'get').toLowerCase();
        var queryParams = clone(opt.Query || opt.params || {});
        var headers = clone(opt.Headers || opt.headers || {});
        var pathname = opt.Pathname || '/' + (opt.Key || '');

        if (!SecretId) return console.error('missing param SecretId');
        if (!SecretKey) return console.error('missing param SecretKey');

        var getObjectKeys = function getObjectKeys(obj) {
          var list = [];
          for (var key in obj) {
            if (obj.hasOwnProperty(key)) {
              list.push(key);
            }
          }
          return list.sort(function (a, b) {
            a = a.toLowerCase();
            b = b.toLowerCase();
            return a === b ? 0 : a > b ? 1 : -1;
          });
        };

        var obj2str = function obj2str(obj) {
          var i, key, val;
          var list = [];
          var keyList = getObjectKeys(obj);
          for (i = 0; i < keyList.length; i++) {
            key = keyList[i];
            val = obj[key] === undefined || obj[key] === null ? '' : '' + obj[key];
            key = key.toLowerCase();
            key = camSafeUrlEncode(key);
            val = camSafeUrlEncode(val) || '';
            list.push(key + '=' + val);
          }
          return list.join('&');
        };

        // 签名有效起止时间
        var now = Math.round(getSkewTime(opt.SystemClockOffset) / 1000) - 1;
        var exp = now;

        var Expires = opt.Expires || opt.expires;
        if (Expires === undefined) {
          exp += 900; // 签名过期时间为当前 + 900s
        } else {
          exp += Expires * 1 || 0;
        }

        // 要用到的 Authorization 参数列表
        var qSignAlgorithm = 'sha1';
        var qAk = SecretId;
        var qSignTime = KeyTime || now + ';' + exp;
        var qKeyTime = KeyTime || now + ';' + exp;
        var qHeaderList = getObjectKeys(headers).join(';').toLowerCase();
        var qUrlParamList = getObjectKeys(queryParams).join(';').toLowerCase();

        // 签名算法说明文档：https://www.qcloud.com/document/product/436/7778
        // 步骤一：计算 SignKey
        var signKey = CryptoJS.HmacSHA1(qKeyTime, SecretKey).toString();

        // 步骤二：构成 FormatString
        var formatString = [method, pathname, obj2str(queryParams), obj2str(headers), ''].join('\n');

        // 步骤三：计算 StringToSign
        var stringToSign = ['sha1', qSignTime, CryptoJS.SHA1(formatString).toString(), ''].join('\n');

        // 步骤四：计算 Signature
        var qSignature = CryptoJS.HmacSHA1(stringToSign, signKey).toString();

        // 步骤五：构造 Authorization
        var authorization = [
        'q-sign-algorithm=' + qSignAlgorithm,
        'q-ak=' + qAk,
        'q-sign-time=' + qSignTime,
        'q-key-time=' + qKeyTime,
        'q-header-list=' + qHeaderList,
        'q-url-param-list=' + qUrlParamList,
        'q-signature=' + qSignature].
        join('&');

        return authorization;

      };

      var noop = function noop() {

      };

      // 清除对象里值为的 undefined 或 null 的属性
      var clearKey = function clearKey(obj) {
        var retObj = {};
        for (var key in obj) {
          if (obj.hasOwnProperty(key) && obj[key] !== undefined && obj[key] !== null) {
            retObj[key] = obj[key];
          }
        }
        return retObj;
      };

      var readAsBinaryString = function readAsBinaryString(blob, callback) {
        var readFun;
        var fr = new FileReader();
        if (FileReader.prototype.readAsBinaryString) {
          readFun = FileReader.prototype.readAsBinaryString;
          fr.onload = function () {
            callback(this.result);
          };
        } else if (FileReader.prototype.readAsArrayBuffer) {// 在 ie11 添加 readAsBinaryString 兼容
          readFun = function readFun(fileData) {
            var binary = "";
            var pt = this;
            var reader = new FileReader();
            reader.onload = function (e) {
              var bytes = new Uint8Array(reader.result);
              var length = bytes.byteLength;
              for (var i = 0; i < length; i++) {
                binary += String.fromCharCode(bytes[i]);
              }
              callback(binary);
            };
            reader.readAsArrayBuffer(fileData);
          };
        } else {
          console.error('FileReader not support readAsBinaryString');
        }
        readFun.call(fr, blob);
      };

      // 获取文件 md5 值
      var getFileMd5 = function getFileMd5(blob, callback) {
        readAsBinaryString(blob, function (content) {
          var hash = md5(content, true);
          callback(null, hash);
        });
      };

      function clone(obj) {
        return map(obj, function (v) {
          return typeof v === 'object' ? clone(v) : v;
        });
      }

      function extend(target, source) {
        each(source, function (val, key) {
          target[key] = source[key];
        });
        return target;
      }

      function isArray(arr) {
        return arr instanceof Array;
      }

      function isInArray(arr, item) {
        var flag = false;
        for (var i = 0; i < arr.length; i++) {
          if (item === arr[i]) {
            flag = true;
            break;
          }
        }
        return flag;
      }

      function makeArray(arr) {
        return isArray(arr) ? arr : [arr];
      }

      function each(obj, fn) {
        for (var i in obj) {
          if (obj.hasOwnProperty(i)) {
            fn(obj[i], i);
          }
        }
      }

      function map(obj, fn) {
        var o = isArray(obj) ? [] : {};
        for (var i in obj) {
          if (obj.hasOwnProperty(i)) {
            o[i] = fn(obj[i], i);
          }
        }
        return o;
      }

      function filter(obj, fn) {
        var iaArr = isArray(obj);
        var o = iaArr ? [] : {};
        for (var i in obj) {
          if (obj.hasOwnProperty(i)) {
            if (fn(obj[i], i)) {
              if (iaArr) {
                o.push(obj[i]);
              } else {
                o[i] = obj[i];
              }
            }
          }
        }
        return o;
      }

      var binaryBase64 = function binaryBase64(str) {
        var i,len,_char,res = '';
        for (i = 0, len = str.length / 2; i < len; i++) {
          _char = parseInt(str[i * 2] + str[i * 2 + 1], 16);
          res += String.fromCharCode(_char);
        }
        return base64.btoa(res);
      };
      var uuid = function uuid() {
        var S4 = function S4() {
          return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);
        };
        return S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4();
      };

      var hasMissingParams = function hasMissingParams(apiName, params) {
        var Bucket = params.Bucket;
        var Region = params.Region;
        var Key = params.Key;
        if (apiName.indexOf('Bucket') > -1 || apiName === 'deleteMultipleObject' || apiName === 'multipartList' || apiName === 'listObjectVersions') {
          if (!Bucket) return 'Bucket';
          if (!Region) return 'Region';
        } else if (apiName.indexOf('Object') > -1 || apiName.indexOf('multipart') > -1 || apiName === 'sliceUploadFile' || apiName === 'abortUploadTask') {
          if (!Bucket) return 'Bucket';
          if (!Region) return 'Region';
          if (!Key) return 'Key';
        }
        return false;
      };

      var formatParams = function formatParams(apiName, params) {

        // 复制参数对象
        params = extend({}, params);

        // 统一处理 Headers
        if (apiName !== 'getAuth' && apiName !== 'getV4Auth' && apiName !== 'getObjectUrl') {
          var Headers = params.Headers || {};
          if (params && typeof params === 'object') {
            (function () {
              for (var key in params) {
                if (params.hasOwnProperty(key) && key.indexOf('x-cos-') > -1) {
                  Headers[key] = params[key];
                }
              }
            })();

            var headerMap = {
              // params headers
              'x-cos-mfa': 'MFA',
              'Content-MD5': 'ContentMD5',
              'Content-Length': 'ContentLength',
              'Content-Type': 'ContentType',
              'Expect': 'Expect',
              'Expires': 'Expires',
              'Cache-Control': 'CacheControl',
              'Content-Disposition': 'ContentDisposition',
              'Content-Encoding': 'ContentEncoding',
              'Range': 'Range',
              'If-Modified-Since': 'IfModifiedSince',
              'If-Unmodified-Since': 'IfUnmodifiedSince',
              'If-Match': 'IfMatch',
              'If-None-Match': 'IfNoneMatch',
              'x-cos-copy-source': 'CopySource',
              'x-cos-copy-source-Range': 'CopySourceRange',
              'x-cos-metadata-directive': 'MetadataDirective',
              'x-cos-copy-source-If-Modified-Since': 'CopySourceIfModifiedSince',
              'x-cos-copy-source-If-Unmodified-Since': 'CopySourceIfUnmodifiedSince',
              'x-cos-copy-source-If-Match': 'CopySourceIfMatch',
              'x-cos-copy-source-If-None-Match': 'CopySourceIfNoneMatch',
              'x-cos-acl': 'ACL',
              'x-cos-grant-read': 'GrantRead',
              'x-cos-grant-write': 'GrantWrite',
              'x-cos-grant-full-control': 'GrantFullControl',
              'x-cos-grant-read-acp': 'GrantReadAcp',
              'x-cos-grant-write-acp': 'GrantWriteAcp',
              'x-cos-storage-class': 'StorageClass',
              // SSE-C
              'x-cos-server-side-encryption-customer-algorithm': 'SSECustomerAlgorithm',
              'x-cos-server-side-encryption-customer-key': 'SSECustomerKey',
              'x-cos-server-side-encryption-customer-key-MD5': 'SSECustomerKeyMD5',
              // SSE-COS、SSE-KMS
              'x-cos-server-side-encryption': 'ServerSideEncryption',
              'x-cos-server-side-encryption-cos-kms-key-id': 'SSEKMSKeyId',
              'x-cos-server-side-encryption-context': 'SSEContext' };

            util.each(headerMap, function (paramKey, headerKey) {
              if (params[paramKey] !== undefined) {
                Headers[headerKey] = params[paramKey];
              }
            });

            params.Headers = clearKey(Headers);
          }
        }

        return params;
      };

      var apiWrapper = function apiWrapper(apiName, apiFn) {
        return function (params, callback) {

          // 处理参数
          if (typeof params === 'function') {
            callback = params;
            params = {};
          }

          // 整理参数格式
          params = formatParams(apiName, params);

          // 代理回调函数
          var formatResult = function formatResult(result) {
            if (result && result.headers) {
              result.headers['x-cos-version-id'] && (result.VersionId = result.headers['x-cos-version-id']);
              result.headers['x-cos-delete-marker'] && (result.DeleteMarker = result.headers['x-cos-delete-marker']);
            }
            return result;
          };
          var _callback = function _callback(err, data) {
            callback && callback(formatResult(err), formatResult(data));
          };

          if (apiName !== 'getService' && apiName !== 'abortUploadTask') {
            // 判断参数是否完整
            var missingResult;
            if (missingResult = hasMissingParams(apiName, params)) {
              _callback({ error: 'missing param ' + missingResult });
              return;
            }
            // 判断 region 格式
            if (params.Region) {
              if (params.Region.indexOf('cos.') > -1) {
                _callback({ error: 'param Region should not be start with "cos."' });
                return;
              } else if (!/^([a-z\d-]+)$/.test(params.Region)) {
                _callback({ error: 'Region format error.' });
                return;
              }
              // 判断 region 格式
              if (!this.options.CompatibilityMode && params.Region.indexOf('-') === -1 && params.Region !== 'yfb' && params.Region !== 'default') {
                console.warn('warning: param Region format error, find help here: https://cloud.tencent.com/document/product/436/6224');
              }
            }
            // 兼容不带 AppId 的 Bucket
            if (params.Bucket) {
              if (!/^([a-z\d-]+)-(\d+)$/.test(params.Bucket)) {
                if (params.AppId) {
                  params.Bucket = params.Bucket + '-' + params.AppId;
                } else if (this.options.AppId) {
                  params.Bucket = params.Bucket + '-' + this.options.AppId;
                } else {
                  _callback({ error: 'Bucket should format as "test-1250000000".' });
                  return;
                }
              }
              if (params.AppId) {
                console.warn('warning: AppId has been deprecated, Please put it at the end of parameter Bucket(E.g Bucket:"test-1250000000" ).');
                delete params.AppId;
              }
            }
          }
          var res = apiFn.call(this, params, _callback);
          if (apiName === 'getAuth' || apiName === 'getObjectUrl') {
            return res;
          }
        };
      };

      var throttleOnProgress = function throttleOnProgress(total, onProgress) {

        if (!onProgress || typeof onProgress !== 'function') return noop;
        var self = this;
        var size0 = 0;
        var size1 = 0;
        var time0 = Date.now();
        var time1;
        var timer;

        function update() {
          clearTimeout(timer);
          timer = 0;
          time1 = Date.now();
          var speed = Math.max(0, Math.round((size1 - size0) / ((time1 - time0) / 1000) * 100) / 100);
          var percent;
          if (size1 === 0 && total === 0) {
            percent = 1;
          } else {
            percent = Math.round(size1 / total * 100) / 100 || 0;
          }
          time0 = time1;
          size0 = size1;
          try {
            onProgress({ loaded: size1, total: total, speed: speed, percent: percent });
          } catch (e) {
          }
        }

        return function (info, immediately) {
          if (info) {
            size1 = info.loaded;
            total = info.total;
          }
          if (Date.now() - time0 > self.options.ProgressInterval || immediately) {
            update();
          } else {
            if (timer) return;
            timer = setTimeout(update, self.options.ProgressInterval);
          }
        };
      };

      var getFileSize = function getFileSize(api, params, callback) {
        var size;
        if (typeof params.Body === 'string') {
          params.Body = new Blob([params.Body], { type: 'text/plain' });
        }
        if (params.Body && (params.Body instanceof Blob || params.Body.toString() === '[object File]' || params.Body.toString() === '[object Blob]')) {
          size = params.Body.size;
        } else {
          callback({ error: 'params body format error, Only allow File|Blob|String.' });
          return;
        }
        params.ContentLength = size;
        callback(null, size);
      };

      var getSkewTime = function getSkewTime(offset) {
        return Date.now() + (offset || 0);
      };

      var util = {
        noop: noop,
        formatParams: formatParams,
        apiWrapper: apiWrapper,
        xml2json: xml2json,
        json2xml: json2xml,
        md5: md5,
        clearKey: clearKey,
        getFileMd5: getFileMd5,
        binaryBase64: binaryBase64,
        extend: extend,
        isArray: isArray,
        isInArray: isInArray,
        makeArray: makeArray,
        each: each,
        map: map,
        filter: filter,
        clone: clone,
        uuid: uuid,
        camSafeUrlEncode: camSafeUrlEncode,
        throttleOnProgress: throttleOnProgress,
        getFileSize: getFileSize,
        getSkewTime: getSkewTime,
        getAuth: getAuth,
        isBrowser: true };


      util.fileSlice = function (file, start, end) {
        if (file.slice) {
          return file.slice(start, end);
        } else if (file.mozSlice) {
          return file.mozSlice(start, end);
        } else if (file.webkitSlice) {
          return file.webkitSlice(start, end);
        }
      };
      util.getFileUUID = function (file, ChunkSize) {
        // 如果信息不完整，不获取
        if (file.name && file.size && file.lastModifiedDate && ChunkSize) {
          return util.md5([file.name, file.size, file.lastModifiedDate, ChunkSize].join('::'));
        } else {
          return null;
        }
      };
      util.getBodyMd5 = function (UploadCheckContentMd5, Body, callback) {
        callback = callback || noop;
        if (UploadCheckContentMd5) {
          if (typeof Body === 'string') {
            callback(util.md5(Body, true));
          } else {
            callback();
          }
        } else {
          callback();
        }
      };

      module.exports = util;


      /***/},
    /* 1 */
    /***/function (module, exports) {

      /*
                                      * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $
                                      *
                                      *  Licensed under the BSD 3-Clause License.
                                      *    http://opensource.org/licenses/BSD-3-Clause
                                      *
                                      *  References:
                                      *    http://en.wikipedia.org/wiki/Base64
                                      */

      var Base64 = function (global) {
        global = global || {};
        'use strict';
        // existing version for noConflict()
        var _Base64 = global.Base64;
        var version = "2.1.9";
        // if node.js, we use Buffer
        var buffer;
        // constants
        var b64chars =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
        var b64tab = function (bin) {
          var t = {};
          for (var i = 0, l = bin.length; i < l; i++) {t[bin.charAt(i)] = i;}
          return t;
        }(b64chars);
        var fromCharCode = String.fromCharCode;
        // encoder stuff
        var cb_utob = function cb_utob(c) {
          if (c.length < 2) {
            var cc = c.charCodeAt(0);
            return cc < 0x80 ? c :
            cc < 0x800 ? fromCharCode(0xc0 | cc >>> 6) +
            fromCharCode(0x80 | cc & 0x3f) :
            fromCharCode(0xe0 | cc >>> 12 & 0x0f) +
            fromCharCode(0x80 | cc >>> 6 & 0x3f) +
            fromCharCode(0x80 | cc & 0x3f);
          } else {
            var cc = 0x10000 +
            (c.charCodeAt(0) - 0xD800) * 0x400 + (
            c.charCodeAt(1) - 0xDC00);
            return fromCharCode(0xf0 | cc >>> 18 & 0x07) +
            fromCharCode(0x80 | cc >>> 12 & 0x3f) +
            fromCharCode(0x80 | cc >>> 6 & 0x3f) +
            fromCharCode(0x80 | cc & 0x3f);
          }
        };
        var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
        var utob = function utob(u) {
          return u.replace(re_utob, cb_utob);
        };
        var cb_encode = function cb_encode(ccc) {
          var padlen = [0, 2, 1][ccc.length % 3],
          ord = ccc.charCodeAt(0) << 16 |
          (ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8 | (
          ccc.length > 2 ? ccc.charCodeAt(2) : 0),
          chars = [
          b64chars.charAt(ord >>> 18),
          b64chars.charAt(ord >>> 12 & 63),
          padlen >= 2 ? '=' : b64chars.charAt(ord >>> 6 & 63),
          padlen >= 1 ? '=' : b64chars.charAt(ord & 63)];

          return chars.join('');
        };
        var btoa = global.btoa ? function (b) {
          return global.btoa(b);
        } : function (b) {
          return b.replace(/[\s\S]{1,3}/g, cb_encode);
        };
        var _encode = buffer ? function (u) {
          return (u.constructor === buffer.constructor ? u : new buffer(u)).
          toString('base64');
        } :
        function (u) {return btoa(utob(u));};

        var encode = function encode(u, urisafe) {
          return !urisafe ?
          _encode(String(u)) :
          _encode(String(u)).replace(/[+\/]/g, function (m0) {
            return m0 == '+' ? '-' : '_';
          }).replace(/=/g, '');
        };
        var encodeURI = function encodeURI(u) {return encode(u, true);};
        // decoder stuff
        var re_btou = new RegExp([
        '[\xC0-\xDF][\x80-\xBF]',
        '[\xE0-\xEF][\x80-\xBF]{2}',
        '[\xF0-\xF7][\x80-\xBF]{3}'].
        join('|'), 'g');
        var cb_btou = function cb_btou(cccc) {
          switch (cccc.length) {
            case 4:
              var cp = (0x07 & cccc.charCodeAt(0)) << 18 |
              (0x3f & cccc.charCodeAt(1)) << 12 |
              (0x3f & cccc.charCodeAt(2)) << 6 |
              0x3f & cccc.charCodeAt(3),
              offset = cp - 0x10000;
              return fromCharCode((offset >>> 10) + 0xD800) +
              fromCharCode((offset & 0x3FF) + 0xDC00);
            case 3:
              return fromCharCode(
              (0x0f & cccc.charCodeAt(0)) << 12 |
              (0x3f & cccc.charCodeAt(1)) << 6 |
              0x3f & cccc.charCodeAt(2));

            default:
              return fromCharCode(
              (0x1f & cccc.charCodeAt(0)) << 6 |
              0x3f & cccc.charCodeAt(1));}


        };
        var btou = function btou(b) {
          return b.replace(re_btou, cb_btou);
        };
        var cb_decode = function cb_decode(cccc) {
          var len = cccc.length,
          padlen = len % 4,
          n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0) | (
          len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0) | (
          len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0) | (
          len > 3 ? b64tab[cccc.charAt(3)] : 0),
          chars = [
          fromCharCode(n >>> 16),
          fromCharCode(n >>> 8 & 0xff),
          fromCharCode(n & 0xff)];

          chars.length -= [0, 0, 2, 1][padlen];
          return chars.join('');
        };
        var atob = global.atob ? function (a) {
          return global.atob(a);
        } : function (a) {
          return a.replace(/[\s\S]{1,4}/g, cb_decode);
        };
        var _decode = buffer ? function (a) {
          return (a.constructor === buffer.constructor ?
          a : new buffer(a, 'base64')).toString();
        } :
        function (a) {return btou(atob(a));};
        var decode = function decode(a) {
          return _decode(
          String(a).replace(/[-_]/g, function (m0) {return m0 == '-' ? '+' : '/';}).
          replace(/[^A-Za-z0-9\+\/]/g, ''));

        };
        var noConflict = function noConflict() {
          var Base64 = global.Base64;
          global.Base64 = _Base64;
          return Base64;
        };
        // export Base64
        var Base64 = {
          VERSION: version,
          atob: atob,
          btoa: btoa,
          fromBase64: decode,
          toBase64: encode,
          utob: utob,
          encode: encode,
          encodeURI: encodeURI,
          btou: btou,
          decode: decode,
          noConflict: noConflict };

        return Base64;
      }();

      module.exports = Base64;



      /***/},
    /* 2 */
    /***/function (module, exports) {

      /*
                                      * DOM Level 2
                                      * Object DOMException
                                      * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html
                                      * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
                                      */

      function copy(src, dest) {
        for (var p in src) {
          dest[p] = src[p];
        }
      }
      /**
        ^\w+\.prototype\.([_\w]+)\s*=\s*((?:.*\{\s*?[\r\n][\s\S]*?^})|\S.*?(?=[;\r\n]));?
        ^\w+\.prototype\.([_\w]+)\s*=\s*(\S.*?(?=[;\r\n]));?
         */
      function _extends(Class, Super) {
        var pt = Class.prototype;
        if (Object.create) {
          var ppt = Object.create(Super.prototype);
          pt.__proto__ = ppt;
        }
        if (!(pt instanceof Super)) {var
          t = function t() {};;
          t.prototype = Super.prototype;
          t = new t();
          copy(pt, t);
          Class.prototype = pt = t;
        }
        if (pt.constructor != Class) {
          if (typeof Class != 'function') {
            console.error("unknow Class:" + Class);
          }
          pt.constructor = Class;
        }
      }
      var htmlns = 'http://www.w3.org/1999/xhtml';
      // Node Types
      var NodeType = {};
      var ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;
      var ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;
      var TEXT_NODE = NodeType.TEXT_NODE = 3;
      var CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;
      var ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;
      var ENTITY_NODE = NodeType.ENTITY_NODE = 6;
      var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;
      var COMMENT_NODE = NodeType.COMMENT_NODE = 8;
      var DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;
      var DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;
      var DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;
      var NOTATION_NODE = NodeType.NOTATION_NODE = 12;

      // ExceptionCode
      var ExceptionCode = {};
      var ExceptionMessage = {};
      var INDEX_SIZE_ERR = ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = "Index size error", 1);
      var DOMSTRING_SIZE_ERR = ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = "DOMString size error", 2);
      var HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = "Hierarchy request error", 3);
      var WRONG_DOCUMENT_ERR = ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = "Wrong document", 4);
      var INVALID_CHARACTER_ERR = ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = "Invalid character", 5);
      var NO_DATA_ALLOWED_ERR = ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = "No data allowed", 6);
      var NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = "No modification allowed", 7);
      var NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = "Not found", 8);
      var NOT_SUPPORTED_ERR = ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = "Not supported", 9);
      var INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = "Attribute in use", 10);
      //level2
      var INVALID_STATE_ERR = ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = "Invalid state", 11);
      var SYNTAX_ERR = ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = "Syntax error", 12);
      var INVALID_MODIFICATION_ERR = ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = "Invalid modification", 13);
      var NAMESPACE_ERR = ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = "Invalid namespace", 14);
      var INVALID_ACCESS_ERR = ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = "Invalid access", 15);


      function DOMException(code, message) {
        if (message instanceof Error) {
          var error = message;
        } else {
          error = this;
          Error.call(this, ExceptionMessage[code]);
          this.message = ExceptionMessage[code];
          if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);
        }
        error.code = code;
        if (message) this.message = this.message + ": " + message;
        return error;
      };
      DOMException.prototype = Error.prototype;
      copy(ExceptionCode, DOMException);
      /**
                                          * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177
                                          * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.
                                          * The items in the NodeList are accessible via an integral index, starting from 0.
                                          */
      function NodeList() {
      };
      NodeList.prototype = {
        /**
                              * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.
                              * @standard level1
                              */
        length: 0,
        /**
                    * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
                    * @standard level1
                    * @param index  unsigned long 
                    *   Index into the collection.
                    * @return Node
                    * 	The node at the indexth position in the NodeList, or null if that is not a valid index. 
                    */
        item: function item(index) {
          return this[index] || null;
        },
        toString: function toString(isHTML, nodeFilter) {
          for (var buf = [], i = 0; i < this.length; i++) {
            serializeToString(this[i], buf, isHTML, nodeFilter);
          }
          return buf.join('');
        } };

      function LiveNodeList(node, refresh) {
        this._node = node;
        this._refresh = refresh;
        _updateLiveList(this);
      }
      function _updateLiveList(list) {
        var inc = list._node._inc || list._node.ownerDocument._inc;
        if (list._inc != inc) {
          var ls = list._refresh(list._node);
          //console.log(ls.length)
          __set__(list, 'length', ls.length);
          copy(ls, list);
          list._inc = inc;
        }
      }
      LiveNodeList.prototype.item = function (i) {
        _updateLiveList(this);
        return this[i];
      };

      _extends(LiveNodeList, NodeList);
      /**
                                         * 
                                         * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.
                                         * NamedNodeMap objects in the DOM are live.
                                         * used for attributes or DocumentType entities 
                                         */
      function NamedNodeMap() {
      };

      function _findNodeIndex(list, node) {
        var i = list.length;
        while (i--) {
          if (list[i] === node) {return i;}
        }
      }

      function _addNamedNode(el, list, newAttr, oldAttr) {
        if (oldAttr) {
          list[_findNodeIndex(list, oldAttr)] = newAttr;
        } else {
          list[list.length++] = newAttr;
        }
        if (el) {
          newAttr.ownerElement = el;
          var doc = el.ownerDocument;
          if (doc) {
            oldAttr && _onRemoveAttribute(doc, el, oldAttr);
            _onAddAttribute(doc, el, newAttr);
          }
        }
      }
      function _removeNamedNode(el, list, attr) {
        //console.log('remove attr:'+attr)
        var i = _findNodeIndex(list, attr);
        if (i >= 0) {
          var lastIndex = list.length - 1;
          while (i < lastIndex) {
            list[i] = list[++i];
          }
          list.length = lastIndex;
          if (el) {
            var doc = el.ownerDocument;
            if (doc) {
              _onRemoveAttribute(doc, el, attr);
              attr.ownerElement = null;
            }
          }
        } else {
          throw DOMException(NOT_FOUND_ERR, new Error(el.tagName + '@' + attr));
        }
      }
      NamedNodeMap.prototype = {
        length: 0,
        item: NodeList.prototype.item,
        getNamedItem: function getNamedItem(key) {
          //		if(key.indexOf(':')>0 || key == 'xmlns'){
          //			return null;
          //		}
          //console.log()
          var i = this.length;
          while (i--) {
            var attr = this[i];
            //console.log(attr.nodeName,key)
            if (attr.nodeName == key) {
              return attr;
            }
          }
        },
        setNamedItem: function setNamedItem(attr) {
          var el = attr.ownerElement;
          if (el && el != this._ownerElement) {
            throw new DOMException(INUSE_ATTRIBUTE_ERR);
          }
          var oldAttr = this.getNamedItem(attr.nodeName);
          _addNamedNode(this._ownerElement, this, attr, oldAttr);
          return oldAttr;
        },
        /* returns Node */
        setNamedItemNS: function setNamedItemNS(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR
          var el = attr.ownerElement,oldAttr;
          if (el && el != this._ownerElement) {
            throw new DOMException(INUSE_ATTRIBUTE_ERR);
          }
          oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);
          _addNamedNode(this._ownerElement, this, attr, oldAttr);
          return oldAttr;
        },

        /* returns Node */
        removeNamedItem: function removeNamedItem(key) {
          var attr = this.getNamedItem(key);
          _removeNamedNode(this._ownerElement, this, attr);
          return attr;


        }, // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR

        //for level2
        removeNamedItemNS: function removeNamedItemNS(namespaceURI, localName) {
          var attr = this.getNamedItemNS(namespaceURI, localName);
          _removeNamedNode(this._ownerElement, this, attr);
          return attr;
        },
        getNamedItemNS: function getNamedItemNS(namespaceURI, localName) {
          var i = this.length;
          while (i--) {
            var node = this[i];
            if (node.localName == localName && node.namespaceURI == namespaceURI) {
              return node;
            }
          }
          return null;
        } };

      /**
              * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490
              */
      function DOMImplementation( /* Object */features) {
        this._features = {};
        if (features) {
          for (var feature in features) {
            this._features = features[feature];
          }
        }
      };

      DOMImplementation.prototype = {
        hasFeature: function hasFeature( /* string */feature, /* string */version) {
          var versions = this._features[feature.toLowerCase()];
          if (versions && (!version || version in versions)) {
            return true;
          } else {
            return false;
          }
        },
        // Introduced in DOM Level 2:
        createDocument: function createDocument(namespaceURI, qualifiedName, doctype) {// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR
          var doc = new Document();
          doc.implementation = this;
          doc.childNodes = new NodeList();
          doc.doctype = doctype;
          if (doctype) {
            doc.appendChild(doctype);
          }
          if (qualifiedName) {
            var root = doc.createElementNS(namespaceURI, qualifiedName);
            doc.appendChild(root);
          }
          return doc;
        },
        // Introduced in DOM Level 2:
        createDocumentType: function createDocumentType(qualifiedName, publicId, systemId) {// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR
          var node = new DocumentType();
          node.name = qualifiedName;
          node.nodeName = qualifiedName;
          node.publicId = publicId;
          node.systemId = systemId;
          // Introduced in DOM Level 2:
          //readonly attribute DOMString        internalSubset;

          //TODO:..
          //  readonly attribute NamedNodeMap     entities;
          //  readonly attribute NamedNodeMap     notations;
          return node;
        } };



      /**
              * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247
              */

      function Node() {
      };

      Node.prototype = {
        firstChild: null,
        lastChild: null,
        previousSibling: null,
        nextSibling: null,
        attributes: null,
        parentNode: null,
        childNodes: null,
        ownerDocument: null,
        nodeValue: null,
        namespaceURI: null,
        prefix: null,
        localName: null,
        // Modified in DOM Level 2:
        insertBefore: function insertBefore(newChild, refChild) {//raises 
          return _insertBefore(this, newChild, refChild);
        },
        replaceChild: function replaceChild(newChild, oldChild) {//raises 
          this.insertBefore(newChild, oldChild);
          if (oldChild) {
            this.removeChild(oldChild);
          }
        },
        removeChild: function removeChild(oldChild) {
          return _removeChild(this, oldChild);
        },
        appendChild: function appendChild(newChild) {
          return this.insertBefore(newChild, null);
        },
        hasChildNodes: function hasChildNodes() {
          return this.firstChild != null;
        },
        cloneNode: function cloneNode(deep) {
          return _cloneNode(this.ownerDocument || this, this, deep);
        },
        // Modified in DOM Level 2:
        normalize: function normalize() {
          var child = this.firstChild;
          while (child) {
            var next = child.nextSibling;
            if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {
              this.removeChild(next);
              child.appendData(next.data);
            } else {
              child.normalize();
              child = next;
            }
          }
        },
        // Introduced in DOM Level 2:
        isSupported: function isSupported(feature, version) {
          return this.ownerDocument.implementation.hasFeature(feature, version);
        },
        // Introduced in DOM Level 2:
        hasAttributes: function hasAttributes() {
          return this.attributes.length > 0;
        },
        lookupPrefix: function lookupPrefix(namespaceURI) {
          var el = this;
          while (el) {
            var map = el._nsMap;
            //console.dir(map)
            if (map) {
              for (var n in map) {
                if (map[n] == namespaceURI) {
                  return n;
                }
              }
            }
            el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;
          }
          return null;
        },
        // Introduced in DOM Level 3:
        lookupNamespaceURI: function lookupNamespaceURI(prefix) {
          var el = this;
          while (el) {
            var map = el._nsMap;
            //console.dir(map)
            if (map) {
              if (prefix in map) {
                return map[prefix];
              }
            }
            el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;
          }
          return null;
        },
        // Introduced in DOM Level 3:
        isDefaultNamespace: function isDefaultNamespace(namespaceURI) {
          var prefix = this.lookupPrefix(namespaceURI);
          return prefix == null;
        } };



      function _xmlEncoder(c) {
        return c == '<' && '&lt;' ||
        c == '>' && '&gt;' ||
        c == '&' && '&amp;' ||
        c == '"' && '&quot;' ||
        '&#' + c.charCodeAt() + ';';
      }


      copy(NodeType, Node);
      copy(NodeType, Node.prototype);

      /**
                                       * @param callback return true for continue,false for break
                                       * @return boolean true: break visit;
                                       */
      function _visitNode(node, callback) {
        if (callback(node)) {
          return true;
        }
        if (node = node.firstChild) {
          do {
            if (_visitNode(node, callback)) {return true;}
          } while (node = node.nextSibling);
        }
      }



      function Document() {
      }
      function _onAddAttribute(doc, el, newAttr) {
        doc && doc._inc++;
        var ns = newAttr.namespaceURI;
        if (ns == 'http://www.w3.org/2000/xmlns/') {
          //update namespace
          el._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;
        }
      }
      function _onRemoveAttribute(doc, el, newAttr, remove) {
        doc && doc._inc++;
        var ns = newAttr.namespaceURI;
        if (ns == 'http://www.w3.org/2000/xmlns/') {
          //update namespace
          delete el._nsMap[newAttr.prefix ? newAttr.localName : ''];
        }
      }
      function _onUpdateChild(doc, el, newChild) {
        if (doc && doc._inc) {
          doc._inc++;
          //update childNodes
          var cs = el.childNodes;
          if (newChild) {
            cs[cs.length++] = newChild;
          } else {
            //console.log(1)
            var child = el.firstChild;
            var i = 0;
            while (child) {
              cs[i++] = child;
              child = child.nextSibling;
            }
            cs.length = i;
          }
        }
      }

      /**
         * attributes;
         * children;
         * 
         * writeable properties:
         * nodeValue,Attr:value,CharacterData:data
         * prefix
         */
      function _removeChild(parentNode, child) {
        var previous = child.previousSibling;
        var next = child.nextSibling;
        if (previous) {
          previous.nextSibling = next;
        } else {
          parentNode.firstChild = next;
        }
        if (next) {
          next.previousSibling = previous;
        } else {
          parentNode.lastChild = previous;
        }
        _onUpdateChild(parentNode.ownerDocument, parentNode);
        return child;
      }
      /**
         * preformance key(refChild == null)
         */
      function _insertBefore(parentNode, newChild, nextChild) {
        var cp = newChild.parentNode;
        if (cp) {
          cp.removeChild(newChild); //remove and update
        }
        if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {
          var newFirst = newChild.firstChild;
          if (newFirst == null) {
            return newChild;
          }
          var newLast = newChild.lastChild;
        } else {
          newFirst = newLast = newChild;
        }
        var pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;

        newFirst.previousSibling = pre;
        newLast.nextSibling = nextChild;


        if (pre) {
          pre.nextSibling = newFirst;
        } else {
          parentNode.firstChild = newFirst;
        }
        if (nextChild == null) {
          parentNode.lastChild = newLast;
        } else {
          nextChild.previousSibling = newLast;
        }
        do {
          newFirst.parentNode = parentNode;
        } while (newFirst !== newLast && (newFirst = newFirst.nextSibling));
        _onUpdateChild(parentNode.ownerDocument || parentNode, parentNode);
        //console.log(parentNode.lastChild.nextSibling == null)
        if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {
          newChild.firstChild = newChild.lastChild = null;
        }
        return newChild;
      }
      function _appendSingleChild(parentNode, newChild) {
        var cp = newChild.parentNode;
        if (cp) {
          var pre = parentNode.lastChild;
          cp.removeChild(newChild); //remove and update
          var pre = parentNode.lastChild;
        }
        var pre = parentNode.lastChild;
        newChild.parentNode = parentNode;
        newChild.previousSibling = pre;
        newChild.nextSibling = null;
        if (pre) {
          pre.nextSibling = newChild;
        } else {
          parentNode.firstChild = newChild;
        }
        parentNode.lastChild = newChild;
        _onUpdateChild(parentNode.ownerDocument, parentNode, newChild);
        return newChild;
        //console.log("__aa",parentNode.lastChild.nextSibling == null)
      }
      Document.prototype = {
        //implementation : null,
        nodeName: '#document',
        nodeType: DOCUMENT_NODE,
        doctype: null,
        documentElement: null,
        _inc: 1,

        insertBefore: function insertBefore(newChild, refChild) {//raises 
          if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {
            var child = newChild.firstChild;
            while (child) {
              var next = child.nextSibling;
              this.insertBefore(child, refChild);
              child = next;
            }
            return newChild;
          }
          if (this.documentElement == null && newChild.nodeType == ELEMENT_NODE) {
            this.documentElement = newChild;
          }

          return _insertBefore(this, newChild, refChild), newChild.ownerDocument = this, newChild;
        },
        removeChild: function removeChild(oldChild) {
          if (this.documentElement == oldChild) {
            this.documentElement = null;
          }
          return _removeChild(this, oldChild);
        },
        // Introduced in DOM Level 2:
        importNode: function importNode(importedNode, deep) {
          return _importNode(this, importedNode, deep);
        },
        // Introduced in DOM Level 2:
        getElementById: function getElementById(id) {
          var rtv = null;
          _visitNode(this.documentElement, function (node) {
            if (node.nodeType == ELEMENT_NODE) {
              if (node.getAttribute('id') == id) {
                rtv = node;
                return true;
              }
            }
          });
          return rtv;
        },

        //document factory method:
        createElement: function createElement(tagName) {
          var node = new Element();
          node.ownerDocument = this;
          node.nodeName = tagName;
          node.tagName = tagName;
          node.childNodes = new NodeList();
          var attrs = node.attributes = new NamedNodeMap();
          attrs._ownerElement = node;
          return node;
        },
        createDocumentFragment: function createDocumentFragment() {
          var node = new DocumentFragment();
          node.ownerDocument = this;
          node.childNodes = new NodeList();
          return node;
        },
        createTextNode: function createTextNode(data) {
          var node = new Text();
          node.ownerDocument = this;
          node.appendData(data);
          return node;
        },
        createComment: function createComment(data) {
          var node = new Comment();
          node.ownerDocument = this;
          node.appendData(data);
          return node;
        },
        createCDATASection: function createCDATASection(data) {
          var node = new CDATASection();
          node.ownerDocument = this;
          node.appendData(data);
          return node;
        },
        createProcessingInstruction: function createProcessingInstruction(target, data) {
          var node = new ProcessingInstruction();
          node.ownerDocument = this;
          node.tagName = node.target = target;
          node.nodeValue = node.data = data;
          return node;
        },
        createAttribute: function createAttribute(name) {
          var node = new Attr();
          node.ownerDocument = this;
          node.name = name;
          node.nodeName = name;
          node.localName = name;
          node.specified = true;
          return node;
        },
        createEntityReference: function createEntityReference(name) {
          var node = new EntityReference();
          node.ownerDocument = this;
          node.nodeName = name;
          return node;
        },
        // Introduced in DOM Level 2:
        createElementNS: function createElementNS(namespaceURI, qualifiedName) {
          var node = new Element();
          var pl = qualifiedName.split(':');
          var attrs = node.attributes = new NamedNodeMap();
          node.childNodes = new NodeList();
          node.ownerDocument = this;
          node.nodeName = qualifiedName;
          node.tagName = qualifiedName;
          node.namespaceURI = namespaceURI;
          if (pl.length == 2) {
            node.prefix = pl[0];
            node.localName = pl[1];
          } else {
            //el.prefix = null;
            node.localName = qualifiedName;
          }
          attrs._ownerElement = node;
          return node;
        },
        // Introduced in DOM Level 2:
        createAttributeNS: function createAttributeNS(namespaceURI, qualifiedName) {
          var node = new Attr();
          var pl = qualifiedName.split(':');
          node.ownerDocument = this;
          node.nodeName = qualifiedName;
          node.name = qualifiedName;
          node.namespaceURI = namespaceURI;
          node.specified = true;
          if (pl.length == 2) {
            node.prefix = pl[0];
            node.localName = pl[1];
          } else {
            //el.prefix = null;
            node.localName = qualifiedName;
          }
          return node;
        } };

      _extends(Document, Node);


      function Element() {
        this._nsMap = {};
      };
      Element.prototype = {
        nodeType: ELEMENT_NODE,
        hasAttribute: function hasAttribute(name) {
          return this.getAttributeNode(name) != null;
        },
        getAttribute: function getAttribute(name) {
          var attr = this.getAttributeNode(name);
          return attr && attr.value || '';
        },
        getAttributeNode: function getAttributeNode(name) {
          return this.attributes.getNamedItem(name);
        },
        setAttribute: function setAttribute(name, value) {
          var attr = this.ownerDocument.createAttribute(name);
          attr.value = attr.nodeValue = "" + value;
          this.setAttributeNode(attr);
        },
        removeAttribute: function removeAttribute(name) {
          var attr = this.getAttributeNode(name);
          attr && this.removeAttributeNode(attr);
        },

        //four real opeartion method
        appendChild: function appendChild(newChild) {
          if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {
            return this.insertBefore(newChild, null);
          } else {
            return _appendSingleChild(this, newChild);
          }
        },
        setAttributeNode: function setAttributeNode(newAttr) {
          return this.attributes.setNamedItem(newAttr);
        },
        setAttributeNodeNS: function setAttributeNodeNS(newAttr) {
          return this.attributes.setNamedItemNS(newAttr);
        },
        removeAttributeNode: function removeAttributeNode(oldAttr) {
          //console.log(this == oldAttr.ownerElement)
          return this.attributes.removeNamedItem(oldAttr.nodeName);
        },
        //get real attribute name,and remove it by removeAttributeNode
        removeAttributeNS: function removeAttributeNS(namespaceURI, localName) {
          var old = this.getAttributeNodeNS(namespaceURI, localName);
          old && this.removeAttributeNode(old);
        },

        hasAttributeNS: function hasAttributeNS(namespaceURI, localName) {
          return this.getAttributeNodeNS(namespaceURI, localName) != null;
        },
        getAttributeNS: function getAttributeNS(namespaceURI, localName) {
          var attr = this.getAttributeNodeNS(namespaceURI, localName);
          return attr && attr.value || '';
        },
        setAttributeNS: function setAttributeNS(namespaceURI, qualifiedName, value) {
          var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);
          attr.value = attr.nodeValue = "" + value;
          this.setAttributeNode(attr);
        },
        getAttributeNodeNS: function getAttributeNodeNS(namespaceURI, localName) {
          return this.attributes.getNamedItemNS(namespaceURI, localName);
        },

        getElementsByTagName: function getElementsByTagName(tagName) {
          return new LiveNodeList(this, function (base) {
            var ls = [];
            _visitNode(base, function (node) {
              if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)) {
                ls.push(node);
              }
            });
            return ls;
          });
        },
        getElementsByTagNameNS: function getElementsByTagNameNS(namespaceURI, localName) {
          return new LiveNodeList(this, function (base) {
            var ls = [];
            _visitNode(base, function (node) {
              if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)) {
                ls.push(node);
              }
            });
            return ls;

          });
        } };

      Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;
      Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;


      _extends(Element, Node);
      function Attr() {
      };
      Attr.prototype.nodeType = ATTRIBUTE_NODE;
      _extends(Attr, Node);


      function CharacterData() {
      };
      CharacterData.prototype = {
        data: '',
        substringData: function substringData(offset, count) {
          return this.data.substring(offset, offset + count);
        },
        appendData: function appendData(text) {
          text = this.data + text;
          this.nodeValue = this.data = text;
          this.length = text.length;
        },
        insertData: function insertData(offset, text) {
          this.replaceData(offset, 0, text);

        },
        appendChild: function appendChild(newChild) {
          throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);
        },
        deleteData: function deleteData(offset, count) {
          this.replaceData(offset, count, "");
        },
        replaceData: function replaceData(offset, count, text) {
          var start = this.data.substring(0, offset);
          var end = this.data.substring(offset + count);
          text = start + text + end;
          this.nodeValue = this.data = text;
          this.length = text.length;
        } };

      _extends(CharacterData, Node);
      function Text() {
      };
      Text.prototype = {
        nodeName: "#text",
        nodeType: TEXT_NODE,
        splitText: function splitText(offset) {
          var text = this.data;
          var newText = text.substring(offset);
          text = text.substring(0, offset);
          this.data = this.nodeValue = text;
          this.length = text.length;
          var newNode = this.ownerDocument.createTextNode(newText);
          if (this.parentNode) {
            this.parentNode.insertBefore(newNode, this.nextSibling);
          }
          return newNode;
        } };

      _extends(Text, CharacterData);
      function Comment() {
      };
      Comment.prototype = {
        nodeName: "#comment",
        nodeType: COMMENT_NODE };

      _extends(Comment, CharacterData);

      function CDATASection() {
      };
      CDATASection.prototype = {
        nodeName: "#cdata-section",
        nodeType: CDATA_SECTION_NODE };

      _extends(CDATASection, CharacterData);


      function DocumentType() {
      };
      DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;
      _extends(DocumentType, Node);

      function Notation() {
      };
      Notation.prototype.nodeType = NOTATION_NODE;
      _extends(Notation, Node);

      function Entity() {
      };
      Entity.prototype.nodeType = ENTITY_NODE;
      _extends(Entity, Node);

      function EntityReference() {
      };
      EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;
      _extends(EntityReference, Node);

      function DocumentFragment() {
      };
      DocumentFragment.prototype.nodeName = "#document-fragment";
      DocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;
      _extends(DocumentFragment, Node);


      function ProcessingInstruction() {
      }
      ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;
      _extends(ProcessingInstruction, Node);
      function XMLSerializer() {}
      XMLSerializer.prototype.serializeToString = function (node, isHtml, nodeFilter) {
        return nodeSerializeToString.call(node, isHtml, nodeFilter);
      };
      Node.prototype.toString = nodeSerializeToString;
      function nodeSerializeToString(isHtml, nodeFilter) {
        var buf = [];
        var refNode = this.nodeType == 9 ? this.documentElement : this;
        var prefix = refNode.prefix;
        var uri = refNode.namespaceURI;

        if (uri && prefix == null) {
          //console.log(prefix)
          var prefix = refNode.lookupPrefix(uri);
          if (prefix == null) {
            //isHTML = true;
            var visibleNamespaces = [
            { namespace: uri, prefix: null }
            //{namespace:uri,prefix:''}
            ];
          }
        }
        serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces);
        //console.log('###',this.nodeType,uri,prefix,buf.join(''))
        return buf.join('');
      }
      function needNamespaceDefine(node, isHTML, visibleNamespaces) {
        var prefix = node.prefix || '';
        var uri = node.namespaceURI;
        if (!prefix && !uri) {
          return false;
        }
        if (prefix === "xml" && uri === "http://www.w3.org/XML/1998/namespace" ||
        uri == 'http://www.w3.org/2000/xmlns/') {
          return false;
        }

        var i = visibleNamespaces.length;
        //console.log('@@@@',node.tagName,prefix,uri,visibleNamespaces)
        while (i--) {
          var ns = visibleNamespaces[i];
          // get namespace prefix
          //console.log(node.nodeType,node.tagName,ns.prefix,prefix)
          if (ns.prefix == prefix) {
            return ns.namespace != uri;
          }
        }
        //console.log(isHTML,uri,prefix=='')
        //if(isHTML && prefix ==null && uri == 'http://www.w3.org/1999/xhtml'){
        //	return false;
        //}
        //node.flag = '11111'
        //console.error(3,true,node.flag,node.prefix,node.namespaceURI)
        return true;
      }
      function serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {
        if (nodeFilter) {
          node = nodeFilter(node);
          if (node) {
            if (typeof node == 'string') {
              buf.push(node);
              return;
            }
          } else {
            return;
          }
          //buf.sort.apply(attrs, attributeSorter);
        }
        switch (node.nodeType) {
          case ELEMENT_NODE:
            if (!visibleNamespaces) visibleNamespaces = [];
            var startVisibleNamespaces = visibleNamespaces.length;
            var attrs = node.attributes;
            var len = attrs.length;
            var child = node.firstChild;
            var nodeName = node.tagName;

            isHTML = htmlns === node.namespaceURI || isHTML;
            buf.push('<', nodeName);



            for (var i = 0; i < len; i++) {
              // add namespaces for attributes
              var attr = attrs.item(i);
              if (attr.prefix == 'xmlns') {
                visibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });
              } else if (attr.nodeName == 'xmlns') {
                visibleNamespaces.push({ prefix: '', namespace: attr.value });
              }
            }
            for (var i = 0; i < len; i++) {
              var attr = attrs.item(i);
              if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {
                var prefix = attr.prefix || '';
                var uri = attr.namespaceURI;
                var ns = prefix ? ' xmlns:' + prefix : " xmlns";
                buf.push(ns, '="', uri, '"');
                visibleNamespaces.push({ prefix: prefix, namespace: uri });
              }
              serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);
            }
            // add namespace for current node		
            if (needNamespaceDefine(node, isHTML, visibleNamespaces)) {
              var prefix = node.prefix || '';
              var uri = node.namespaceURI;
              var ns = prefix ? ' xmlns:' + prefix : " xmlns";
              buf.push(ns, '="', uri, '"');
              visibleNamespaces.push({ prefix: prefix, namespace: uri });
            }

            if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {
              buf.push('>');
              //if is cdata child node
              if (isHTML && /^script$/i.test(nodeName)) {
                while (child) {
                  if (child.data) {
                    buf.push(child.data);
                  } else {
                    serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces);
                  }
                  child = child.nextSibling;
                }
              } else
              {
                while (child) {
                  serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces);
                  child = child.nextSibling;
                }
              }
              buf.push('</', nodeName, '>');
            } else {
              buf.push('/>');
            }
            // remove added visible namespaces
            //visibleNamespaces.length = startVisibleNamespaces;
            return;
          case DOCUMENT_NODE:
          case DOCUMENT_FRAGMENT_NODE:
            var child = node.firstChild;
            while (child) {
              serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces);
              child = child.nextSibling;
            }
            return;
          case ATTRIBUTE_NODE:
            return buf.push(' ', node.name, '="', node.value.replace(/[<&"]/g, _xmlEncoder), '"');
          case TEXT_NODE:
            return buf.push(node.data.replace(/[<&]/g, _xmlEncoder));
          case CDATA_SECTION_NODE:
            return buf.push('<![CDATA[', node.data, ']]>');
          case COMMENT_NODE:
            return buf.push("<!--", node.data, "-->");
          case DOCUMENT_TYPE_NODE:
            var pubid = node.publicId;
            var sysid = node.systemId;
            buf.push('<!DOCTYPE ', node.name);
            if (pubid) {
              buf.push(' PUBLIC "', pubid);
              if (sysid && sysid != '.') {
                buf.push('" "', sysid);
              }
              buf.push('">');
            } else if (sysid && sysid != '.') {
              buf.push(' SYSTEM "', sysid, '">');
            } else {
              var sub = node.internalSubset;
              if (sub) {
                buf.push(" [", sub, "]");
              }
              buf.push(">");
            }
            return;
          case PROCESSING_INSTRUCTION_NODE:
            return buf.push("<?", node.target, " ", node.data, "?>");
          case ENTITY_REFERENCE_NODE:
            return buf.push('&', node.nodeName, ';');
          //case ENTITY_NODE:
          //case NOTATION_NODE:
          default:
            buf.push('??', node.nodeName);}

      }
      function _importNode(doc, node, deep) {
        var node2;
        switch (node.nodeType) {
          case ELEMENT_NODE:
            node2 = node.cloneNode(false);
            node2.ownerDocument = doc;
          //var attrs = node2.attributes;
          //var len = attrs.length;
          //for(var i=0;i<len;i++){
          //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));
          //}
          case DOCUMENT_FRAGMENT_NODE:
            break;
          case ATTRIBUTE_NODE:
            deep = true;
            break;
          //case ENTITY_REFERENCE_NODE:
          //case PROCESSING_INSTRUCTION_NODE:
          ////case TEXT_NODE:
          //case CDATA_SECTION_NODE:
          //case COMMENT_NODE:
          //	deep = false;
          //	break;
          //case DOCUMENT_NODE:
          //case DOCUMENT_TYPE_NODE:
          //cannot be imported.
          //case ENTITY_NODE:
          //case NOTATION_NODE：
          //can not hit in level3
          //default:throw e;
        }
        if (!node2) {
          node2 = node.cloneNode(false); //false
        }
        node2.ownerDocument = doc;
        node2.parentNode = null;
        if (deep) {
          var child = node.firstChild;
          while (child) {
            node2.appendChild(_importNode(doc, child, deep));
            child = child.nextSibling;
          }
        }
        return node2;
      }
      //
      //var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,
      //					attributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};
      function _cloneNode(doc, node, deep) {
        var node2 = new node.constructor();
        for (var n in node) {
          var v = node[n];
          if (typeof v != 'object') {
            if (v != node2[n]) {
              node2[n] = v;
            }
          }
        }
        if (node.childNodes) {
          node2.childNodes = new NodeList();
        }
        node2.ownerDocument = doc;
        switch (node2.nodeType) {
          case ELEMENT_NODE:
            var attrs = node.attributes;
            var attrs2 = node2.attributes = new NamedNodeMap();
            var len = attrs.length;
            attrs2._ownerElement = node2;
            for (var i = 0; i < len; i++) {
              node2.setAttributeNode(_cloneNode(doc, attrs.item(i), true));
            }
            break;;
          case ATTRIBUTE_NODE:
            deep = true;}

        if (deep) {
          var child = node.firstChild;
          while (child) {
            node2.appendChild(_cloneNode(doc, child, deep));
            child = child.nextSibling;
          }
        }
        return node2;
      }

      function __set__(object, key, value) {
        object[key] = value;
      }
      //do dynamic
      try {
        if (Object.defineProperty) {var






























          getTextContent = function getTextContent(node) {
            switch (node.nodeType) {
              case ELEMENT_NODE:
              case DOCUMENT_FRAGMENT_NODE:
                var buf = [];
                node = node.firstChild;
                while (node) {
                  if (node.nodeType !== 7 && node.nodeType !== 8) {
                    buf.push(getTextContent(node));
                  }
                  node = node.nextSibling;
                }
                return buf.join('');
              default:
                return node.nodeValue;}

          };Object.defineProperty(LiveNodeList.prototype, 'length', { get: function get() {_updateLiveList(this);return this.$$length;} });Object.defineProperty(Node.prototype, 'textContent', { get: function get() {return getTextContent(this);}, set: function set(data) {switch (this.nodeType) {case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while (this.firstChild) {this.removeChild(this.firstChild);}if (data || String(data)) {this.appendChild(this.ownerDocument.createTextNode(data));}break;default: //TODO:
                  this.data = data;this.value = data;this.nodeValue = data;}} });__set__ = function __set__(object, key, value) {
            //console.log(value)
            object['$$' + key] = value;
          };
        }
      } catch (e) {
      } //ie8

      //if(typeof require == 'function'){
      exports.DOMImplementation = DOMImplementation;
      exports.XMLSerializer = XMLSerializer;
      //}


      /***/},
    /* 3 */
    /***/function (module, exports) {

      var initEvent = function initEvent(cos) {
        var listeners = {};
        var getList = function getList(action) {
          !listeners[action] && (listeners[action] = []);
          return listeners[action];
        };
        cos.on = function (action, callback) {
          getList(action).push(callback);
        };
        cos.off = function (action, callback) {
          var list = getList(action);
          for (var i = list.length - 1; i >= 0; i--) {
            callback === list[i] && list.splice(i, 1);
          }
        };
        cos.emit = function (action, data) {
          var list = getList(action).map(function (cb) {
            return cb;
          });
          for (var i = 0; i < list.length; i++) {
            list[i](data);
          }
        };
      };

      var EventProxy = function EventProxy() {
        initEvent(this);
      };

      module.exports.init = initEvent;
      module.exports.EventProxy = EventProxy;

      /***/},
    /* 4 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";var _defaultOptions;


      var util = __webpack_require__(0);
      var event = __webpack_require__(3);
      var task = __webpack_require__(16);
      var base = __webpack_require__(15);
      var advance = __webpack_require__(13);

      var defaultOptions = (_defaultOptions = {
        SecretId: '',
        SecretKey: '',
        XCosSecurityToken: '', // 使用临时密钥需要注意自行刷新 Token
        ChunkRetryTimes: 2,
        FileParallelLimit: 3,
        ChunkParallelLimit: 3 }, _defineProperty(_defaultOptions, "ChunkRetryTimes",
      3), _defineProperty(_defaultOptions, "ChunkSize",
      1024 * 1024), _defineProperty(_defaultOptions, "SliceSize",
      1024 * 1024), _defineProperty(_defaultOptions, "CopyChunkParallelLimit",
      20), _defineProperty(_defaultOptions, "CopyChunkSize",
      1024 * 1024 * 10), _defineProperty(_defaultOptions, "CopySliceSize",
      1024 * 1024 * 10), _defineProperty(_defaultOptions, "MaxPartNumber",
      10000), _defineProperty(_defaultOptions, "ProgressInterval",
      1000), _defineProperty(_defaultOptions, "UploadQueueSize",
      10000), _defineProperty(_defaultOptions, "Domain",
      ''), _defineProperty(_defaultOptions, "ServiceDomain",
      ''), _defineProperty(_defaultOptions, "Protocol",
      ''), _defineProperty(_defaultOptions, "CompatibilityMode",
      false), _defineProperty(_defaultOptions, "ForcePathStyle",
      false), _defineProperty(_defaultOptions, "CorrectClockSkew",
      true), _defineProperty(_defaultOptions, "SystemClockOffset",
      0), _defaultOptions);


      // 对外暴露的类
      var COS = function COS(options) {
        this.options = util.extend(util.clone(defaultOptions), options || {});
        this.options.FileParallelLimit = Math.max(1, this.options.FileParallelLimit);
        this.options.ChunkParallelLimit = Math.max(1, this.options.ChunkParallelLimit);
        this.options.ChunkRetryTimes = Math.max(0, this.options.ChunkRetryTimes);
        this.options.ChunkSize = Math.max(1024 * 1024, this.options.ChunkSize);
        this.options.CopyChunkParallelLimit = Math.max(1, this.options.CopyChunkParallelLimit);
        this.options.CopyChunkSize = Math.max(1024 * 1024, this.options.CopyChunkSize);
        this.options.CopySliceSize = Math.max(0, this.options.CopySliceSize);
        this.options.MaxPartNumber = Math.max(1024, Math.min(10000, this.options.MaxPartNumber));
        this.options.Timeout = Math.max(0, this.options.Timeout);
        if (this.options.AppId) {
          console.warn('warning: AppId has been deprecated, Please put it at the end of parameter Bucket(E.g: "test-1250000000").');
        }
        event.init(this);
        task.init(this);
      };

      base.init(COS, task);
      advance.init(COS, task);

      COS.getAuthorization = util.getAuth;
      COS.version = '0.7.10';

      module.exports = COS;


      /***/},
    /* 5 */
    /***/function (module, exports, __webpack_require__) {

      var COS = __webpack_require__(4);
      module.exports = COS;

      /***/},
    /* 6 */
    /***/function (module, exports) {

      /*
                                      CryptoJS v3.1.2
                                      code.google.com/p/crypto-js
                                      (c) 2009-2013 by Jeff Mott. All rights reserved.
                                      code.google.com/p/crypto-js/wiki/License
                                      */
      var CryptoJS = CryptoJS || function (g, l) {var e = {},d = e.lib = {},m = function m() {},k = d.Base = { extend: function extend(a) {m.prototype = this;var c = new m();a && c.mixIn(a);c.hasOwnProperty("init") || (c.init = function () {c.$super.init.apply(this, arguments);});c.init.prototype = c;c.$super = this;return c;}, create: function create() {var a = this.extend();a.init.apply(a, arguments);return a;}, init: function init() {}, mixIn: function mixIn(a) {for (var c in a) {a.hasOwnProperty(c) && (this[c] = a[c]);}a.hasOwnProperty("toString") && (this.toString = a.toString);}, clone: function clone() {return this.init.prototype.extend(this);} },
        p = d.WordArray = k.extend({ init: function init(a, c) {a = this.words = a || [];this.sigBytes = c != l ? c : 4 * a.length;}, toString: function toString(a) {return (a || n).stringify(this);}, concat: function concat(a) {var c = this.words,q = a.words,f = this.sigBytes;a = a.sigBytes;this.clamp();if (f % 4) for (var b = 0; b < a; b++) {c[f + b >>> 2] |= (q[b >>> 2] >>> 24 - 8 * (b % 4) & 255) << 24 - 8 * ((f + b) % 4);} else if (65535 < q.length) for (b = 0; b < a; b += 4) {c[f + b >>> 2] = q[b >>> 2];} else c.push.apply(c, q);this.sigBytes += a;return this;}, clamp: function clamp() {var a = this.words,c = this.sigBytes;a[c >>> 2] &= 4294967295 <<
            32 - 8 * (c % 4);a.length = g.ceil(c / 4);}, clone: function clone() {var a = k.clone.call(this);a.words = this.words.slice(0);return a;}, random: function random(a) {for (var c = [], b = 0; b < a; b += 4) {c.push(4294967296 * g.random() | 0);}return new p.init(c, a);} }),b = e.enc = {},n = b.Hex = { stringify: function stringify(a) {var c = a.words;a = a.sigBytes;for (var b = [], f = 0; f < a; f++) {var d = c[f >>> 2] >>> 24 - 8 * (f % 4) & 255;b.push((d >>> 4).toString(16));b.push((d & 15).toString(16));}return b.join("");}, parse: function parse(a) {for (var c = a.length, b = [], f = 0; f < c; f += 2) {b[f >>> 3] |= parseInt(a.substr(f,
              2), 16) << 24 - 4 * (f % 8);}return new p.init(b, c / 2);} },j = b.Latin1 = { stringify: function stringify(a) {var c = a.words;a = a.sigBytes;for (var b = [], f = 0; f < a; f++) {b.push(String.fromCharCode(c[f >>> 2] >>> 24 - 8 * (f % 4) & 255));}return b.join("");}, parse: function parse(a) {for (var c = a.length, b = [], f = 0; f < c; f++) {b[f >>> 2] |= (a.charCodeAt(f) & 255) << 24 - 8 * (f % 4);}return new p.init(b, c);} },h = b.Utf8 = { stringify: function stringify(a) {try {return decodeURIComponent(escape(j.stringify(a)));} catch (c) {throw Error("Malformed UTF-8 data");}}, parse: function parse(a) {return j.parse(unescape(encodeURIComponent(a)));} },
        r = d.BufferedBlockAlgorithm = k.extend({ reset: function reset() {this._data = new p.init();this._nDataBytes = 0;}, _append: function _append(a) {"string" == typeof a && (a = h.parse(a));this._data.concat(a);this._nDataBytes += a.sigBytes;}, _process: function _process(a) {var c = this._data,b = c.words,f = c.sigBytes,d = this.blockSize,e = f / (4 * d),e = a ? g.ceil(e) : g.max((e | 0) - this._minBufferSize, 0);a = e * d;f = g.min(4 * a, f);if (a) {for (var k = 0; k < a; k += d) {this._doProcessBlock(b, k);}k = b.splice(0, a);c.sigBytes -= f;}return new p.init(k, f);}, clone: function clone() {var a = k.clone.call(this);
            a._data = this._data.clone();return a;}, _minBufferSize: 0 });d.Hasher = r.extend({ cfg: k.extend(), init: function init(a) {this.cfg = this.cfg.extend(a);this.reset();}, reset: function reset() {r.reset.call(this);this._doReset();}, update: function update(a) {this._append(a);this._process();return this;}, finalize: function finalize(a) {a && this._append(a);return this._doFinalize();}, blockSize: 16, _createHelper: function _createHelper(a) {return function (b, d) {return new a.init(d).finalize(b);};}, _createHmacHelper: function _createHmacHelper(a) {return function (b, d) {return new s.HMAC.init(a,
              d).finalize(b);};} });var s = e.algo = {};return e;}(Math);
      (function () {var g = CryptoJS,l = g.lib,e = l.WordArray,d = l.Hasher,m = [],l = g.algo.SHA1 = d.extend({ _doReset: function _doReset() {this._hash = new e.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);}, _doProcessBlock: function _doProcessBlock(d, e) {for (var b = this._hash.words, n = b[0], j = b[1], h = b[2], g = b[3], l = b[4], a = 0; 80 > a; a++) {if (16 > a) m[a] = d[e + a] | 0;else {var c = m[a - 3] ^ m[a - 8] ^ m[a - 14] ^ m[a - 16];m[a] = c << 1 | c >>> 31;}c = (n << 5 | n >>> 27) + l + m[a];c = 20 > a ? c + ((j & h | ~j & g) + 1518500249) : 40 > a ? c + ((j ^ h ^ g) + 1859775393) : 60 > a ? c + ((j & h | j & g | h & g) - 1894007588) : c + ((j ^ h ^
              g) - 899497514);l = g;g = h;h = j << 30 | j >>> 2;j = n;n = c;}b[0] = b[0] + n | 0;b[1] = b[1] + j | 0;b[2] = b[2] + h | 0;b[3] = b[3] + g | 0;b[4] = b[4] + l | 0;}, _doFinalize: function _doFinalize() {var d = this._data,e = d.words,b = 8 * this._nDataBytes,g = 8 * d.sigBytes;e[g >>> 5] |= 128 << 24 - g % 32;e[(g + 64 >>> 9 << 4) + 14] = Math.floor(b / 4294967296);e[(g + 64 >>> 9 << 4) + 15] = b;d.sigBytes = 4 * e.length;this._process();return this._hash;}, clone: function clone() {var e = d.clone.call(this);e._hash = this._hash.clone();return e;} });g.SHA1 = d._createHelper(l);g.HmacSHA1 = d._createHmacHelper(l);})();
      (function () {var g = CryptoJS,l = g.enc.Utf8;g.algo.HMAC = g.lib.Base.extend({ init: function init(e, d) {e = this._hasher = new e.init();"string" == typeof d && (d = l.parse(d));var g = e.blockSize,k = 4 * g;d.sigBytes > k && (d = e.finalize(d));d.clamp();for (var p = this._oKey = d.clone(), b = this._iKey = d.clone(), n = p.words, j = b.words, h = 0; h < g; h++) {n[h] ^= 1549556828, j[h] ^= 909522486;}p.sigBytes = b.sigBytes = k;this.reset();}, reset: function reset() {var e = this._hasher;e.reset();e.update(this._iKey);}, update: function update(e) {this._hasher.update(e);return this;}, finalize: function finalize(e) {var d =
            this._hasher;e = d.finalize(e);d.reset();return d.finalize(this._oKey.clone().concat(e));} });})();


      (function () {
        // Shortcuts
        var C = CryptoJS;
        var C_lib = C.lib;
        var WordArray = C_lib.WordArray;
        var C_enc = C.enc;

        /**
                            * Base64 encoding strategy.
                            */
        var Base64 = C_enc.Base64 = {
          /**
                                       * Converts a word array to a Base64 string.
                                       *
                                       * @param {WordArray} wordArray The word array.
                                       *
                                       * @return {string} The Base64 string.
                                       *
                                       * @static
                                       *
                                       * @example
                                       *
                                       *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
                                       */
          stringify: function stringify(wordArray) {
            // Shortcuts
            var words = wordArray.words;
            var sigBytes = wordArray.sigBytes;
            var map = this._map;

            // Clamp excess bits
            wordArray.clamp();

            // Convert
            var base64Chars = [];
            for (var i = 0; i < sigBytes; i += 3) {
              var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
              var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
              var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;

              var triplet = byte1 << 16 | byte2 << 8 | byte3;

              for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {
                base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
              }
            }

            // Add padding
            var paddingChar = map.charAt(64);
            if (paddingChar) {
              while (base64Chars.length % 4) {
                base64Chars.push(paddingChar);
              }
            }

            return base64Chars.join('');
          },

          /**
              * Converts a Base64 string to a word array.
              *
              * @param {string} base64Str The Base64 string.
              *
              * @return {WordArray} The word array.
              *
              * @static
              *
              * @example
              *
              *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
              */
          parse: function parse(base64Str) {
            // Shortcuts
            var base64StrLength = base64Str.length;
            var map = this._map;

            // Ignore padding
            var paddingChar = map.charAt(64);
            if (paddingChar) {
              var paddingIndex = base64Str.indexOf(paddingChar);
              if (paddingIndex != -1) {
                base64StrLength = paddingIndex;
              }
            }

            // Convert
            var words = [];
            var nBytes = 0;
            for (var i = 0; i < base64StrLength; i++) {
              if (i % 4) {
                var bits1 = map.indexOf(base64Str.charAt(i - 1)) << i % 4 * 2;
                var bits2 = map.indexOf(base64Str.charAt(i)) >>> 6 - i % 4 * 2;
                words[nBytes >>> 2] |= (bits1 | bits2) << 24 - nBytes % 4 * 8;
                nBytes++;
              }
            }

            return WordArray.create(words, nBytes);
          },

          _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=' };

      })();

      module.exports = CryptoJS;


      /***/},
    /* 7 */
    /***/function (module, exports) {

      //copyright Ryan Day 2010 <http://ryanday.org>, Joscha Feth 2013 <http://www.feth.com> [MIT Licensed]

      var element_start_char =
      "a-zA-Z_\xC0-\xD6\xD8-\xF6\xF8-\xFF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FFF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD";
      var element_non_start_char = "-.0-9\xB7\u0300-\u036F\u203F\u2040";
      var element_replace = new RegExp("^([^" + element_start_char + "])|^((x|X)(m|M)(l|L))|([^" + element_start_char + element_non_start_char + "])", "g");
      var not_safe_in_xml = /[^\x09\x0A\x0D\x20-\xFF\x85\xA0-\uD7FF\uE000-\uFDCF\uFDE0-\uFFFD]/gm;

      var objKeys = function objKeys(obj) {
        var l = [];
        if (obj instanceof Object) {
          for (var k in obj) {
            if (obj.hasOwnProperty(k)) {
              l.push(k);
            }
          }
        }
        return l;
      };
      var process_to_xml = function process_to_xml(node_data, options) {

        var makeNode = function makeNode(name, content, attributes, level, hasSubNodes) {
          var indent_value = options.indent !== undefined ? options.indent : "\t";
          var indent = options.prettyPrint ? '\n' + new Array(level).join(indent_value) : '';
          if (options.removeIllegalNameCharacters) {
            name = name.replace(element_replace, '_');
          }

          var node = [indent, '<', name, attributes || ''];
          if (content && content.length > 0) {
            node.push('>');
            node.push(content);
            hasSubNodes && node.push(indent);
            node.push('</');
            node.push(name);
            node.push('>');
          } else {
            node.push('/>');
          }
          return node.join('');
        };

        return function fn(node_data, node_descriptor, level) {
          var type = typeof node_data;
          if (Array.isArray ? Array.isArray(node_data) : node_data instanceof Array) {
            type = 'array';
          } else if (node_data instanceof Date) {
            type = 'date';
          }

          switch (type) {
            //if value is an array create child nodes from values
            case 'array':
              var ret = [];
              node_data.map(function (v) {
                ret.push(fn(v, 1, level + 1));
                //entries that are values of an array are the only ones that can be special node descriptors
              });
              options.prettyPrint && ret.push('\n');
              return ret.join('');
              break;

            case 'date':
              // cast dates to ISO 8601 date (soap likes it)
              return node_data.toJSON ? node_data.toJSON() : node_data + '';
              break;

            case 'object':
              var nodes = [];
              for (var name in node_data) {
                if (node_data[name] instanceof Array) {
                  for (var j in node_data[name]) {
                    nodes.push(makeNode(name, fn(node_data[name][j], 0, level + 1), null, level + 1, objKeys(node_data[name][j]).length));
                  }
                } else {
                  nodes.push(makeNode(name, fn(node_data[name], 0, level + 1), null, level + 1));
                }
              }
              options.prettyPrint && nodes.length > 0 && nodes.push('\n');
              return nodes.join('');
              break;

            case 'function':
              return node_data();
              break;

            default:
              return options.escape ? esc(node_data) : '' + node_data;}


        }(node_data, 0, 0);
      };


      var xml_header = function xml_header(standalone) {
        var ret = ['<?xml version="1.0" encoding="UTF-8"'];

        if (standalone) {
          ret.push(' standalone="yes"');
        }
        ret.push('?>');

        return ret.join('');
      };

      function esc(str) {
        return ('' + str).replace(/&/g, '&amp;').
        replace(/</g, '&lt;').
        replace(/>/g, '&gt;').
        replace(/'/g, '&apos;').
        replace(/"/g, '&quot;').
        replace(not_safe_in_xml, '');
      }

      var json2xml = function json2xml(obj, options) {

        if (!options) {
          options = {
            xmlHeader: {
              standalone: true },

            prettyPrint: true,
            indent: "  " };

        }

        if (typeof obj == 'string') {
          try {
            obj = JSON.parse(obj.toString());
          } catch (e) {
            return false;
          }
        }

        var xmlheader = '';
        var docType = '';
        if (options) {
          if (typeof options == 'object') {
            // our config is an object

            if (options.xmlHeader) {
              // the user wants an xml header
              xmlheader = xml_header(!!options.xmlHeader.standalone);
            }

            if (typeof options.docType != 'undefined') {
              docType = '<!DOCTYPE ' + options.docType + '>';
            }
          } else {
            // our config is a boolean value, so just add xml header
            xmlheader = xml_header();
          }
        }
        options = options || {};

        var ret = [
        xmlheader,
        options.prettyPrint && docType ? '\n' : '',
        docType,
        process_to_xml(obj, options)];

        return ret.join('').replace(/\n{2,}/g, '\n').replace(/\s+$/g, '');
      };

      module.exports = json2xml;

      /***/},
    /* 8 */
    /***/function (module, exports) {

      /**
                                      *
                                      *  MD5 (Message-Digest Algorithm)
                                      *  http://www.webtoolkit.info/
                                      *
                                      **/

      var md5 = function md5(string) {

        function RotateLeft(lValue, iShiftBits) {
          return lValue << iShiftBits | lValue >>> 32 - iShiftBits;
        }

        function AddUnsigned(lX, lY) {
          var lX4, lY4, lX8, lY8, lResult;
          lX8 = lX & 0x80000000;
          lY8 = lY & 0x80000000;
          lX4 = lX & 0x40000000;
          lY4 = lY & 0x40000000;
          lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);
          if (lX4 & lY4) {
            return lResult ^ 0x80000000 ^ lX8 ^ lY8;
          }
          if (lX4 | lY4) {
            if (lResult & 0x40000000) {
              return lResult ^ 0xC0000000 ^ lX8 ^ lY8;
            } else {
              return lResult ^ 0x40000000 ^ lX8 ^ lY8;
            }
          } else {
            return lResult ^ lX8 ^ lY8;
          }
        }

        function F(x, y, z) {return x & y | ~x & z;}
        function G(x, y, z) {return x & z | y & ~z;}
        function H(x, y, z) {return x ^ y ^ z;}
        function I(x, y, z) {return y ^ (x | ~z);}

        function FF(a, b, c, d, x, s, ac) {
          a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
          return AddUnsigned(RotateLeft(a, s), b);
        };

        function GG(a, b, c, d, x, s, ac) {
          a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
          return AddUnsigned(RotateLeft(a, s), b);
        };

        function HH(a, b, c, d, x, s, ac) {
          a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
          return AddUnsigned(RotateLeft(a, s), b);
        };

        function II(a, b, c, d, x, s, ac) {
          a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
          return AddUnsigned(RotateLeft(a, s), b);
        };

        function ConvertToWordArray(string) {
          var lWordCount;
          var lMessageLength = string.length;
          var lNumberOfWords_temp1 = lMessageLength + 8;
          var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - lNumberOfWords_temp1 % 64) / 64;
          var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;
          var lWordArray = Array(lNumberOfWords - 1);
          var lBytePosition = 0;
          var lByteCount = 0;
          while (lByteCount < lMessageLength) {
            lWordCount = (lByteCount - lByteCount % 4) / 4;
            lBytePosition = lByteCount % 4 * 8;
            lWordArray[lWordCount] = lWordArray[lWordCount] | string.charCodeAt(lByteCount) << lBytePosition;
            lByteCount++;
          }
          lWordCount = (lByteCount - lByteCount % 4) / 4;
          lBytePosition = lByteCount % 4 * 8;
          lWordArray[lWordCount] = lWordArray[lWordCount] | 0x80 << lBytePosition;
          lWordArray[lNumberOfWords - 2] = lMessageLength << 3;
          lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;
          return lWordArray;
        };

        function WordToHex(lValue) {
          var WordToHexValue = "",WordToHexValue_temp = "",lByte,lCount;
          for (lCount = 0; lCount <= 3; lCount++) {
            lByte = lValue >>> lCount * 8 & 255;
            WordToHexValue_temp = "0" + lByte.toString(16);
            WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);
          }
          return WordToHexValue;
        };

        function Utf8Encode(string) {
          string = string.replace(/\r\n/g, "\n");
          var utftext = "";

          for (var n = 0; n < string.length; n++) {

            var c = string.charCodeAt(n);

            if (c < 128) {
              utftext += String.fromCharCode(c);
            } else
            if (c > 127 && c < 2048) {
              utftext += String.fromCharCode(c >> 6 | 192);
              utftext += String.fromCharCode(c & 63 | 128);
            } else
            {
              utftext += String.fromCharCode(c >> 12 | 224);
              utftext += String.fromCharCode(c >> 6 & 63 | 128);
              utftext += String.fromCharCode(c & 63 | 128);
            }

          }

          return utftext;
        };

        var x = Array();
        var k, AA, BB, CC, DD, a, b, c, d;
        var S11 = 7,S12 = 12,S13 = 17,S14 = 22;
        var S21 = 5,S22 = 9,S23 = 14,S24 = 20;
        var S31 = 4,S32 = 11,S33 = 16,S34 = 23;
        var S41 = 6,S42 = 10,S43 = 15,S44 = 21;

        string = Utf8Encode(string);

        x = ConvertToWordArray(string);

        a = 0x67452301;b = 0xEFCDAB89;c = 0x98BADCFE;d = 0x10325476;

        for (k = 0; k < x.length; k += 16) {
          AA = a;BB = b;CC = c;DD = d;
          a = FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);
          d = FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);
          c = FF(c, d, a, b, x[k + 2], S13, 0x242070DB);
          b = FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);
          a = FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);
          d = FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);
          c = FF(c, d, a, b, x[k + 6], S13, 0xA8304613);
          b = FF(b, c, d, a, x[k + 7], S14, 0xFD469501);
          a = FF(a, b, c, d, x[k + 8], S11, 0x698098D8);
          d = FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);
          c = FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);
          b = FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);
          a = FF(a, b, c, d, x[k + 12], S11, 0x6B901122);
          d = FF(d, a, b, c, x[k + 13], S12, 0xFD987193);
          c = FF(c, d, a, b, x[k + 14], S13, 0xA679438E);
          b = FF(b, c, d, a, x[k + 15], S14, 0x49B40821);
          a = GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);
          d = GG(d, a, b, c, x[k + 6], S22, 0xC040B340);
          c = GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);
          b = GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);
          a = GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);
          d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);
          c = GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);
          b = GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);
          a = GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);
          d = GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);
          c = GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);
          b = GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);
          a = GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);
          d = GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);
          c = GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);
          b = GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);
          a = HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);
          d = HH(d, a, b, c, x[k + 8], S32, 0x8771F681);
          c = HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);
          b = HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);
          a = HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);
          d = HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);
          c = HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);
          b = HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);
          a = HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);
          d = HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);
          c = HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);
          b = HH(b, c, d, a, x[k + 6], S34, 0x4881D05);
          a = HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);
          d = HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);
          c = HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);
          b = HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);
          a = II(a, b, c, d, x[k + 0], S41, 0xF4292244);
          d = II(d, a, b, c, x[k + 7], S42, 0x432AFF97);
          c = II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);
          b = II(b, c, d, a, x[k + 5], S44, 0xFC93A039);
          a = II(a, b, c, d, x[k + 12], S41, 0x655B59C3);
          d = II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);
          c = II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);
          b = II(b, c, d, a, x[k + 1], S44, 0x85845DD1);
          a = II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);
          d = II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);
          c = II(c, d, a, b, x[k + 6], S43, 0xA3014314);
          b = II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);
          a = II(a, b, c, d, x[k + 4], S41, 0xF7537E82);
          d = II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);
          c = II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);
          b = II(b, c, d, a, x[k + 9], S44, 0xEB86D391);
          a = AddUnsigned(a, AA);
          b = AddUnsigned(b, BB);
          c = AddUnsigned(c, CC);
          d = AddUnsigned(d, DD);
        }

        var temp = WordToHex(a) + WordToHex(b) + WordToHex(c) + WordToHex(d);

        return temp.toLowerCase();
      };

      module.exports = md5;

      /***/},
    /* 9 */
    /***/function (module, exports) {

      var obj2str = function obj2str(obj) {
        var i, key, val;
        var list = [];
        var keyList = Object.keys(obj);
        for (i = 0; i < keyList.length; i++) {
          key = keyList[i];
          val = obj[key] || '';
          list.push(key + '=' + encodeURIComponent(val));
        }
        return list.join('&');
      };

      var request = function request(params, callback) {
        var filePath = params.filePath;
        var headers = params.headers || {};
        var url = params.url;
        var method = params.method;
        var onProgress = params.onProgress;
        var requestTask;

        var cb = function cb(err, response) {
          callback(err, { statusCode: response.statusCode, headers: response.header }, response.data);
        };

        if (filePath) {
          var fileKey;
          var m = url.match(/^(https?:\/\/[^/]+\/)([^/]*\/?)(.*)$/);
          if (params.pathStyle) {
            fileKey = decodeURIComponent(m[3] || '');
            url = m[1] + m[2];
          } else {
            fileKey = decodeURIComponent(m[2] + m[3] || '');
            url = m[1];
          }

          // 整理 postObject 参数
          var formData = {
            'key': fileKey,
            'success_action_status': 200,
            'Signature': headers.Authorization };

          var headerKeys = [
          'Cache-Control',
          'Content-Type',
          'Content-Disposition',
          'Content-Encoding',
          'Expires',
          'x-cos-storage-class',
          'x-cos-security-token'];

          for (var i in params.headers) {
            if (params.headers.hasOwnProperty(i) && (i.indexOf('x-cos-meta-') > -1 || headerKeys.indexOf(i) > -1)) {
              formData[i] = params.headers[i];
            }
          }
          headers['x-cos-acl'] && (formData.acl = headers['x-cos-acl']);
          !formData['Content-Type'] && (formData['Content-Type'] = '');

          var responseHeader = {};
          requestTask = wx.uploadFile({
            url: url,
            method: method,
            name: 'file',
            filePath: filePath,
            formData: formData,
            success: function success(response) {
              !response.header && (response.header = responseHeader);
              cb(null, response);
            },
            fail: function fail(response) {
              cb(response.errMsg, response);
            } });


          requestTask.onHeadersReceived && requestTask.onHeadersReceived(function (res) {
            responseHeader = res.header;
          });

          requestTask.onProgressUpdate(function (res) {
            onProgress({
              loaded: res.totalBytesSent,
              total: res.totalBytesExpectedToSend,
              progress: res.progress / 100 });

          });
        } else {
          var qsStr = params.qs && obj2str(params.qs) || '';
          if (qsStr) {
            url += (url.indexOf('?') > -1 ? '&' : '?') + qsStr;
          }
          headers['Content-Length'] && delete headers['Content-Length'];
          wx.request({
            url: url,
            method: method,
            header: headers,
            dataType: 'text',
            data: params.body,
            success: function success(response) {
              cb(null, response);
            },
            fail: function fail(response) {
              cb(response.errMsg, response);
            } });

        }

        return requestTask;
      };

      module.exports = request;

      /***/},
    /* 10 */
    /***/function (module, exports, __webpack_require__) {

      /*
                                                           Copyright 2011-2013 Abdulla Abdurakhmanov
                                                           Original sources are available at https://code.google.com/p/x2js/
                                                          
                                                           Licensed under the Apache License, Version 2.0 (the "License");
                                                           you may not use this file except in compliance with the License.
                                                           You may obtain a copy of the License at
                                                          
                                                           http://www.apache.org/licenses/LICENSE-2.0
                                                          
                                                           Unless required by applicable law or agreed to in writing, software
                                                           distributed under the License is distributed on an "AS IS" BASIS,
                                                           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                           See the License for the specific language governing permissions and
                                                           limitations under the License.
                                                           */
      var DOMParser = __webpack_require__(11).DOMParser;

      var x2js = function x2js(config) {
        'use strict';

        var VERSION = "1.2.0";

        config = config || {};
        initConfigDefaults();
        initRequiredPolyfills();

        function initConfigDefaults() {
          if (config.escapeMode === undefined) {
            config.escapeMode = true;
          }

          config.attributePrefix = config.attributePrefix || "_";
          config.arrayAccessForm = config.arrayAccessForm || "none";
          config.emptyNodeForm = config.emptyNodeForm || "text";

          if (config.enableToStringFunc === undefined) {
            config.enableToStringFunc = true;
          }
          config.arrayAccessFormPaths = config.arrayAccessFormPaths || [];
          if (config.skipEmptyTextNodesForObj === undefined) {
            config.skipEmptyTextNodesForObj = true;
          }
          if (config.stripWhitespaces === undefined) {
            config.stripWhitespaces = true;
          }
          config.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];

          if (config.useDoubleQuotes === undefined) {
            config.useDoubleQuotes = false;
          }

          config.xmlElementsFilter = config.xmlElementsFilter || [];
          config.jsonPropertiesFilter = config.jsonPropertiesFilter || [];

          if (config.keepCData === undefined) {
            config.keepCData = false;
          }
        }

        var DOMNodeTypes = {
          ELEMENT_NODE: 1,
          TEXT_NODE: 3,
          CDATA_SECTION_NODE: 4,
          COMMENT_NODE: 8,
          DOCUMENT_NODE: 9 };


        function initRequiredPolyfills() {
        }

        function getNodeLocalName(node) {
          var nodeLocalName = node.localName;
          if (nodeLocalName == null) // Yeah, this is IE!!
            nodeLocalName = node.baseName;
          if (nodeLocalName == null || nodeLocalName == "") // =="" is IE too
            nodeLocalName = node.nodeName;
          return nodeLocalName;
        }

        function getNodePrefix(node) {
          return node.prefix;
        }

        function escapeXmlChars(str) {
          if (typeof str == "string")
          return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&apos;');else

          return str;
        }

        function unescapeXmlChars(str) {
          return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '"').replace(/&apos;/g, "'").replace(/&amp;/g, '&');
        }

        function checkInStdFiltersArrayForm(stdFiltersArrayForm, obj, name, path) {
          var idx = 0;
          for (; idx < stdFiltersArrayForm.length; idx++) {
            var filterPath = stdFiltersArrayForm[idx];
            if (typeof filterPath === "string") {
              if (filterPath == path)
              break;
            } else

            if (filterPath instanceof RegExp) {
              if (filterPath.test(path))
              break;
            } else

            if (typeof filterPath === "function") {
              if (filterPath(obj, name, path))
              break;
            }
          }
          return idx != stdFiltersArrayForm.length;
        }

        function toArrayAccessForm(obj, childName, path) {
          switch (config.arrayAccessForm) {
            case "property":
              if (!(obj[childName] instanceof Array))
              obj[childName + "_asArray"] = [obj[childName]];else

              obj[childName + "_asArray"] = obj[childName];
              break;
            /*case "none":
                      break;*/}


          if (!(obj[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {
            if (checkInStdFiltersArrayForm(config.arrayAccessFormPaths, obj, childName, path)) {
              obj[childName] = [obj[childName]];
            }
          }
        }

        function fromXmlDateTime(prop) {
          // Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object
          // Improved to support full spec and optional parts
          var bits = prop.split(/[-T:+Z]/g);

          var d = new Date(bits[0], bits[1] - 1, bits[2]);
          var secondBits = bits[5].split("\.");
          d.setHours(bits[3], bits[4], secondBits[0]);
          if (secondBits.length > 1)
          d.setMilliseconds(secondBits[1]);

          // Get supplied time zone offset in minutes
          if (bits[6] && bits[7]) {
            var offsetMinutes = bits[6] * 60 + Number(bits[7]);
            var sign = /\d\d-\d\d:\d\d$/.test(prop) ? '-' : '+';

            // Apply the sign
            offsetMinutes = 0 + (sign == '-' ? -1 * offsetMinutes : offsetMinutes);

            // Apply offset and local timezone
            d.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset());
          } else

          if (prop.indexOf("Z", prop.length - 1) !== -1) {
            d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));
          }

          // d is now a local time equivalent to the supplied time
          return d;
        }

        function checkFromXmlDateTimePaths(value, childName, fullPath) {
          if (config.datetimeAccessFormPaths.length > 0) {
            var path = fullPath.split("\.#")[0];
            if (checkInStdFiltersArrayForm(config.datetimeAccessFormPaths, value, childName, path)) {
              return fromXmlDateTime(value);
            } else

            return value;
          } else

          return value;
        }

        function checkXmlElementsFilter(obj, childType, childName, childPath) {
          if (childType == DOMNodeTypes.ELEMENT_NODE && config.xmlElementsFilter.length > 0) {
            return checkInStdFiltersArrayForm(config.xmlElementsFilter, obj, childName, childPath);
          } else

          return true;
        }

        function parseDOMChildren(node, path) {
          if (node.nodeType == DOMNodeTypes.DOCUMENT_NODE) {
            var result = new Object();
            var nodeChildren = node.childNodes;
            // Alternative for firstElementChild which is not supported in some environments
            for (var cidx = 0; cidx < nodeChildren.length; cidx++) {
              var child = nodeChildren.item(cidx);
              if (child.nodeType == DOMNodeTypes.ELEMENT_NODE) {
                var childName = getNodeLocalName(child);
                result[childName] = parseDOMChildren(child, childName);
              }
            }
            return result;
          } else

          if (node.nodeType == DOMNodeTypes.ELEMENT_NODE) {
            var result = new Object();
            result.__cnt = 0;

            var nodeChildren = node.childNodes;

            // Children nodes
            for (var cidx = 0; cidx < nodeChildren.length; cidx++) {
              var child = nodeChildren.item(cidx); // nodeChildren[cidx];
              var childName = getNodeLocalName(child);

              if (child.nodeType != DOMNodeTypes.COMMENT_NODE) {
                var childPath = path + "." + childName;
                if (checkXmlElementsFilter(result, child.nodeType, childName, childPath)) {
                  result.__cnt++;
                  if (result[childName] == null) {
                    result[childName] = parseDOMChildren(child, childPath);
                    toArrayAccessForm(result, childName, childPath);
                  } else
                  {
                    if (result[childName] != null) {
                      if (!(result[childName] instanceof Array)) {
                        result[childName] = [result[childName]];
                        toArrayAccessForm(result, childName, childPath);
                      }
                    }
                    result[childName][result[childName].length] = parseDOMChildren(child, childPath);
                  }
                }
              }
            }

            // Attributes
            for (var aidx = 0; aidx < node.attributes.length; aidx++) {
              var attr = node.attributes.item(aidx); // [aidx];
              result.__cnt++;
              result[config.attributePrefix + attr.name] = attr.value;
            }

            // Node namespace prefix
            var nodePrefix = getNodePrefix(node);
            if (nodePrefix != null && nodePrefix != "") {
              result.__cnt++;
              result.__prefix = nodePrefix;
            }

            if (result["#text"] != null) {
              result.__text = result["#text"];
              if (result.__text instanceof Array) {
                result.__text = result.__text.join("\n");
              }
              //if(config.escapeMode)
              //	result.__text = unescapeXmlChars(result.__text);
              if (config.stripWhitespaces)
              result.__text = result.__text.trim();
              delete result["#text"];
              if (config.arrayAccessForm == "property")
              delete result["#text_asArray"];
              result.__text = checkFromXmlDateTimePaths(result.__text, childName, path + "." + childName);
            }
            if (result["#cdata-section"] != null) {
              result.__cdata = result["#cdata-section"];
              delete result["#cdata-section"];
              if (config.arrayAccessForm == "property")
              delete result["#cdata-section_asArray"];
            }

            if (result.__cnt == 0 && config.emptyNodeForm == "text") {
              result = '';
            } else

            if (result.__cnt == 1 && result.__text != null) {
              result = result.__text;
            } else

            if (result.__cnt == 1 && result.__cdata != null && !config.keepCData) {
              result = result.__cdata;
            } else

            if (result.__cnt > 1 && result.__text != null && config.skipEmptyTextNodesForObj) {
              if (config.stripWhitespaces && result.__text == "" || result.__text.trim() == "") {
                delete result.__text;
              }
            }
            delete result.__cnt;

            if (config.enableToStringFunc && (result.__text != null || result.__cdata != null)) {
              result.toString = function () {
                return (this.__text != null ? this.__text : '') + (this.__cdata != null ? this.__cdata : '');
              };
            }

            return result;
          } else

          if (node.nodeType == DOMNodeTypes.TEXT_NODE || node.nodeType == DOMNodeTypes.CDATA_SECTION_NODE) {
            return node.nodeValue;
          }
        }

        function startTag(jsonObj, element, attrList, closed) {
          var resultStr = "<" + (jsonObj != null && jsonObj.__prefix != null ? jsonObj.__prefix + ":" : "") + element;
          if (attrList != null) {
            for (var aidx = 0; aidx < attrList.length; aidx++) {
              var attrName = attrList[aidx];
              var attrVal = jsonObj[attrName];
              if (config.escapeMode)
              attrVal = escapeXmlChars(attrVal);
              resultStr += " " + attrName.substr(config.attributePrefix.length) + "=";
              if (config.useDoubleQuotes)
              resultStr += '"' + attrVal + '"';else

              resultStr += "'" + attrVal + "'";
            }
          }
          if (!closed)
          resultStr += ">";else

          resultStr += "/>";
          return resultStr;
        }

        function endTag(jsonObj, elementName) {
          return "</" + (jsonObj.__prefix != null ? jsonObj.__prefix + ":" : "") + elementName + ">";
        }

        function endsWith(str, suffix) {
          return str.indexOf(suffix, str.length - suffix.length) !== -1;
        }

        function jsonXmlSpecialElem(jsonObj, jsonObjField) {
          if (config.arrayAccessForm == "property" && endsWith(jsonObjField.toString(), "_asArray") ||
          jsonObjField.toString().indexOf(config.attributePrefix) == 0 ||
          jsonObjField.toString().indexOf("__") == 0 ||
          jsonObj[jsonObjField] instanceof Function)
          return true;else

          return false;
        }

        function jsonXmlElemCount(jsonObj) {
          var elementsCnt = 0;
          if (jsonObj instanceof Object) {
            for (var it in jsonObj) {
              if (jsonXmlSpecialElem(jsonObj, it))
              continue;
              elementsCnt++;
            }
          }
          return elementsCnt;
        }

        function checkJsonObjPropertiesFilter(jsonObj, propertyName, jsonObjPath) {
          return config.jsonPropertiesFilter.length == 0 ||
          jsonObjPath == "" ||
          checkInStdFiltersArrayForm(config.jsonPropertiesFilter, jsonObj, propertyName, jsonObjPath);
        }

        function parseJSONAttributes(jsonObj) {
          var attrList = [];
          if (jsonObj instanceof Object) {
            for (var ait in jsonObj) {
              if (ait.toString().indexOf("__") == -1 && ait.toString().indexOf(config.attributePrefix) == 0) {
                attrList.push(ait);
              }
            }
          }
          return attrList;
        }

        function parseJSONTextAttrs(jsonTxtObj) {
          var result = "";

          if (jsonTxtObj.__cdata != null) {
            result += "<![CDATA[" + jsonTxtObj.__cdata + "]]>";
          }

          if (jsonTxtObj.__text != null) {
            if (config.escapeMode)
            result += escapeXmlChars(jsonTxtObj.__text);else

            result += jsonTxtObj.__text;
          }
          return result;
        }

        function parseJSONTextObject(jsonTxtObj) {
          var result = "";

          if (jsonTxtObj instanceof Object) {
            result += parseJSONTextAttrs(jsonTxtObj);
          } else

          if (jsonTxtObj != null) {
            if (config.escapeMode)
            result += escapeXmlChars(jsonTxtObj);else

            result += jsonTxtObj;
          }

          return result;
        }

        function getJsonPropertyPath(jsonObjPath, jsonPropName) {
          if (jsonObjPath === "") {
            return jsonPropName;
          } else

          return jsonObjPath + "." + jsonPropName;
        }

        function parseJSONArray(jsonArrRoot, jsonArrObj, attrList, jsonObjPath) {
          var result = "";
          if (jsonArrRoot.length == 0) {
            result += startTag(jsonArrRoot, jsonArrObj, attrList, true);
          } else
          {
            for (var arIdx = 0; arIdx < jsonArrRoot.length; arIdx++) {
              result += startTag(jsonArrRoot[arIdx], jsonArrObj, parseJSONAttributes(jsonArrRoot[arIdx]), false);
              result += parseJSONObject(jsonArrRoot[arIdx], getJsonPropertyPath(jsonObjPath, jsonArrObj));
              result += endTag(jsonArrRoot[arIdx], jsonArrObj);
            }
          }
          return result;
        }

        function parseJSONObject(jsonObj, jsonObjPath) {
          var result = "";

          var elementsCnt = jsonXmlElemCount(jsonObj);

          if (elementsCnt > 0) {
            for (var it in jsonObj) {

              if (jsonXmlSpecialElem(jsonObj, it) || jsonObjPath != "" && !checkJsonObjPropertiesFilter(jsonObj, it, getJsonPropertyPath(jsonObjPath, it)))
              continue;

              var subObj = jsonObj[it];

              var attrList = parseJSONAttributes(subObj);

              if (subObj == null || subObj == undefined) {
                result += startTag(subObj, it, attrList, true);
              } else

              if (subObj instanceof Object) {

                if (subObj instanceof Array) {
                  result += parseJSONArray(subObj, it, attrList, jsonObjPath);
                } else
                if (subObj instanceof Date) {
                  result += startTag(subObj, it, attrList, false);
                  result += subObj.toISOString();
                  result += endTag(subObj, it);
                } else
                {
                  var subObjElementsCnt = jsonXmlElemCount(subObj);
                  if (subObjElementsCnt > 0 || subObj.__text != null || subObj.__cdata != null) {
                    result += startTag(subObj, it, attrList, false);
                    result += parseJSONObject(subObj, getJsonPropertyPath(jsonObjPath, it));
                    result += endTag(subObj, it);
                  } else
                  {
                    result += startTag(subObj, it, attrList, true);
                  }
                }
              } else
              {
                result += startTag(subObj, it, attrList, false);
                result += parseJSONTextObject(subObj);
                result += endTag(subObj, it);
              }
            }
          }
          result += parseJSONTextObject(jsonObj);

          return result;
        }

        this.parseXmlString = function (xmlDocStr) {
          // var isIEParser = window.ActiveXObject || "ActiveXObject" in window;
          var isIEParser = false;
          if (xmlDocStr === undefined) {
            return null;
          }
          var xmlDoc;
          if (DOMParser) {
            var parser = new DOMParser();
            var parsererrorNS = null;
            // IE9+ now is here
            if (!isIEParser) {
              try {
                parsererrorNS = parser.parseFromString("INVALID", "text/xml").getElementsByTagName("parsererror")[0].namespaceURI;
              }
              catch (err) {
                parsererrorNS = null;
              }
            }
            try {
              xmlDoc = parser.parseFromString(xmlDocStr, "text/xml");
              if (parsererrorNS != null && xmlDoc.getElementsByTagNameNS(parsererrorNS, "parsererror").length > 0) {
                //throw new Error('Error parsing XML: '+xmlDocStr);
                xmlDoc = null;
              }
            }
            catch (err) {
              xmlDoc = null;
            }
          } else
          {
            // IE :(
            if (xmlDocStr.indexOf("<?") == 0) {
              xmlDocStr = xmlDocStr.substr(xmlDocStr.indexOf("?>") + 2);
            }
            xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
            xmlDoc.async = "false";
            xmlDoc.loadXML(xmlDocStr);
          }
          return xmlDoc;
        };

        this.asArray = function (prop) {
          if (prop === undefined || prop == null)
          return [];else

          if (prop instanceof Array)
          return prop;else

          return [prop];
        };

        this.toXmlDateTime = function (dt) {
          if (dt instanceof Date)
          return dt.toISOString();else

          if (typeof dt === 'number')
          return new Date(dt).toISOString();else

          return null;
        };

        this.asDateTime = function (prop) {
          if (typeof prop == "string") {
            return fromXmlDateTime(prop);
          } else

          return prop;
        };

        this.xml2json = function (xmlDoc) {
          return parseDOMChildren(xmlDoc);
        };

        this.xml_str2json = function (xmlDocStr) {
          var xmlDoc = this.parseXmlString(xmlDocStr);
          if (xmlDoc != null)
          return this.xml2json(xmlDoc);else

          return null;
        };

        this.json2xml_str = function (jsonObj) {
          return parseJSONObject(jsonObj, "");
        };

        this.json2xml = function (jsonObj) {
          var xmlDocStr = this.json2xml_str(jsonObj);
          return this.parseXmlString(xmlDocStr);
        };

        this.getVersion = function () {
          return VERSION;
        };
      };

      var xml2json = function xml2json(str) {
        if (!str) return null;
        var parser = new DOMParser();
        var xmlDoc = parser.parseFromString(str, "text/xml");
        var x2jsObj = new x2js();
        var data = x2jsObj.xml2json(xmlDoc);
        if (data.html && data.getElementsByTagName('parsererror').length) {
          return null;
        } else {
          return data;
        }
      };

      var json2xml = function json2xml(data) {
        var x2jsObj = new x2js();
        return x2jsObj.json2xml(data);
      };

      module.exports = xml2json;

      /***/},
    /* 11 */
    /***/function (module, exports, __webpack_require__) {

      function DOMParser(options) {
        this.options = options || { locator: {} };

      }
      DOMParser.prototype.parseFromString = function (source, mimeType) {
        var options = this.options;
        var sax = new XMLReader();
        var domBuilder = options.domBuilder || new DOMHandler(); //contentHandler and LexicalHandler
        var errorHandler = options.errorHandler;
        var locator = options.locator;
        var defaultNSMap = options.xmlns || {};
        var entityMap = { 'lt': '<', 'gt': '>', 'amp': '&', 'quot': '"', 'apos': "'" };
        if (locator) {
          domBuilder.setDocumentLocator(locator);
        }

        sax.errorHandler = buildErrorHandler(errorHandler, domBuilder, locator);
        sax.domBuilder = options.domBuilder || domBuilder;
        if (/\/x?html?$/.test(mimeType)) {
          entityMap.nbsp = '\xa0';
          entityMap.copy = '\xa9';
          defaultNSMap[''] = 'http://www.w3.org/1999/xhtml';
        }
        defaultNSMap.xml = defaultNSMap.xml || 'http://www.w3.org/XML/1998/namespace';
        if (source) {
          sax.parse(source, defaultNSMap, entityMap);
        } else {
          sax.errorHandler.error("invalid doc source");
        }
        return domBuilder.doc;
      };
      function buildErrorHandler(errorImpl, domBuilder, locator) {
        if (!errorImpl) {
          if (domBuilder instanceof DOMHandler) {
            return domBuilder;
          }
          errorImpl = domBuilder;
        }
        var errorHandler = {};
        var isCallback = errorImpl instanceof Function;
        locator = locator || {};
        function build(key) {
          var fn = errorImpl[key];
          if (!fn && isCallback) {
            fn = errorImpl.length == 2 ? function (msg) {errorImpl(key, msg);} : errorImpl;
          }
          errorHandler[key] = fn && function (msg) {
            fn('[xmldom ' + key + ']\t' + msg + _locator(locator));
          } || function () {};
        }
        build('warning');
        build('error');
        build('fatalError');
        return errorHandler;
      }

      //console.log('#\n\n\n\n\n\n\n####')
      /**
       * +ContentHandler+ErrorHandler
       * +LexicalHandler+EntityResolver2
       * -DeclHandler-DTDHandler 
       * 
       * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler
       * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2
       * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html
       */
      function DOMHandler() {
        this.cdata = false;
      }
      function position(locator, node) {
        node.lineNumber = locator.lineNumber;
        node.columnNumber = locator.columnNumber;
      }
      /**
         * @see org.xml.sax.ContentHandler#startDocument
         * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html
         */
      DOMHandler.prototype = {
        startDocument: function startDocument() {
          this.doc = new DOMImplementation().createDocument(null, null, null);
          if (this.locator) {
            this.doc.documentURI = this.locator.systemId;
          }
        },
        startElement: function startElement(namespaceURI, localName, qName, attrs) {
          var doc = this.doc;
          var el = doc.createElementNS(namespaceURI, qName || localName);
          var len = attrs.length;
          appendElement(this, el);
          this.currentElement = el;

          this.locator && position(this.locator, el);
          for (var i = 0; i < len; i++) {
            var namespaceURI = attrs.getURI(i);
            var value = attrs.getValue(i);
            var qName = attrs.getQName(i);
            var attr = doc.createAttributeNS(namespaceURI, qName);
            this.locator && position(attrs.getLocator(i), attr);
            attr.value = attr.nodeValue = value;
            el.setAttributeNode(attr);
          }
        },
        endElement: function endElement(namespaceURI, localName, qName) {
          var current = this.currentElement;
          var tagName = current.tagName;
          this.currentElement = current.parentNode;
        },
        startPrefixMapping: function startPrefixMapping(prefix, uri) {
        },
        endPrefixMapping: function endPrefixMapping(prefix) {
        },
        processingInstruction: function processingInstruction(target, data) {
          var ins = this.doc.createProcessingInstruction(target, data);
          this.locator && position(this.locator, ins);
          appendElement(this, ins);
        },
        ignorableWhitespace: function ignorableWhitespace(ch, start, length) {
        },
        characters: function characters(chars, start, length) {
          chars = _toString.apply(this, arguments);
          //console.log(chars)
          if (chars) {
            if (this.cdata) {
              var charNode = this.doc.createCDATASection(chars);
            } else {
              var charNode = this.doc.createTextNode(chars);
            }
            if (this.currentElement) {
              this.currentElement.appendChild(charNode);
            } else if (/^\s*$/.test(chars)) {
              this.doc.appendChild(charNode);
              //process xml
            }
            this.locator && position(this.locator, charNode);
          }
        },
        skippedEntity: function skippedEntity(name) {
        },
        endDocument: function endDocument() {
          this.doc.normalize();
        },
        setDocumentLocator: function setDocumentLocator(locator) {
          if (this.locator = locator) {// && !('lineNumber' in locator)){
            locator.lineNumber = 0;
          }
        },
        //LexicalHandler
        comment: function comment(chars, start, length) {
          chars = _toString.apply(this, arguments);
          var comm = this.doc.createComment(chars);
          this.locator && position(this.locator, comm);
          appendElement(this, comm);
        },

        startCDATA: function startCDATA() {
          //used in characters() methods
          this.cdata = true;
        },
        endCDATA: function endCDATA() {
          this.cdata = false;
        },

        startDTD: function startDTD(name, publicId, systemId) {
          var impl = this.doc.implementation;
          if (impl && impl.createDocumentType) {
            var dt = impl.createDocumentType(name, publicId, systemId);
            this.locator && position(this.locator, dt);
            appendElement(this, dt);
          }
        },
        /**
            * @see org.xml.sax.ErrorHandler
            * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html
            */
        warning: function warning(error) {
          console.warn('[xmldom warning]\t' + error, _locator(this.locator));
        },
        error: function error(_error) {
          console.error('[xmldom error]\t' + _error, _locator(this.locator));
        },
        fatalError: function fatalError(error) {
          console.error('[xmldom fatalError]\t' + error, _locator(this.locator));
          throw error;
        } };

      function _locator(l) {
        if (l) {
          return '\n@' + (l.systemId || '') + '#[line:' + l.lineNumber + ',col:' + l.columnNumber + ']';
        }
      }
      function _toString(chars, start, length) {
        if (typeof chars == 'string') {
          return chars.substr(start, length);
        } else {//java sax connect width xmldom on rhino(what about: "? && !(chars instanceof String)")
          if (chars.length >= start + length || start) {
            return new java.lang.String(chars, start, length) + '';
          }
          return chars;
        }
      }

      /*
         * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html
         * used method of org.xml.sax.ext.LexicalHandler:
         *  #comment(chars, start, length)
         *  #startCDATA()
         *  #endCDATA()
         *  #startDTD(name, publicId, systemId)
         *
         *
         * IGNORED method of org.xml.sax.ext.LexicalHandler:
         *  #endDTD()
         *  #startEntity(name)
         *  #endEntity(name)
         *
         *
         * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html
         * IGNORED method of org.xml.sax.ext.DeclHandler
         * 	#attributeDecl(eName, aName, type, mode, value)
         *  #elementDecl(name, model)
         *  #externalEntityDecl(name, publicId, systemId)
         *  #internalEntityDecl(name, value)
         * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html
         * IGNORED method of org.xml.sax.EntityResolver2
         *  #resolveEntity(String name,String publicId,String baseURI,String systemId)
         *  #resolveEntity(publicId, systemId)
         *  #getExternalSubset(name, baseURI)
         * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html
         * IGNORED method of org.xml.sax.DTDHandler
         *  #notationDecl(name, publicId, systemId) {};
         *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};
         */
      "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g, function (key) {
        DOMHandler.prototype[key] = function () {return null;};
      });

      /* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */
      function appendElement(hander, node) {
        if (!hander.currentElement) {
          hander.doc.appendChild(node);
        } else {
          hander.currentElement.appendChild(node);
        }
      } //appendChild and setAttributeNS are preformance key

      //if(typeof require == 'function'){
      var XMLReader = __webpack_require__(12).XMLReader;
      var DOMImplementation = exports.DOMImplementation = __webpack_require__(2).DOMImplementation;
      exports.XMLSerializer = __webpack_require__(2).XMLSerializer;
      exports.DOMParser = DOMParser;
      //}


      /***/},
    /* 12 */
    /***/function (module, exports) {

      //[4]   	NameStartChar	   ::=   	":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
      //[4a]   	NameChar	   ::=   	NameStartChar | "-" | "." | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]
      //[5]   	Name	   ::=   	NameStartChar (NameChar)*
      var nameStartChar = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/; //\u10000-\uEFFFF
      var nameChar = new RegExp("[\\-\\.0-9" + nameStartChar.source.slice(1, -1) + "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]");
      var tagNamePattern = new RegExp('^' + nameStartChar.source + nameChar.source + '*(?:\:' + nameStartChar.source + nameChar.source + '*)?$');
      //var tagNamePattern = /^[a-zA-Z_][\w\-\.]*(?:\:[a-zA-Z_][\w\-\.]*)?$/
      //var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')

      //S_TAG,	S_ATTR,	S_EQ,	S_ATTR_NOQUOT_VALUE
      //S_ATTR_SPACE,	S_ATTR_END,	S_TAG_SPACE, S_TAG_CLOSE
      var S_TAG = 0; //tag name offerring
      var S_ATTR = 1; //attr name offerring 
      var S_ATTR_SPACE = 2; //attr name end and space offer
      var S_EQ = 3; //=space?
      var S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)
      var S_ATTR_END = 5; //attr value end and no space(quot end)
      var S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)
      var S_TAG_CLOSE = 7; //closed el<el />

      function XMLReader() {

      }

      XMLReader.prototype = {
        parse: function parse(source, defaultNSMap, entityMap) {
          var domBuilder = this.domBuilder;
          domBuilder.startDocument();
          _copy(defaultNSMap, defaultNSMap = {});
          _parse(source, defaultNSMap, entityMap,
          domBuilder, this.errorHandler);
          domBuilder.endDocument();
        } };

      function _parse(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {
        function fixedFromCharCode(code) {
          // String.prototype.fromCharCode does not supports
          // > 2 bytes unicode chars directly
          if (code > 0xffff) {
            code -= 0x10000;
            var surrogate1 = 0xd800 + (code >> 10),
            surrogate2 = 0xdc00 + (code & 0x3ff);

            return String.fromCharCode(surrogate1, surrogate2);
          } else {
            return String.fromCharCode(code);
          }
        }
        function entityReplacer(a) {
          var k = a.slice(1, -1);
          if (k in entityMap) {
            return entityMap[k];
          } else if (k.charAt(0) === '#') {
            return fixedFromCharCode(parseInt(k.substr(1).replace('x', '0x')));
          } else {
            errorHandler.error('entity not found:' + a);
            return a;
          }
        }
        function appendText(end) {//has some bugs
          if (end > start) {
            var xt = source.substring(start, end).replace(/&#?\w+;/g, entityReplacer);
            locator && position(start);
            domBuilder.characters(xt, 0, end - start);
            start = end;
          }
        }
        function position(p, m) {
          while (p >= lineEnd && (m = linePattern.exec(source))) {
            lineStart = m.index;
            lineEnd = lineStart + m[0].length;
            locator.lineNumber++;
            //console.log('line++:',locator,startPos,endPos)
          }
          locator.columnNumber = p - lineStart + 1;
        }
        var lineStart = 0;
        var lineEnd = 0;
        var linePattern = /.*(?:\r\n?|\n)|.*$/g;
        var locator = domBuilder.locator;

        var parseStack = [{ currentNSMap: defaultNSMapCopy }];
        var closeMap = {};
        var start = 0;
        while (true) {
          try {
            var tagStart = source.indexOf('<', start);
            if (tagStart < 0) {
              if (!source.substr(start).match(/^\s*$/)) {
                var doc = domBuilder.doc;
                var text = doc.createTextNode(source.substr(start));
                doc.appendChild(text);
                domBuilder.currentElement = text;
              }
              return;
            }
            if (tagStart > start) {
              appendText(tagStart);
            }
            switch (source.charAt(tagStart + 1)) {
              case '/':
                var end = source.indexOf('>', tagStart + 3);
                var tagName = source.substring(tagStart + 2, end);
                var config = parseStack.pop();
                if (end < 0) {

                  tagName = source.substring(tagStart + 2).replace(/[\s<].*/, '');
                  //console.error('#@@@@@@'+tagName)
                  errorHandler.error("end tag name: " + tagName + ' is not complete:' + config.tagName);
                  end = tagStart + 1 + tagName.length;
                } else if (tagName.match(/\s</)) {
                  tagName = tagName.replace(/[\s<].*/, '');
                  errorHandler.error("end tag name: " + tagName + ' maybe not complete');
                  end = tagStart + 1 + tagName.length;
                }
                //console.error(parseStack.length,parseStack)
                //console.error(config);
                var localNSMap = config.localNSMap;
                var endMatch = config.tagName == tagName;
                var endIgnoreCaseMach = endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase();
                if (endIgnoreCaseMach) {
                  domBuilder.endElement(config.uri, config.localName, tagName);
                  if (localNSMap) {
                    for (var prefix in localNSMap) {
                      domBuilder.endPrefixMapping(prefix);
                    }
                  }
                  if (!endMatch) {
                    errorHandler.fatalError("end tag name: " + tagName + ' is not match the current start tagName:' + config.tagName);
                  }
                } else {
                  parseStack.push(config);
                }

                end++;
                break;
              // end elment
              case '?': // <?...?>
                locator && position(tagStart);
                end = parseInstruction(source, tagStart, domBuilder);
                break;
              case '!': // <!doctype,<![CDATA,<!--
                locator && position(tagStart);
                end = parseDCC(source, tagStart, domBuilder, errorHandler);
                break;
              default:
                locator && position(tagStart);
                var el = new ElementAttributes();
                var currentNSMap = parseStack[parseStack.length - 1].currentNSMap;
                //elStartEnd
                var end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);
                var len = el.length;


                if (!el.closed && fixSelfClosed(source, end, el.tagName, closeMap)) {
                  el.closed = true;
                  if (!entityMap.nbsp) {
                    errorHandler.warning('unclosed xml attribute');
                  }
                }
                if (locator && len) {
                  var locator2 = copyLocator(locator, {});
                  //try{//attribute position fixed
                  for (var i = 0; i < len; i++) {
                    var a = el[i];
                    position(a.offset);
                    a.locator = copyLocator(locator, {});
                  }
                  //}catch(e){console.error('@@@@@'+e)}
                  domBuilder.locator = locator2;
                  if (appendElement(el, domBuilder, currentNSMap)) {
                    parseStack.push(el);
                  }
                  domBuilder.locator = locator;
                } else {
                  if (appendElement(el, domBuilder, currentNSMap)) {
                    parseStack.push(el);
                  }
                }



                if (el.uri === 'http://www.w3.org/1999/xhtml' && !el.closed) {
                  end = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);
                } else {
                  end++;
                }}

          } catch (e) {
            errorHandler.error('element parse error: ' + e);
            //errorHandler.error('element parse error: '+e);
            end = -1;
            //throw e;
          }
          if (end > start) {
            start = end;
          } else {
            //TODO: 这里有可能sax回退，有位置错误风险
            appendText(Math.max(tagStart, start) + 1);
          }
        }
      }
      function copyLocator(f, t) {
        t.lineNumber = f.lineNumber;
        t.columnNumber = f.columnNumber;
        return t;
      }

      /**
         * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);
         * @return end of the elementStartPart(end of elementEndPart for selfClosed el)
         */
      function parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {
        var attrName;
        var value;
        var p = ++start;
        var s = S_TAG; //status
        while (true) {
          var c = source.charAt(p);
          switch (c) {
            case '=':
              if (s === S_ATTR) {//attrName
                attrName = source.slice(start, p);
                s = S_EQ;
              } else if (s === S_ATTR_SPACE) {
                s = S_EQ;
              } else {
                //fatalError: equal must after attrName or space after attrName
                throw new Error('attribute equal must after attrName');
              }
              break;
            case '\'':
            case '"':
              if (s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE
              ) {//equal
                  if (s === S_ATTR) {
                    errorHandler.warning('attribute value must after "="');
                    attrName = source.slice(start, p);
                  }
                  start = p + 1;
                  p = source.indexOf(c, start);
                  if (p > 0) {
                    value = source.slice(start, p).replace(/&#?\w+;/g, entityReplacer);
                    el.add(attrName, value, start - 1);
                    s = S_ATTR_END;
                  } else {
                    //fatalError: no end quot match
                    throw new Error('attribute value no end \'' + c + '\' match');
                  }
                } else if (s == S_ATTR_NOQUOT_VALUE) {
                value = source.slice(start, p).replace(/&#?\w+;/g, entityReplacer);
                //console.log(attrName,value,start,p)
                el.add(attrName, value, start);
                //console.dir(el)
                errorHandler.warning('attribute "' + attrName + '" missed start quot(' + c + ')!!');
                start = p + 1;
                s = S_ATTR_END;
              } else {
                //fatalError: no equal before
                throw new Error('attribute value must after "="');
              }
              break;
            case '/':
              switch (s) {
                case S_TAG:
                  el.setTagName(source.slice(start, p));
                case S_ATTR_END:
                case S_TAG_SPACE:
                case S_TAG_CLOSE:
                  s = S_TAG_CLOSE;
                  el.closed = true;
                case S_ATTR_NOQUOT_VALUE:
                case S_ATTR:
                case S_ATTR_SPACE:
                  break;
                //case S_EQ:
                default:
                  throw new Error("attribute invalid close char('/')");}

              break;
            case '': //end document
              //throw new Error('unexpected end of input')
              errorHandler.error('unexpected end of input');
              if (s == S_TAG) {
                el.setTagName(source.slice(start, p));
              }
              return p;
            case '>':
              switch (s) {
                case S_TAG:
                  el.setTagName(source.slice(start, p));
                case S_ATTR_END:
                case S_TAG_SPACE:
                case S_TAG_CLOSE:
                  break; //normal
                case S_ATTR_NOQUOT_VALUE: //Compatible state
                case S_ATTR:
                  value = source.slice(start, p);
                  if (value.slice(-1) === '/') {
                    el.closed = true;
                    value = value.slice(0, -1);
                  }
                case S_ATTR_SPACE:
                  if (s === S_ATTR_SPACE) {
                    value = attrName;
                  }
                  if (s == S_ATTR_NOQUOT_VALUE) {
                    errorHandler.warning('attribute "' + value + '" missed quot(")!!');
                    el.add(attrName, value.replace(/&#?\w+;/g, entityReplacer), start);
                  } else {
                    if (currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !value.match(/^(?:disabled|checked|selected)$/i)) {
                      errorHandler.warning('attribute "' + value + '" missed value!! "' + value + '" instead!!');
                    }
                    el.add(value, value, start);
                  }
                  break;
                case S_EQ:
                  throw new Error('attribute value missed!!');}

              //			console.log(tagName,tagNamePattern,tagNamePattern.test(tagName))
              return p;
            /*xml space '\x20' | #x9 | #xD | #xA; */
            case "\x80":
              c = ' ';
            default:
              if (c <= ' ') {//space
                switch (s) {
                  case S_TAG:
                    el.setTagName(source.slice(start, p)); //tagName
                    s = S_TAG_SPACE;
                    break;
                  case S_ATTR:
                    attrName = source.slice(start, p);
                    s = S_ATTR_SPACE;
                    break;
                  case S_ATTR_NOQUOT_VALUE:
                    var value = source.slice(start, p).replace(/&#?\w+;/g, entityReplacer);
                    errorHandler.warning('attribute "' + value + '" missed quot(")!!');
                    el.add(attrName, value, start);
                  case S_ATTR_END:
                    s = S_TAG_SPACE;
                    break;
                  //case S_TAG_SPACE:
                  //case S_EQ:
                  //case S_ATTR_SPACE:
                  //	void();break;
                  //case S_TAG_CLOSE:
                  //ignore warning
                }
              } else {//not space
                //S_TAG,	S_ATTR,	S_EQ,	S_ATTR_NOQUOT_VALUE
                //S_ATTR_SPACE,	S_ATTR_END,	S_TAG_SPACE, S_TAG_CLOSE
                switch (s) {
                  //case S_TAG:void();break;
                  //case S_ATTR:void();break;
                  //case S_ATTR_NOQUOT_VALUE:void();break;
                  case S_ATTR_SPACE:
                    var tagName = el.tagName;
                    if (currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !attrName.match(/^(?:disabled|checked|selected)$/i)) {
                      errorHandler.warning('attribute "' + attrName + '" missed value!! "' + attrName + '" instead2!!');
                    }
                    el.add(attrName, attrName, start);
                    start = p;
                    s = S_ATTR;
                    break;
                  case S_ATTR_END:
                    errorHandler.warning('attribute space is required"' + attrName + '"!!');
                  case S_TAG_SPACE:
                    s = S_ATTR;
                    start = p;
                    break;
                  case S_EQ:
                    s = S_ATTR_NOQUOT_VALUE;
                    start = p;
                    break;
                  case S_TAG_CLOSE:
                    throw new Error("elements closed character '/' and '>' must be connected to");}

              }}
          //end outer switch
          //console.log('p++',p)
          p++;
        }
      }
      /**
         * @return true if has new namespace define
         */
      function appendElement(el, domBuilder, currentNSMap) {
        var tagName = el.tagName;
        var localNSMap = null;
        //var currentNSMap = parseStack[parseStack.length-1].currentNSMap;
        var i = el.length;
        while (i--) {
          var a = el[i];
          var qName = a.qName;
          var value = a.value;
          var nsp = qName.indexOf(':');
          if (nsp > 0) {
            var prefix = a.prefix = qName.slice(0, nsp);
            var localName = qName.slice(nsp + 1);
            var nsPrefix = prefix === 'xmlns' && localName;
          } else {
            localName = qName;
            prefix = null;
            nsPrefix = qName === 'xmlns' && '';
          }
          //can not set prefix,because prefix !== ''
          a.localName = localName;
          //prefix == null for no ns prefix attribute 
          if (nsPrefix !== false) {//hack!!
            if (localNSMap == null) {
              localNSMap = {};
              //console.log(currentNSMap,0)
              _copy(currentNSMap, currentNSMap = {});
              //console.log(currentNSMap,1)
            }
            currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;
            a.uri = 'http://www.w3.org/2000/xmlns/';
            domBuilder.startPrefixMapping(nsPrefix, value);
          }
        }
        var i = el.length;
        while (i--) {
          a = el[i];
          var prefix = a.prefix;
          if (prefix) {//no prefix attribute has no namespace
            if (prefix === 'xml') {
              a.uri = 'http://www.w3.org/XML/1998/namespace';
            }if (prefix !== 'xmlns') {
              a.uri = currentNSMap[prefix || ''];

              //{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}
            }
          }
        }
        var nsp = tagName.indexOf(':');
        if (nsp > 0) {
          prefix = el.prefix = tagName.slice(0, nsp);
          localName = el.localName = tagName.slice(nsp + 1);
        } else {
          prefix = null; //important!!
          localName = el.localName = tagName;
        }
        //no prefix element has default namespace
        var ns = el.uri = currentNSMap[prefix || ''];
        domBuilder.startElement(ns, localName, tagName, el);
        //endPrefixMapping and startPrefixMapping have not any help for dom builder
        //localNSMap = null
        if (el.closed) {
          domBuilder.endElement(ns, localName, tagName);
          if (localNSMap) {
            for (prefix in localNSMap) {
              domBuilder.endPrefixMapping(prefix);
            }
          }
        } else {
          el.currentNSMap = currentNSMap;
          el.localNSMap = localNSMap;
          //parseStack.push(el);
          return true;
        }
      }
      function parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {
        if (/^(?:script|textarea)$/i.test(tagName)) {
          var elEndStart = source.indexOf('</' + tagName + '>', elStartEnd);
          var text = source.substring(elStartEnd + 1, elEndStart);
          if (/[&<]/.test(text)) {
            if (/^script$/i.test(tagName)) {
              //if(!/\]\]>/.test(text)){
              //lexHandler.startCDATA();
              domBuilder.characters(text, 0, text.length);
              //lexHandler.endCDATA();
              return elEndStart;
              //}
            } //}else{//text area
            text = text.replace(/&#?\w+;/g, entityReplacer);
            domBuilder.characters(text, 0, text.length);
            return elEndStart;
            //}

          }
        }
        return elStartEnd + 1;
      }
      function fixSelfClosed(source, elStartEnd, tagName, closeMap) {
        //if(tagName in closeMap){
        var pos = closeMap[tagName];
        if (pos == null) {
          //console.log(tagName)
          pos = source.lastIndexOf('</' + tagName + '>');
          if (pos < elStartEnd) {//忘记闭合
            pos = source.lastIndexOf('</' + tagName);
          }
          closeMap[tagName] = pos;
        }
        return pos < elStartEnd;
        //} 
      }
      function _copy(source, target) {
        for (var n in source) {target[n] = source[n];}
      }
      function parseDCC(source, start, domBuilder, errorHandler) {//sure start with '<!'
        var next = source.charAt(start + 2);
        switch (next) {
          case '-':
            if (source.charAt(start + 3) === '-') {
              var end = source.indexOf('-->', start + 4);
              //append comment source.substring(4,end)//<!--
              if (end > start) {
                domBuilder.comment(source, start + 4, end - start - 4);
                return end + 3;
              } else {
                errorHandler.error("Unclosed comment");
                return -1;
              }
            } else {
              //error
              return -1;
            }
          default:
            if (source.substr(start + 3, 6) == 'CDATA[') {
              var end = source.indexOf(']]>', start + 9);
              domBuilder.startCDATA();
              domBuilder.characters(source, start + 9, end - start - 9);
              domBuilder.endCDATA();
              return end + 3;
            }
            //<!DOCTYPE
            //startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) 
            var matchs = split(source, start);
            var len = matchs.length;
            if (len > 1 && /!doctype/i.test(matchs[0][0])) {
              var name = matchs[1][0];
              var pubid = len > 3 && /^public$/i.test(matchs[2][0]) && matchs[3][0];
              var sysid = len > 4 && matchs[4][0];
              var lastMatch = matchs[len - 1];
              domBuilder.startDTD(name, pubid && pubid.replace(/^(['"])(.*?)\1$/, '$2'),
              sysid && sysid.replace(/^(['"])(.*?)\1$/, '$2'));
              domBuilder.endDTD();

              return lastMatch.index + lastMatch[0].length;
            }}

        return -1;
      }



      function parseInstruction(source, start, domBuilder) {
        var end = source.indexOf('?>', start);
        if (end) {
          var match = source.substring(start, end).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
          if (match) {
            var len = match[0].length;
            domBuilder.processingInstruction(match[1], match[2]);
            return end + 2;
          } else {//error
            return -1;
          }
        }
        return -1;
      }

      /**
         * @param source
         */
      function ElementAttributes(source) {

      }
      ElementAttributes.prototype = {
        setTagName: function setTagName(tagName) {
          if (!tagNamePattern.test(tagName)) {
            throw new Error('invalid tagName:' + tagName);
          }
          this.tagName = tagName;
        },
        add: function add(qName, value, offset) {
          if (!tagNamePattern.test(qName)) {
            throw new Error('invalid attribute:' + qName);
          }
          this[this.length++] = { qName: qName, value: value, offset: offset };
        },
        length: 0,
        getLocalName: function getLocalName(i) {return this[i].localName;},
        getLocator: function getLocator(i) {return this[i].locator;},
        getQName: function getQName(i) {return this[i].qName;},
        getURI: function getURI(i) {return this[i].uri;},
        getValue: function getValue(i) {return this[i].value;}
        //	,getIndex:function(uri, localName)){
        //		if(localName){
        //			
        //		}else{
        //			var qName = uri
        //		}
        //	},
        //	getValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},
        //	getType:function(uri,localName){}
        //	getType:function(i){},
      };




      function _set_proto_(thiz, parent) {
        thiz.__proto__ = parent;
        return thiz;
      }
      if (!(_set_proto_({}, _set_proto_.prototype) instanceof _set_proto_)) {
        _set_proto_ = function _set_proto_(thiz, parent) {
          function p() {};
          p.prototype = parent;
          p = new p();
          for (parent in thiz) {
            p[parent] = thiz[parent];
          }
          return p;
        };
      }

      function split(source, start) {
        var match;
        var buf = [];
        var reg = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
        reg.lastIndex = start;
        reg.exec(source); //skip <
        while (match = reg.exec(source)) {
          buf.push(match);
          if (match[1]) return buf;
        }
      }

      exports.XMLReader = XMLReader;



      /***/},
    /* 13 */
    /***/function (module, exports, __webpack_require__) {

      var Async = __webpack_require__(14);
      var EventProxy = __webpack_require__(3).EventProxy;
      var util = __webpack_require__(0);

      // 抛弃分块上传任务
      /*
       AsyncLimit (抛弃上传任务的并发量)，
       UploadId (上传任务的编号，当 Level 为 task 时候需要)
       Level (抛弃分块上传任务的级别，task : 抛弃指定的上传任务，file ： 抛弃指定的文件对应的上传任务，其他值 ：抛弃指定Bucket 的全部上传任务)
       */
      function abortUploadTask(params, callback) {
        var Bucket = params.Bucket;
        var Region = params.Region;
        var Key = params.Key;
        var UploadId = params.UploadId;
        var Level = params.Level || 'task';
        var AsyncLimit = params.AsyncLimit;
        var self = this;

        var ep = new EventProxy();

        ep.on('error', function (errData) {
          return callback(errData);
        });

        // 已经获取到需要抛弃的任务列表
        ep.on('get_abort_array', function (AbortArray) {
          abortUploadTaskArray.call(self, {
            Bucket: Bucket,
            Region: Region,
            Key: Key,
            Headers: params.Headers,
            AsyncLimit: AsyncLimit,
            AbortArray: AbortArray },
          function (err, data) {
            if (err) {
              return callback(err);
            }
            callback(null, data);
          });
        });

        if (Level === 'bucket') {
          // Bucket 级别的任务抛弃，抛弃该 Bucket 下的全部上传任务
          wholeMultipartList.call(self, {
            Bucket: Bucket,
            Region: Region },
          function (err, data) {
            if (err) {
              return callback(err);
            }
            ep.emit('get_abort_array', data.UploadList || []);
          });
        } else if (Level === 'file') {
          // 文件级别的任务抛弃，抛弃该文件的全部上传任务
          if (!Key) return callback({ error: 'abort_upload_task_no_key' });
          wholeMultipartList.call(self, {
            Bucket: Bucket,
            Region: Region,
            Key: Key },
          function (err, data) {
            if (err) {
              return callback(err);
            }
            ep.emit('get_abort_array', data.UploadList || []);
          });
        } else if (Level === 'task') {
          // 单个任务级别的任务抛弃，抛弃指定 UploadId 的上传任务
          if (!UploadId) return callback({ error: 'abort_upload_task_no_id' });
          if (!Key) return callback({ error: 'abort_upload_task_no_key' });
          ep.emit('get_abort_array', [{
            Key: Key,
            UploadId: UploadId }]);

        } else {
          return callback({ error: 'abort_unknown_level' });
        }
      }

      // 批量抛弃分块上传任务
      function abortUploadTaskArray(params, callback) {

        var Bucket = params.Bucket;
        var Region = params.Region;
        var Key = params.Key;
        var AbortArray = params.AbortArray;
        var AsyncLimit = params.AsyncLimit || 1;
        var self = this;

        var index = 0;
        var resultList = new Array(AbortArray.length);
        Async.eachLimit(AbortArray, AsyncLimit, function (AbortItem, callback) {
          var eachIndex = index;
          if (Key && Key !== AbortItem.Key) {
            resultList[eachIndex] = { error: { KeyNotMatch: true } };
            callback(null);
            return;
          }
          var UploadId = AbortItem.UploadId || AbortItem.UploadID;

          self.multipartAbort({
            Bucket: Bucket,
            Region: Region,
            Key: AbortItem.Key,
            Headers: params.Headers,
            UploadId: UploadId },
          function (err, data) {
            var task = {
              Bucket: Bucket,
              Region: Region,
              Key: AbortItem.Key,
              UploadId: UploadId };

            resultList[eachIndex] = { error: err, task: task };
            callback(null);
          });
          index++;

        }, function (err) {
          if (err) {
            return callback(err);
          }

          var successList = [];
          var errorList = [];

          for (var i = 0, len = resultList.length; i < len; i++) {
            var item = resultList[i];
            if (item['task']) {
              if (item['error']) {
                errorList.push(item['task']);
              } else {
                successList.push(item['task']);
              }
            }
          }

          return callback(null, {
            successList: successList,
            errorList: errorList });

        });
      }

      // 获取符合条件的全部上传任务 (条件包括 Bucket, Region, Prefix)
      function wholeMultipartList(params, callback) {
        var self = this;
        var UploadList = [];
        var sendParams = {
          Bucket: params.Bucket,
          Region: params.Region,
          Prefix: params.Key };

        var next = function next() {
          self.multipartList(sendParams, function (err, data) {
            if (err) return callback(err);
            UploadList.push.apply(UploadList, data.Upload || []);
            if (data.IsTruncated == 'true') {// 列表不完整
              sendParams.KeyMarker = data.NextKeyMarker;
              sendParams.UploadIdMarker = data.NextUploadIdMarker;
              next();
            } else {
              callback(null, { UploadList: UploadList });
            }
          });
        };
        next();
      }


      // 分片复制文件
      function sliceCopyFile(params, callback) {
        var ep = new EventProxy();

        var self = this;
        var Bucket = params.Bucket;
        var Region = params.Region;
        var Key = params.Key;
        var CopySource = params.CopySource;
        var m = CopySource.match(/^([^.]+-\d+)\.cos(v6)?\.([^.]+)\.[^/]+\/(.+)$/);
        if (!m) {
          callback({ error: 'CopySource format error' });
          return;
        }

        var SourceBucket = m[1];
        var SourceRegion = m[3];
        var SourceKey = decodeURIComponent(m[4]);
        var CopySliceSize = params.SliceSize === undefined ? self.options.CopySliceSize : params.SliceSize;
        CopySliceSize = Math.max(0, Math.min(CopySliceSize, 5 * 1024 * 1024 * 1024));

        var ChunkSize = params.ChunkSize || this.options.CopyChunkSize;
        var ChunkParallel = this.options.CopyChunkParallelLimit;

        var FinishSize = 0;
        var FileSize;
        var _onProgress;

        // 分片复制完成，开始 multipartComplete 操作
        ep.on('copy_slice_complete', function (UploadData) {
          self.multipartComplete({
            Bucket: Bucket,
            Region: Region,
            Key: Key,
            UploadId: UploadData.UploadId,
            Parts: UploadData.PartList },
          function (err, data) {
            if (err) {
              _onProgress(null, true);
              return callback(err);
            }
            _onProgress({ loaded: FileSize, total: FileSize }, true);
            callback(null, data);
          });
        });

        ep.on('get_copy_data_finish', function (UploadData) {
          Async.eachLimit(UploadData.PartList, ChunkParallel, function (SliceItem, asyncCallback) {
            var PartNumber = SliceItem.PartNumber;
            var CopySourceRange = SliceItem.CopySourceRange;
            var currentSize = SliceItem.end - SliceItem.start;
            var preAddSize = 0;

            copySliceItem.call(self, {
              Bucket: Bucket,
              Region: Region,
              Key: Key,
              CopySource: CopySource,
              UploadId: UploadData.UploadId,
              PartNumber: PartNumber,
              CopySourceRange: CopySourceRange,
              onProgress: function onProgress(data) {
                FinishSize += data.loaded - preAddSize;
                preAddSize = data.loaded;
                _onProgress({ loaded: FinishSize, total: FileSize });
              } },
            function (err, data) {
              if (err) {
                return asyncCallback(err);
              }
              _onProgress({ loaded: FinishSize, total: FileSize });

              FinishSize += currentSize - preAddSize;
              SliceItem.ETag = data.ETag;
              asyncCallback(err || null, data);
            });
          }, function (err) {
            if (err) {
              _onProgress(null, true);
              return callback(err);
            }

            ep.emit('copy_slice_complete', UploadData);
          });
        });

        ep.on('get_file_size_finish', function (SourceHeaders) {
          // 控制分片大小
          (function () {
            var SIZE = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 1024 * 2, 1024 * 4, 1024 * 5];
            var AutoChunkSize = 1024 * 1024;
            for (var i = 0; i < SIZE.length; i++) {
              AutoChunkSize = SIZE[i] * 1024 * 1024;
              if (FileSize / AutoChunkSize <= self.options.MaxPartNumber) break;
            }
            params.ChunkSize = ChunkSize = Math.max(ChunkSize, AutoChunkSize);

            var ChunkCount = Math.ceil(FileSize / ChunkSize);

            var list = [];
            for (var partNumber = 1; partNumber <= ChunkCount; partNumber++) {
              var start = (partNumber - 1) * ChunkSize;
              var end = partNumber * ChunkSize < FileSize ? partNumber * ChunkSize - 1 : FileSize - 1;
              var item = {
                PartNumber: partNumber,
                start: start,
                end: end,
                CopySourceRange: "bytes=" + start + "-" + end };

              list.push(item);
            }
            params.PartList = list;
          })();

          var TargetHeader;
          if (params.Headers['x-cos-metadata-directive'] === 'Replaced') {
            TargetHeader = params.Headers;
          } else {
            TargetHeader = SourceHeaders;
          }
          TargetHeader['x-cos-storage-class'] = params.Headers['x-cos-storage-class'] || SourceHeaders['x-cos-storage-class'];
          TargetHeader = util.clearKey(TargetHeader);
          self.multipartInit({
            Bucket: Bucket,
            Region: Region,
            Key: Key,
            Headers: TargetHeader },
          function (err, data) {
            if (err) {
              return callback(err);
            }
            params.UploadId = data.UploadId;
            ep.emit('get_copy_data_finish', params);
          });
        });

        // 获取远端复制源文件的大小
        self.headObject({
          Bucket: SourceBucket,
          Region: SourceRegion,
          Key: SourceKey },
        function (err, data) {
          if (err) {
            if (err.statusCode && err.statusCode === 404) {
              callback({ ErrorStatus: SourceKey + ' Not Exist' });
            } else {
              callback(err);
            }
            return;
          }

          FileSize = params.FileSize = data.headers['content-length'];
          if (FileSize === undefined || !FileSize) {
            callback({ error: 'get Content-Length error, please add "Content-Length" to CORS ExposeHeader setting.' });
            return;
          }

          _onProgress = util.throttleOnProgress.call(self, FileSize, params.onProgress);

          // 开始上传
          if (FileSize <= CopySliceSize) {
            if (!params.Headers['x-cos-metadata-directive']) {
              params.Headers['x-cos-metadata-directive'] = 'Copy';
            }
            self.putObjectCopy(params, function (err, data) {
              if (err) {
                _onProgress(null, true);
                return callback(err);
              }
              _onProgress({ loaded: FileSize, total: FileSize }, true);
              callback(err, data);
            });
          } else {
            var resHeaders = data.headers;
            var SourceHeaders = {
              'Cache-Control': resHeaders['cache-control'],
              'Content-Disposition': resHeaders['content-disposition'],
              'Content-Encoding': resHeaders['content-encoding'],
              'Content-Type': resHeaders['content-type'],
              'Expires': resHeaders['expires'],
              'x-cos-storage-class': resHeaders['x-cos-storage-class'] };

            util.each(resHeaders, function (v, k) {
              var metaPrefix = 'x-cos-meta-';
              if (k.indexOf(metaPrefix) === 0 && k.length > metaPrefix.length) {
                SourceHeaders[k] = v;
              }
            });
            ep.emit('get_file_size_finish', SourceHeaders);
          }
        });
      }

      // 复制指定分片
      function copySliceItem(params, callback) {
        var TaskId = params.TaskId;
        var Bucket = params.Bucket;
        var Region = params.Region;
        var Key = params.Key;
        var CopySource = params.CopySource;
        var UploadId = params.UploadId;
        var PartNumber = params.PartNumber * 1;
        var CopySourceRange = params.CopySourceRange;

        var ChunkRetryTimes = this.options.ChunkRetryTimes + 1;
        var self = this;

        Async.retry(ChunkRetryTimes, function (tryCallback) {
          self.uploadPartCopy({
            TaskId: TaskId,
            Bucket: Bucket,
            Region: Region,
            Key: Key,
            CopySource: CopySource,
            UploadId: UploadId,
            PartNumber: PartNumber,
            CopySourceRange: CopySourceRange,
            onProgress: params.onProgress },
          function (err, data) {
            tryCallback(err || null, data);
          });
        }, function (err, data) {
          return callback(err, data);
        });
      }


      var API_MAP = {
        abortUploadTask: abortUploadTask,
        sliceCopyFile: sliceCopyFile };


      module.exports.init = function (COS, task) {
        util.each(API_MAP, function (fn, apiName) {
          COS.prototype[apiName] = util.apiWrapper(apiName, fn);
        });
      };


      /***/},
    /* 14 */
    /***/function (module, exports) {

      var eachLimit = function eachLimit(arr, limit, iterator, callback) {
        callback = callback || function () {};
        if (!arr.length || limit <= 0) {
          return callback();
        }

        var completed = 0;
        var started = 0;
        var running = 0;

        (function replenish() {
          if (completed >= arr.length) {
            return callback();
          }

          while (running < limit && started < arr.length) {
            started += 1;
            running += 1;
            iterator(arr[started - 1], function (err) {

              if (err) {
                callback(err);
                callback = function callback() {};
              } else {
                completed += 1;
                running -= 1;
                if (completed >= arr.length) {
                  callback();
                } else {
                  replenish();
                }
              }
            });
          }
        })();
      };

      var retry = function retry(times, iterator, callback) {
        var next = function next(index) {
          iterator(function (err, data) {
            if (err && index < times) {
              next(index + 1);
            } else {
              callback(err, data);
            }
          });
        };
        if (times < 1) {
          callback();
        } else {
          next(1);
        }
      };

      var async = {
        eachLimit: eachLimit,
        retry: retry };


      module.exports = async;

      /***/},
    /* 15 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var REQUEST = __webpack_require__(9);
      var base64 = __webpack_require__(1);
      var util = __webpack_require__(0);


      // Bucket 相关

      /**
       * 获取用户的 bucket 列表
       * @param  {Object}  params         回调函数，必须，下面为参数列表
       * 无特殊参数
       * @param  {Function}  callback     回调函数，必须
       */
      function getService(params, callback) {
        if (typeof params === 'function') {
          callback = params;
          params = {};
        }
        var protocol = 'https:';
        var domain = this.options.ServiceDomain;
        var appId = params.AppId || this.options.appId;
        var region = params.Region;
        if (domain) {
          domain = domain.replace(/\{\{AppId\}\}/ig, appId || '').
          replace(/\{\{Region\}\}/ig, region || '').replace(/\{\{.*?\}\}/ig, '');
          if (!/^[a-zA-Z]+:\/\//.test(domain)) {
            domain = protocol + '//' + domain;
          }
          if (domain.slice(-1) === '/') {
            domain = domain.slice(0, -1);
          }
        } else if (region) {
          domain = protocol + '//cos.' + region + '.myqcloud.com';
        } else {
          domain = protocol + '//service.cos.myqcloud.com';
        }

        submitRequest.call(this, {
          Action: 'name/cos:GetService',
          url: domain + '/',
          method: 'GET' },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var buckets = data && data.ListAllMyBucketsResult && data.ListAllMyBucketsResult.Buckets &&
          data.ListAllMyBucketsResult.Buckets.Bucket || [];
          buckets = util.isArray(buckets) ? buckets : [buckets];
          var owner = data && data.ListAllMyBucketsResult && data.ListAllMyBucketsResult.Owner || {};
          callback(null, {
            Buckets: buckets,
            Owner: owner,
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 查看是否存在该Bucket，是否有权限访问
         * @param  {Object}  params                     参数对象，必须
         *     @param  {String}  params.Bucket          Bucket名称，必须
         *     @param  {String}  params.Region          地域名称，必须
         * @param  {Function}  callback                 回调函数，必须
         * @return  {Object}  err                       请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                      返回的数据
         *     @return  {Boolean}  data.BucketExist     Bucket是否存在
         *     @return  {Boolean}  data.BucketAuth      是否有 Bucket 的访问权限
         */
      function headBucket(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:HeadBucket',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          method: 'HEAD' },
        function (err, data) {
          callback(err, data);
        });
      }

      /**
         * 获取 Bucket 下的 object 列表
         * @param  {Object}  params                         参数对象，必须
         *     @param  {String}  params.Bucket              Bucket名称，必须
         *     @param  {String}  params.Region              地域名称，必须
         *     @param  {String}  params.Prefix              前缀匹配，用来规定返回的文件前缀地址，非必须
         *     @param  {String}  params.Delimiter           定界符为一个符号，如果有Prefix，则将Prefix到delimiter之间的相同路径归为一类，非必须
         *     @param  {String}  params.Marker              默认以UTF-8二进制顺序列出条目，所有列出条目从marker开始，非必须
         *     @param  {String}  params.MaxKeys             单次返回最大的条目数量，默认1000，非必须
         *     @param  {String}  params.EncodingType        规定返回值的编码方式，非必须
         * @param  {Function}  callback                     回调函数，必须
         * @return  {Object}  err                           请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                          返回的数据
         *     @return  {Object}  data.ListBucketResult     返回的 object 列表信息
         */
      function getBucket(params, callback) {
        var reqParams = {};
        reqParams['prefix'] = params['Prefix'] || '';
        reqParams['delimiter'] = params['Delimiter'];
        reqParams['marker'] = params['Marker'];
        reqParams['max-keys'] = params['MaxKeys'];
        reqParams['encoding-type'] = params['EncodingType'];

        submitRequest.call(this, {
          Action: 'name/cos:GetBucket',
          ResourceKey: reqParams['prefix'],
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          qs: reqParams },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var ListBucketResult = data.ListBucketResult || {};
          var Contents = ListBucketResult.Contents || [];
          var CommonPrefixes = ListBucketResult.CommonPrefixes || [];

          Contents = util.isArray(Contents) ? Contents : [Contents];
          CommonPrefixes = util.isArray(CommonPrefixes) ? CommonPrefixes : [CommonPrefixes];

          var result = util.clone(ListBucketResult);
          util.extend(result, {
            Contents: Contents,
            CommonPrefixes: CommonPrefixes,
            statusCode: data.statusCode,
            headers: data.headers });


          callback(null, result);
        });
      }

      /**
         * 创建 Bucket，并初始化访问权限
         * @param  {Object}  params                         参数对象，必须
         *     @param  {String}  params.Bucket              Bucket名称，必须
         *     @param  {String}  params.Region              地域名称，必须
         *     @param  {String}  params.ACL                 用户自定义文件权限，可以设置：private，public-read；默认值：private，非必须
         *     @param  {String}  params.GrantRead           赋予被授权者读的权限，格式x-cos-grant-read: uin=" ",uin=" "，非必须
         *     @param  {String}  params.GrantWrite          赋予被授权者写的权限，格式x-cos-grant-write: uin=" ",uin=" "，非必须
         *     @param  {String}  params.GrantFullControl    赋予被授权者读写权限，格式x-cos-grant-full-control: uin=" ",uin=" "，非必须
         * @param  {Function}  callback                     回调函数，必须
         * @return  {Object}  err                           请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                          返回的数据
         *     @return  {String}  data.Location             操作地址
         */
      function putBucket(params, callback) {
        var self = this;
        var headers = {};
        headers['x-cos-acl'] = params['ACL'];
        headers['x-cos-grant-read'] = params['GrantRead'];
        headers['x-cos-grant-write'] = params['GrantWrite'];
        headers['x-cos-grant-read-acp'] = params['GrantReadAcp'];
        headers['x-cos-grant-write-acp'] = params['GrantWriteAcp'];
        headers['x-cos-grant-full-control'] = params['GrantFullControl'];
        submitRequest.call(this, {
          Action: 'name/cos:PutBucket',
          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: headers },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var url = getUrl({
            domain: self.options.Domain,
            bucket: params.Bucket,
            region: params.Region,
            isLocation: true });

          callback(null, {
            Location: url,
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 删除 Bucket
         * @param  {Object}  params                 参数对象，必须
         *     @param  {String}  params.Bucket      Bucket名称，必须
         *     @param  {String}  params.Region      地域名称，必须
         * @param  {Function}  callback             回调函数，必须
         * @return  {Object}  err                   请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                  返回的数据
         *     @return  {String}  data.Location     操作地址
         */
      function deleteBucket(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:DeleteBucket',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          method: 'DELETE' },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 获取 Bucket 的 权限列表
         * @param  {Object}  params                         参数对象，必须
         *     @param  {String}  params.Bucket              Bucket名称，必须
         *     @param  {String}  params.Region              地域名称，必须
         * @param  {Function}  callback                     回调函数，必须
         * @return  {Object}  err                           请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                          返回的数据
         *     @return  {Object}  data.AccessControlPolicy  访问权限信息
         */
      function getBucketAcl(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:GetBucketACL',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'acl' },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var AccessControlPolicy = data.AccessControlPolicy || {};
          var Owner = AccessControlPolicy.Owner || {};
          var Grant = AccessControlPolicy.AccessControlList.Grant || [];
          Grant = util.isArray(Grant) ? Grant : [Grant];
          var result = decodeAcl(AccessControlPolicy);
          if (data.headers && data.headers['x-cos-acl']) {
            result.ACL = data.headers['x-cos-acl'];
          }
          result = util.extend(result, {
            Owner: Owner,
            Grants: Grant,
            statusCode: data.statusCode,
            headers: data.headers });

          callback(null, result);
        });
      }

      /**
         * 设置 Bucket 的 权限列表
         * @param  {Object}  params                         参数对象，必须
         *     @param  {String}  params.Bucket              Bucket名称，必须
         *     @param  {String}  params.Region              地域名称，必须
         *     @param  {String}  params.ACL                 用户自定义文件权限，可以设置：private，public-read；默认值：private，非必须
         *     @param  {String}  params.GrantRead           赋予被授权者读的权限，格式x-cos-grant-read: uin=" ",uin=" "，非必须
         *     @param  {String}  params.GrantWrite          赋予被授权者写的权限，格式x-cos-grant-write: uin=" ",uin=" "，非必须
         *     @param  {String}  params.GrantFullControl    赋予被授权者读写权限，格式x-cos-grant-full-control: uin=" ",uin=" "，非必须
         * @param  {Function}  callback                     回调函数，必须
         * @return  {Object}  err                           请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                          返回的数据
         */
      function putBucketAcl(params, callback) {
        var headers = params.Headers;

        var xml = '';
        if (params['AccessControlPolicy']) {
          var AccessControlPolicy = util.clone(params['AccessControlPolicy'] || {});
          var Grants = AccessControlPolicy.Grants || AccessControlPolicy.Grant;
          Grants = util.isArray(Grants) ? Grants : [Grants];
          delete AccessControlPolicy.Grant;
          delete AccessControlPolicy.Grants;
          AccessControlPolicy.AccessControlList = { Grant: Grants };
          xml = util.json2xml({ AccessControlPolicy: AccessControlPolicy });

          headers['Content-Type'] = 'application/xml';
          headers['Content-MD5'] = util.binaryBase64(util.md5(xml));
        }

        // Grant Header 去重
        util.each(headers, function (val, key) {
          if (key.indexOf('x-cos-grant-') === 0) {
            headers[key] = uniqGrant(headers[key]);
          }
        });

        submitRequest.call(this, {
          Action: 'name/cos:PutBucketACL',
          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: headers,
          action: 'acl',
          body: xml },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 获取 Bucket 的 跨域设置
         * @param  {Object}  params                         参数对象，必须
         *     @param  {String}  params.Bucket              Bucket名称，必须
         *     @param  {String}  params.Region              地域名称，必须
         * @param  {Function}  callback                     回调函数，必须
         * @return  {Object}  err                           请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                          返回的数据
         *     @return  {Object}  data.CORSRules            Bucket的跨域设置
         */
      function getBucketCors(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:GetBucketCORS',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'cors' },
        function (err, data) {
          if (err) {
            if (err.statusCode === 404 && err.error && err.error.Code === 'NoSuchCORSConfiguration') {
              var result = {
                CORSRules: [],
                statusCode: err.statusCode };

              err.headers && (result.headers = err.headers);
              callback(null, result);
            } else {
              callback(err);
            }
            return;
          }
          var CORSConfiguration = data.CORSConfiguration || {};
          var CORSRules = CORSConfiguration.CORSRules || CORSConfiguration.CORSRule || [];
          CORSRules = util.clone(util.isArray(CORSRules) ? CORSRules : [CORSRules]);

          util.each(CORSRules, function (rule) {
            util.each(['AllowedOrigin', 'AllowedHeader', 'AllowedMethod', 'ExposeHeader'], function (key, j) {
              var sKey = key + 's';
              var val = rule[sKey] || rule[key] || [];
              delete rule[key];
              rule[sKey] = util.isArray(val) ? val : [val];
            });
          });

          callback(null, {
            CORSRules: CORSRules,
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 设置 Bucket 的 跨域设置
         * @param  {Object}  params                             参数对象，必须
         *     @param  {String}  params.Bucket                  Bucket名称，必须
         *     @param  {String}  params.Region                  地域名称，必须
         *     @param  {Object}  params.CORSConfiguration       相关的跨域设置，必须
         * @param  {Array}  params.CORSConfiguration.CORSRules  对应的跨域规则
         * @param  {Function}  callback                         回调函数，必须
         * @return  {Object}  err                               请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                              返回的数据
         */
      function putBucketCors(params, callback) {

        var CORSConfiguration = params['CORSConfiguration'] || {};
        var CORSRules = CORSConfiguration['CORSRules'] || params['CORSRules'] || [];
        CORSRules = util.clone(util.isArray(CORSRules) ? CORSRules : [CORSRules]);
        util.each(CORSRules, function (rule) {
          util.each(['AllowedOrigin', 'AllowedHeader', 'AllowedMethod', 'ExposeHeader'], function (key, k) {
            var sKey = key + 's';
            var val = rule[sKey] || rule[key] || [];
            delete rule[sKey];
            rule[key] = util.isArray(val) ? val : [val];
          });
        });

        var xml = util.json2xml({ CORSConfiguration: { CORSRule: CORSRules } });

        var headers = params.Headers;
        headers['Content-Type'] = 'application/xml';
        headers['Content-MD5'] = util.binaryBase64(util.md5(xml));

        submitRequest.call(this, {
          Action: 'name/cos:PutBucketCORS',
          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          body: xml,
          action: 'cors',
          headers: headers },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 删除 Bucket 的 跨域设置
         * @param  {Object}  params                 参数对象，必须
         *     @param  {String}  params.Bucket      Bucket名称，必须
         *     @param  {String}  params.Region      地域名称，必须
         * @param  {Function}  callback             回调函数，必须
         * @return  {Object}  err                   请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                  返回的数据
         */
      function deleteBucketCors(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:DeleteBucketCORS',
          method: 'DELETE',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'cors' },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode || err.statusCode,
            headers: data.headers });

        });
      }

      function putBucketPolicy(params, callback) {
        var Policy = params['Policy'];
        var PolicyStr = Policy;
        try {
          if (typeof Policy === 'string') {
            Policy = JSON.parse(PolicyStr);
          } else {
            PolicyStr = JSON.stringify(Policy);
          }
        } catch (e) {
          callback({ error: 'Policy format error' });
        }

        var headers = params.Headers;
        headers['Content-Type'] = 'application/json';
        headers['Content-MD5'] = util.binaryBase64(util.md5(PolicyStr));

        submitRequest.call(this, {
          Action: 'name/cos:PutBucketPolicy',
          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          action: 'policy',
          body: util.isBrowser ? PolicyStr : Policy,
          headers: headers,
          json: true },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 删除 Bucket 的 跨域设置
         * @param  {Object}  params                 参数对象，必须
         *     @param  {String}  params.Bucket      Bucket名称，必须
         *     @param  {String}  params.Region      地域名称，必须
         * @param  {Function}  callback             回调函数，必须
         * @return  {Object}  err                   请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                  返回的数据
         */
      function deleteBucketPolicy(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:DeleteBucketPolicy',
          method: 'DELETE',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'policy' },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode || err.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 获取 Bucket 的 地域信息
         * @param  {Object}  params             参数对象，必须
         *     @param  {String}  params.Bucket  Bucket名称，必须
         *     @param  {String}  params.Region  地域名称，必须
         * @param  {Function}  callback         回调函数，必须
         * @return  {Object}  err               请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data              返回数据，包含地域信息 LocationConstraint
         */
      function getBucketLocation(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:GetBucketLocation',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'location' },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          callback(null, data);
        });
      }

      /**
         * 获取 Bucket 的读取权限策略
         * @param  {Object}  params             参数对象，必须
         *     @param  {String}  params.Bucket  Bucket名称，必须
         *     @param  {String}  params.Region  地域名称，必须
         * @param  {Function}  callback         回调函数，必须
         * @return  {Object}  err               请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data              返回数据
         */
      function getBucketPolicy(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:GetBucketPolicy',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'policy',
          rawBody: true },
        function (err, data) {
          if (err) {
            if (err.statusCode && err.statusCode === 403) {
              return callback({ ErrorStatus: 'Access Denied' });
            }
            if (err.statusCode && err.statusCode === 405) {
              return callback({ ErrorStatus: 'Method Not Allowed' });
            }
            if (err.statusCode && err.statusCode === 404) {
              return callback({ ErrorStatus: 'Policy Not Found' });
            }
            return callback(err);
          }
          var Policy = {};
          try {
            Policy = JSON.parse(data.body);
          } catch (e) {
          }
          callback(null, {
            Policy: Policy,
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 获取 Bucket 的标签设置
         * @param  {Object}  params             参数对象，必须
         *     @param  {String}  params.Bucket  Bucket名称，必须
         *     @param  {String}  params.Region  地域名称，必须
         * @param  {Function}  callback         回调函数，必须
         * @return  {Object}  err               请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data              返回数据
         */
      function getBucketTagging(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:GetBucketTagging',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'tagging' },
        function (err, data) {
          if (err) {
            if (err.statusCode === 404 && err.error && (err.error === "Not Found" || err.error.Code === 'NoSuchTagSet')) {
              var result = {
                Tags: [],
                statusCode: err.statusCode };

              err.headers && (result.headers = err.headers);
              callback(null, result);
            } else {
              callback(err);
            }
            return;
          }
          var Tags = [];
          try {
            Tags = data.Tagging.TagSet.Tag || [];
          } catch (e) {
          }
          Tags = util.clone(util.isArray(Tags) ? Tags : [Tags]);
          callback(null, {
            Tags: Tags,
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 设置 Bucket 的标签
         * @param  {Object}  params             参数对象，必须
         *     @param  {String}  params.Bucket  Bucket名称，必须
         *     @param  {String}  params.Region  地域名称，必须
         *     @param  {Array}   params.TagSet  标签设置，必须
         * @param  {Function}  callback         回调函数，必须
         * @return  {Object}  err               请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data              返回数据
         */
      function putBucketTagging(params, callback) {

        var Tagging = params['Tagging'] || {};
        var Tags = Tagging.TagSet || Tagging.Tags || params['Tags'] || [];
        Tags = util.clone(util.isArray(Tags) ? Tags : [Tags]);
        var xml = util.json2xml({ Tagging: { TagSet: { Tag: Tags } } });

        var headers = params.Headers;
        headers['Content-Type'] = 'application/xml';
        headers['Content-MD5'] = util.binaryBase64(util.md5(xml));

        submitRequest.call(this, {
          Action: 'name/cos:PutBucketTagging',
          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          body: xml,
          action: 'tagging',
          headers: headers },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }


      /**
         * 删除 Bucket 的 标签设置
         * @param  {Object}  params             参数对象，必须
         *     @param  {String}  params.Bucket  Bucket名称，必须
         *     @param  {String}  params.Region  地域名称，必须
         * @param  {Function}  callback         回调函数，必须
         * @return  {Object}  err               请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data              返回的数据
         */
      function deleteBucketTagging(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:DeleteBucketTagging',
          method: 'DELETE',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'tagging' },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      function putBucketLifecycle(params, callback) {

        var LifecycleConfiguration = params['LifecycleConfiguration'] || {};
        var Rules = LifecycleConfiguration.Rules || params.Rules || [];
        Rules = util.clone(Rules);
        var xml = util.json2xml({ LifecycleConfiguration: { Rule: Rules } });

        var headers = params.Headers;
        headers['Content-Type'] = 'application/xml';
        headers['Content-MD5'] = util.binaryBase64(util.md5(xml));

        submitRequest.call(this, {
          Action: 'name/cos:PutBucketLifecycle',
          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          body: xml,
          action: 'lifecycle',
          headers: headers },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      function getBucketLifecycle(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:GetBucketLifecycle',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'lifecycle' },
        function (err, data) {
          if (err) {
            if (err.statusCode === 404 && err.error && err.error.Code === 'NoSuchLifecycleConfiguration') {
              var result = {
                Rules: [],
                statusCode: err.statusCode };

              err.headers && (result.headers = err.headers);
              callback(null, result);
            } else {
              callback(err);
            }
            return;
          }
          var Rules = [];
          try {
            Rules = data.LifecycleConfiguration.Rule || [];
          } catch (e) {
          }
          Rules = util.clone(util.isArray(Rules) ? Rules : [Rules]);
          callback(null, {
            Rules: Rules,
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      function deleteBucketLifecycle(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:DeleteBucketLifecycle',
          method: 'DELETE',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'lifecycle' },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      function putBucketVersioning(params, callback) {

        if (!params['VersioningConfiguration']) {
          callback({ error: 'missing param VersioningConfiguration' });
          return;
        }
        var VersioningConfiguration = params['VersioningConfiguration'] || {};
        var xml = util.json2xml({ VersioningConfiguration: VersioningConfiguration });

        var headers = params.Headers;
        headers['Content-Type'] = 'application/xml';
        headers['Content-MD5'] = util.binaryBase64(util.md5(xml));

        submitRequest.call(this, {
          Action: 'name/cos:PutBucketVersioning',
          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          body: xml,
          action: 'versioning',
          headers: headers },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      function getBucketVersioning(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:GetBucketVersioning',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'versioning' },
        function (err, data) {
          if (!err) {
            !data.VersioningConfiguration && (data.VersioningConfiguration = {});
          }
          callback(err, data);
        });
      }

      function putBucketReplication(params, callback) {
        var ReplicationConfiguration = util.clone(params.ReplicationConfiguration);
        var xml = util.json2xml({ ReplicationConfiguration: ReplicationConfiguration });
        xml = xml.replace(/<(\/?)Rules>/ig, '<$1Rule>');
        xml = xml.replace(/<(\/?)Tags>/ig, '<$1Tag>');

        var headers = params.Headers;
        headers['Content-Type'] = 'application/xml';
        headers['Content-MD5'] = util.binaryBase64(util.md5(xml));

        submitRequest.call(this, {
          Action: 'name/cos:PutBucketReplication',
          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          body: xml,
          action: 'replication',
          headers: headers },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      function getBucketReplication(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:GetBucketReplication',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'replication' },
        function (err, data) {
          if (err) {
            if (err.statusCode === 404 && err.error && (err.error === 'Not Found' || err.error.Code === 'ReplicationConfigurationnotFoundError')) {
              var result = {
                ReplicationConfiguration: { Rules: [] },
                statusCode: err.statusCode };

              err.headers && (result.headers = err.headers);
              callback(null, result);
            } else {
              callback(err);
            }
            return;
          }
          if (!err) {
            !data.ReplicationConfiguration && (data.ReplicationConfiguration = {});
          }
          if (data.ReplicationConfiguration.Rule) {
            data.ReplicationConfiguration.Rules = data.ReplicationConfiguration.Rule;
            delete data.ReplicationConfiguration.Rule;
          }
          callback(err, data);
        });
      }

      function deleteBucketReplication(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:DeleteBucketReplication',
          method: 'DELETE',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          action: 'replication' },
        function (err, data) {
          if (err && err.statusCode === 204) {
            return callback(null, { statusCode: err.statusCode });
          } else if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      // Object 相关

      /**
       * 取回对应Object的元数据，Head的权限与Get的权限一致
       * @param  {Object}  params                         参数对象，必须
       *     @param  {String}  params.Bucket              Bucket名称，必须
       *     @param  {String}  params.Region              地域名称，必须
       *     @param  {String}  params.Key                 文件名称，必须
       *     @param  {String}  params.IfModifiedSince     当Object在指定时间后被修改，则返回对应Object元信息，否则返回304，非必须
       * @param  {Function}  callback                     回调函数，必须
       * @return  {Object}  err                           请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
       * @return  {Object}  data                          为指定 object 的元数据，如果设置了 IfModifiedSince ，且文件未修改，则返回一个对象，NotModified 属性为 true
       *     @return  {Boolean}  data.NotModified         是否在 IfModifiedSince 时间点之后未修改该 object，则为 true
       */
      function headObject(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:HeadObject',
          method: 'HEAD',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          VersionId: params.VersionId,
          headers: params.Headers },
        function (err, data) {
          if (err) {
            var statusCode = err.statusCode;
            if (params.Headers['If-Modified-Since'] && statusCode && statusCode === 304) {
              return callback(null, {
                NotModified: true,
                statusCode: statusCode });

            }
            return callback(err);
          }
          if (data.headers) {
            var headers = data.headers;
            data.ETag = headers.etag || headers.Etag || headers.ETag || '';
          }
          callback(null, data);
        });
      }


      function listObjectVersions(params, callback) {
        var reqParams = {};
        reqParams['prefix'] = params['Prefix'] || '';
        reqParams['delimiter'] = params['Delimiter'];
        reqParams['key-marker'] = params['KeyMarker'];
        reqParams['version-id-marker'] = params['VersionIdMarker'];
        reqParams['max-keys'] = params['MaxKeys'];
        reqParams['encoding-type'] = params['EncodingType'];

        submitRequest.call(this, {
          Action: 'name/cos:GetBucketObjectVersions',
          ResourceKey: reqParams['prefix'],
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          qs: reqParams,
          action: 'versions' },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var ListVersionsResult = data.ListVersionsResult || {};
          var DeleteMarkers = ListVersionsResult.DeleteMarker || [];
          DeleteMarkers = util.isArray(DeleteMarkers) ? DeleteMarkers : [DeleteMarkers];
          var Versions = ListVersionsResult.Version || [];
          Versions = util.isArray(Versions) ? Versions : [Versions];

          var result = util.clone(ListVersionsResult);
          delete result.DeleteMarker;
          delete result.Version;
          util.extend(result, {
            DeleteMarkers: DeleteMarkers,
            Versions: Versions,
            statusCode: data.statusCode,
            headers: data.headers });


          callback(null, result);
        });
      }

      /**
         * 下载 object
         * @param  {Object}  params                                 参数对象，必须
         *     @param  {String}  params.Bucket                      Bucket名称，必须
         *     @param  {String}  params.Region                      地域名称，必须
         *     @param  {String}  params.Key                         文件名称，必须
         *     @param  {WriteStream}  params.Output                 文件写入流，非必须
         *     @param  {String}  params.IfModifiedSince             当Object在指定时间后被修改，则返回对应Object元信息，否则返回304，非必须
         *     @param  {String}  params.IfUnmodifiedSince           如果文件修改时间早于或等于指定时间，才返回文件内容。否则返回 412 (precondition failed)，非必须
         *     @param  {String}  params.IfMatch                     当 ETag 与指定的内容一致，才返回文件。否则返回 412 (precondition failed)，非必须
         *     @param  {String}  params.IfNoneMatch                 当 ETag 与指定的内容不一致，才返回文件。否则返回304 (not modified)，非必须
         *     @param  {String}  params.ResponseContentType         设置返回头部中的 Content-Type 参数，非必须
         *     @param  {String}  params.ResponseContentLanguage     设置返回头部中的 Content-Language 参数，非必须
         *     @param  {String}  params.ResponseExpires             设置返回头部中的 Content-Expires 参数，非必须
         *     @param  {String}  params.ResponseCacheControl        设置返回头部中的 Cache-Control 参数，非必须
         *     @param  {String}  params.ResponseContentDisposition  设置返回头部中的 Content-Disposition 参数，非必须
         *     @param  {String}  params.ResponseContentEncoding     设置返回头部中的 Content-Encoding 参数，非必须
         * @param  {Function}  callback                             回调函数，必须
         * @param  {Object}  err                                    请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @param  {Object}  data                                   为对应的 object 数据，包括 body 和 headers
         */
      function getObject(params, callback) {
        var reqParams = {};

        reqParams['response-content-type'] = params['ResponseContentType'];
        reqParams['response-content-language'] = params['ResponseContentLanguage'];
        reqParams['response-expires'] = params['ResponseExpires'];
        reqParams['response-cache-control'] = params['ResponseCacheControl'];
        reqParams['response-content-disposition'] = params['ResponseContentDisposition'];
        reqParams['response-content-encoding'] = params['ResponseContentEncoding'];

        // 如果用户自己传入了 output
        submitRequest.call(this, {
          Action: 'name/cos:GetObject',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          VersionId: params.VersionId,
          headers: params.Headers,
          qs: reqParams,
          rawBody: true },
        function (err, data) {
          if (err) {
            var statusCode = err.statusCode;
            if (params.Headers['If-Modified-Since'] && statusCode && statusCode === 304) {
              return callback(null, {
                NotModified: true });

            }
            return callback(err);
          }
          var result = {};
          result.Body = data.body;

          if (data && data.headers) {
            var headers = data.headers;
            result.ETag = headers.etag || headers.Etag || headers.ETag || '';
          }
          util.extend(result, {
            statusCode: data.statusCode,
            headers: data.headers });

          callback(null, result);
        });

      }

      /**
         * 上传 object
         * @param  {Object} params                                          参数对象，必须
         *     @param  {String}  params.Bucket                              Bucket名称，必须
         *     @param  {String}  params.Region                              地域名称，必须
         *     @param  {String}  params.Key                                 文件名称，必须
         *     @param  {String}  params.Body                                上传文件的内容，只支持字符串
         *     @param  {String}  params.CacheControl                        RFC 2616 中定义的缓存策略，将作为 Object 元数据保存，非必须
         *     @param  {String}  params.ContentDisposition                  RFC 2616 中定义的文件名称，将作为 Object 元数据保存，非必须
         *     @param  {String}  params.ContentEncoding                     RFC 2616 中定义的编码格式，将作为 Object 元数据保存，非必须
         *     @param  {String}  params.ContentLength                       RFC 2616 中定义的 HTTP 请求内容长度（字节），必须
         *     @param  {String}  params.ContentType                         RFC 2616 中定义的内容类型（MIME），将作为 Object 元数据保存，非必须
         *     @param  {String}  params.Expect                              当使用 Expect: 100-continue 时，在收到服务端确认后，才会发送请求内容，非必须
         *     @param  {String}  params.Expires                             RFC 2616 中定义的过期时间，将作为 Object 元数据保存，非必须
         *     @param  {String}  params.ContentSha1                         RFC 3174 中定义的 160-bit 内容 SHA-1 算法校验，非必须
         *     @param  {String}  params.ACL                                 允许用户自定义文件权限，有效值：private | public-read，非必须
         *     @param  {String}  params.GrantRead                           赋予被授权者读的权限，格式 x-cos-grant-read: uin=" ",uin=" "，非必须
         *     @param  {String}  params.GrantWrite                          赋予被授权者写的权限，格式 x-cos-grant-write: uin=" ",uin=" "，非必须
         *     @param  {String}  params.GrantFullControl                    赋予被授权者读写权限，格式 x-cos-grant-full-control: uin=" ",uin=" "，非必须
         *     @param  {String}  params.ServerSideEncryption               支持按照指定的加密算法进行服务端数据加密，格式 x-cos-server-side-encryption: "AES256"，非必须
         *     @param  {Function}  params.onProgress                        上传进度回调函数
         * @param  {Function}  callback                                     回调函数，必须
         * @return  {Object}  err                                           请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                                          为对应的 object 数据
         *     @return  {String}  data.ETag                                 为对应上传文件的 ETag 值
         */
      function putObject(params, callback) {
        var self = this;
        var FileSize = params.ContentLength;
        var onProgress = util.throttleOnProgress.call(self, FileSize, params.onProgress);

        util.getBodyMd5(self.options.UploadCheckContentMd5, params.Body, function (md5) {
          md5 && (params.Headers['Content-MD5'] = util.binaryBase64(md5));
          if (params.ContentLength !== undefined) {
            params.Headers['Content-Length'] = params.ContentLength;
          }
          submitRequest.call(self, {
            Action: 'name/cos:PutObject',
            TaskId: params.TaskId,
            method: 'PUT',
            Bucket: params.Bucket,
            Region: params.Region,
            Key: params.Key,
            headers: params.Headers,
            body: params.Body,
            onProgress: onProgress },
          function (err, data) {
            if (err) {
              onProgress(null, true);
              return callback(err);
            }
            onProgress({ loaded: FileSize, total: FileSize }, true);

            if (data && data.headers) {
              var headers = data.headers;
              var ETag = headers.etag || headers.Etag || headers.ETag || '';

              var url = getUrl({
                ForcePathStyle: self.options.ForcePathStyle,
                protocol: self.options.Protocol,
                domain: self.options.Domain,
                bucket: params.Bucket,
                region: params.Region,
                object: params.Key });

              url = url.substr(url.indexOf('://') + 3);
              return callback(null, {
                Location: url,
                ETag: ETag,
                statusCode: data.statusCode,
                headers: headers });

            }
            callback(null, data);
          });
        });
      }

      /**
         * 上传 object
         * @param  {Object} params                                          参数对象，必须
         *     @param  {String}  params.Bucket                              Bucket名称，必须
         *     @param  {String}  params.Region                              地域名称，必须
         *     @param  {String}  params.Key                                 文件名称，必须
         *     @param  {FilePath}  params.FilePath                          要上传的文件路径
         *     @param  {Function}  params.onProgress                        上传进度回调函数
         * @param  {Function}  callback                                     回调函数，必须
         * @return  {Object}  err                                           请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                                          为对应的 object 数据
         *     @return  {String}  data.ETag                                 为对应上传文件的 ETag 值
         */
      function postObject(params, callback) {
        var self = this;
        var headers = {};

        headers['Cache-Control'] = params['CacheControl'];
        headers['Content-Disposition'] = params['ContentDisposition'];
        headers['Content-Encoding'] = params['ContentEncoding'];
        headers['Content-MD5'] = params['ContentMD5'];
        headers['Content-Length'] = params['ContentLength'];
        headers['Content-Type'] = params['ContentType'];
        headers['Expect'] = params['Expect'];
        headers['Expires'] = params['Expires'];
        headers['x-cos-acl'] = params['ACL'];
        headers['x-cos-grant-read'] = params['GrantRead'];
        headers['x-cos-grant-write'] = params['GrantWrite'];
        headers['x-cos-grant-full-control'] = params['GrantFullControl'];
        headers['x-cos-storage-class'] = params['StorageClass'];

        var filePath = params.FilePath;
        for (var key in params) {
          if (key.indexOf('x-cos-meta-') > -1) {
            headers[key] = params[key];
          }
        }

        var onProgress = util.throttleOnProgress.call(self, headers['Content-Length'], params.onProgress);

        submitRequest.call(this, {
          Action: 'name/cos:PostObject',
          method: 'POST',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          headers: headers,
          filePath: filePath,
          onProgress: onProgress },
        function (err, data) {
          onProgress(null, true);
          if (err) {
            return callback(err);
          }
          if (data && data.headers) {
            var headers = data.headers;
            var ETag = headers.etag || headers.Etag || headers.ETag || '';

            var url = getUrl({
              ForcePathStyle: self.options.ForcePathStyle,
              protocol: self.options.Protocol,
              domain: self.options.Domain,
              bucket: params.Bucket,
              region: params.Region,
              object: params.Key,
              isLocation: true });


            return callback(null, {
              Location: url,
              statusCode: data.statusCode,
              headers: headers,
              ETag: ETag });

          }
          callback(null, data);
        });
      }

      /**
         * 删除 object
         * @param  {Object}  params                     参数对象，必须
         *     @param  {String}  params.Bucket          Bucket名称，必须
         *     @param  {String}  params.Region          地域名称，必须
         *     @param  {String}  params.Key             object名称，必须
         * @param  {Function}  callback                 回调函数，必须
         * @param  {Object}  err                        请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @param  {Object}  data                       删除操作成功之后返回的数据
         */
      function deleteObject(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:DeleteObject',
          method: 'DELETE',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          headers: params.Headers,
          VersionId: params.VersionId },
        function (err, data) {
          if (err) {
            var statusCode = err.statusCode;
            if (statusCode && statusCode === 204) {
              return callback(null, { statusCode: statusCode });
            } else if (statusCode && statusCode === 404) {
              return callback(null, { BucketNotFound: true, statusCode: statusCode });
            } else {
              return callback(err);
            }
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 获取 object 的 权限列表
         * @param  {Object}  params                         参数对象，必须
         *     @param  {String}  params.Bucket              Bucket名称，必须
         *     @param  {String}  params.Region              地域名称，必须
         *     @param  {String}  params.Key                 object名称，必须
         * @param  {Function}  callback                     回调函数，必须
         * @return  {Object}  err                           请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                          返回的数据
         *     @return  {Object}  data.AccessControlPolicy  权限列表
         */
      function getObjectAcl(params, callback) {

        submitRequest.call(this, {
          Action: 'name/cos:GetObjectACL',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          headers: params.Headers,
          action: 'acl' },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var AccessControlPolicy = data.AccessControlPolicy || {};
          var Owner = AccessControlPolicy.Owner || {};
          var Grant = AccessControlPolicy.AccessControlList && AccessControlPolicy.AccessControlList.Grant || [];
          Grant = util.isArray(Grant) ? Grant : [Grant];
          var result = decodeAcl(AccessControlPolicy);
          if (data.headers && data.headers['x-cos-acl']) {
            result.ACL = data.headers['x-cos-acl'];
          }
          result = util.extend(result, {
            Owner: Owner,
            Grants: Grant,
            statusCode: data.statusCode,
            headers: data.headers });

          callback(null, result);
        });
      }

      /**
         * 设置 object 的 权限列表
         * @param  {Object}  params             参数对象，必须
         *     @param  {String}  params.Bucket  Bucket名称，必须
         *     @param  {String}  params.Region  地域名称，必须
         *     @param  {String}  params.Key     object名称，必须
         * @param  {Function}  callback         回调函数，必须
         * @return  {Object}  err               请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data              返回的数据
         */
      function putObjectAcl(params, callback) {
        var headers = params.Headers;

        var xml = '';
        if (params['AccessControlPolicy']) {
          var AccessControlPolicy = util.clone(params['AccessControlPolicy'] || {});
          var Grants = AccessControlPolicy.Grants || AccessControlPolicy.Grant;
          Grants = util.isArray(Grants) ? Grants : [Grants];
          delete AccessControlPolicy.Grant;
          delete AccessControlPolicy.Grants;
          AccessControlPolicy.AccessControlList = { Grant: Grants };
          xml = util.json2xml({ AccessControlPolicy: AccessControlPolicy });

          headers['Content-Type'] = 'application/xml';
          headers['Content-MD5'] = util.binaryBase64(util.md5(xml));
        }

        // Grant Header 去重
        util.each(headers, function (val, key) {
          if (key.indexOf('x-cos-grant-') === 0) {
            headers[key] = uniqGrant(headers[key]);
          }
        });

        submitRequest.call(this, {
          Action: 'name/cos:PutObjectACL',
          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          action: 'acl',
          headers: headers,
          body: xml },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * Options Object请求实现跨域访问的预请求。即发出一个 OPTIONS 请求给服务器以确认是否可以进行跨域操作。
         * @param  {Object}  params             参数对象，必须
         *     @param  {String}  params.Bucket  Bucket名称，必须
         *     @param  {String}  params.Region  地域名称，必须
         *     @param  {String}  params.Key     object名称，必须
         * @param  {Function}  callback         回调函数，必须
         * @return  {Object}  err               请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data              返回的数据
         */
      function optionsObject(params, callback) {

        var headers = params.Headers;
        headers['Origin'] = params['Origin'];
        headers['Access-Control-Request-Method'] = params['AccessControlRequestMethod'];
        headers['Access-Control-Request-Headers'] = params['AccessControlRequestHeaders'];

        submitRequest.call(this, {
          Action: 'name/cos:OptionsObject',
          method: 'OPTIONS',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          headers: headers },
        function (err, data) {
          if (err) {
            if (err.statusCode && err.statusCode === 403) {
              return callback(null, {
                OptionsForbidden: true,
                statusCode: err.statusCode });

            }
            return callback(err);
          }

          var headers = data.headers || {};
          callback(null, {
            AccessControlAllowOrigin: headers['access-control-allow-origin'],
            AccessControlAllowMethods: headers['access-control-allow-methods'],
            AccessControlAllowHeaders: headers['access-control-allow-headers'],
            AccessControlExposeHeaders: headers['access-control-expose-headers'],
            AccessControlMaxAge: headers['access-control-max-age'],
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * @param  {Object}                                     参数列表
         *     @param  {String}  Bucket                         Bucket 名称
         *     @param  {String}  Region                         地域名称
         *     @param  {String}  Key                            文件名称
         *     @param  {String}  CopySource                     源文件URL绝对路径，可以通过versionid子资源指定历史版本
         *     @param  {String}  ACL                            允许用户自定义文件权限。有效值：private，public-read默认值：private。
         *     @param  {String}  GrantRead                      赋予被授权者读的权限，格式 x-cos-grant-read: uin=" ",uin=" "，当需要给子账户授权时，uin="RootAcountID/SubAccountID"，当需要给根账户授权时，uin="RootAcountID"。
         *     @param  {String}  GrantWrite                     赋予被授权者写的权限，格式 x-cos-grant-write: uin=" ",uin=" "，当需要给子账户授权时，uin="RootAcountID/SubAccountID"，当需要给根账户授权时，uin="RootAcountID"。
         *     @param  {String}  GrantFullControl               赋予被授权者读写权限，格式 x-cos-grant-full-control: uin=" ",uin=" "，当需要给子账户授权时，uin="RootAcountID/SubAccountID"，当需要给根账户授权时，uin="RootAcountID"。
         *     @param  {String}  MetadataDirective              是否拷贝元数据，枚举值：Copy, Replaced，默认值Copy。假如标记为Copy，忽略Header中的用户元数据信息直接复制；假如标记为Replaced，按Header信息修改元数据。当目标路径和原路径一致，即用户试图修改元数据时，必须为Replaced
         *     @param  {String}  CopySourceIfModifiedSince      当Object在指定时间后被修改，则执行操作，否则返回412。可与x-cos-copy-source-If-None-Match一起使用，与其他条件联合使用返回冲突。
         *     @param  {String}  CopySourceIfUnmodifiedSince    当Object在指定时间后未被修改，则执行操作，否则返回412。可与x-cos-copy-source-If-Match一起使用，与其他条件联合使用返回冲突。
         *     @param  {String}  CopySourceIfMatch              当Object的ETag和给定一致时，则执行操作，否则返回412。可与x-cos-copy-source-If-Unmodified-Since一起使用，与其他条件联合使用返回冲突。
         *     @param  {String}  CopySourceIfNoneMatch          当Object的ETag和给定不一致时，则执行操作，否则返回412。可与x-cos-copy-source-If-Modified-Since一起使用，与其他条件联合使用返回冲突。
         *     @param  {String}  StorageClass                   存储级别，枚举值：存储级别，枚举值：Standard, Standard_IA，Archive；默认值：Standard
         *     @param  {String}  CacheControl                   指定所有缓存机制在整个请求/响应链中必须服从的指令。
         *     @param  {String}  ContentDisposition             MIME 协议的扩展，MIME 协议指示 MIME 用户代理如何显示附加的文件
         *     @param  {String}  ContentEncoding                HTTP 中用来对「采用何种编码格式传输正文」进行协定的一对头部字段
         *     @param  {String}  ContentLength                  设置响应消息的实体内容的大小，单位为字节
         *     @param  {String}  ContentType                    RFC 2616 中定义的 HTTP 请求内容类型（MIME），例如text/plain
         *     @param  {String}  Expect                         请求的特定的服务器行为
         *     @param  {String}  Expires                        响应过期的日期和时间
         *     @param  {String}  params.ServerSideEncryption   支持按照指定的加密算法进行服务端数据加密，格式 x-cos-server-side-encryption: "AES256"，非必须
         *     @param  {String}  ContentLanguage                指定内容语言
         *     @param  {String}  x-cos-meta-*                   允许用户自定义的头部信息，将作为 Object 元数据返回。大小限制2K。
         */
      function putObjectCopy(params, callback) {
        var CopySource = params.CopySource || '';
        var m = CopySource.match(/^([^.]+-\d+)\.cos(v6)?\.([^.]+)\.[^/]+\/(.+)$/);
        if (!m) {
          callback({ error: 'CopySource format error' });
          return;
        }

        var SourceBucket = m[1];
        var SourceRegion = m[3];
        var SourceKey = decodeURIComponent(m[4]);

        submitRequest.call(this, {
          Scope: [{
            action: 'name/cos:GetObject',
            bucket: SourceBucket,
            region: SourceRegion,
            prefix: SourceKey },
          {
            action: 'name/cos:PutObject',
            bucket: params.Bucket,
            region: params.Region,
            prefix: params.Key }],

          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          VersionId: params.VersionId,
          headers: params.Headers },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var result = util.clone(data.CopyObjectResult || {});
          util.extend(result, {
            statusCode: data.statusCode,
            headers: data.headers });

          callback(null, result);
        });
      }

      function uploadPartCopy(params, callback) {

        var CopySource = params.CopySource || '';
        var m = CopySource.match(/^([^.]+-\d+)\.cos(v6)?\.([^.]+)\.[^/]+\/(.+)$/);
        if (!m) {
          callback({ error: 'CopySource format error' });
          return;
        }

        var SourceBucket = m[1];
        var SourceRegion = m[3];
        var SourceKey = decodeURIComponent(m[4]);

        submitRequest.call(this, {
          Scope: [{
            action: 'name/cos:GetObject',
            bucket: SourceBucket,
            region: SourceRegion,
            prefix: SourceKey },
          {
            action: 'name/cos:PutObject',
            bucket: params.Bucket,
            region: params.Region,
            prefix: params.Key }],

          method: 'PUT',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          VersionId: params.VersionId,
          qs: {
            partNumber: params['PartNumber'],
            uploadId: params['UploadId'] },

          headers: params.Headers },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var result = util.clone(data.CopyPartResult || {});
          util.extend(result, {
            statusCode: data.statusCode,
            headers: data.headers });

          callback(null, result);
        });
      }

      function deleteMultipleObject(params, callback) {
        var Objects = params.Objects || [];
        var Quiet = params.Quiet;
        Objects = util.isArray(Objects) ? Objects : [Objects];

        var xml = util.json2xml({ Delete: { Object: Objects, Quiet: Quiet || false } });

        var headers = params.Headers;
        headers['Content-Type'] = 'application/xml';
        headers['Content-MD5'] = util.binaryBase64(util.md5(xml));

        var Scope = util.map(Objects, function (v) {
          return {
            action: 'name/cos:DeleteObject',
            bucket: params.Bucket,
            region: params.Region,
            prefix: v.Key };

        });

        submitRequest.call(this, {
          Scope: Scope,
          method: 'POST',
          Bucket: params.Bucket,
          Region: params.Region,
          body: xml,
          action: 'delete',
          headers: headers },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var DeleteResult = data.DeleteResult || {};
          var Deleted = DeleteResult.Deleted || [];
          var Errors = DeleteResult.Error || [];

          Deleted = util.isArray(Deleted) ? Deleted : [Deleted];
          Errors = util.isArray(Errors) ? Errors : [Errors];

          var result = util.clone(DeleteResult);
          util.extend(result, {
            Error: Errors,
            Deleted: Deleted,
            statusCode: data.statusCode,
            headers: data.headers });

          callback(null, result);
        });
      }

      function restoreObject(params, callback) {
        var headers = params.Headers;
        if (!params['RestoreRequest']) {
          callback({ error: 'missing param RestoreRequest' });
          return;
        }

        var RestoreRequest = params.RestoreRequest || {};
        var xml = util.json2xml({ RestoreRequest: RestoreRequest });

        headers['Content-Type'] = 'application/xml';
        headers['Content-MD5'] = util.binaryBase64(util.md5(xml));

        submitRequest.call(this, {
          Action: 'name/cos:RestoreObject',
          method: 'POST',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          VersionId: params.VersionId,
          body: xml,
          action: 'restore',
          headers: headers },
        function (err, data) {
          callback(err, data);
        });
      }


      // 分块上传


      /**
       * 初始化分块上传
       * @param  {Object}  params                                     参数对象，必须
       *     @param  {String}  params.Bucket                          Bucket名称，必须
       *     @param  {String}  params.Region                          地域名称，必须
       *     @param  {String}  params.Key                             object名称，必须
       *     @param  {String}  params.UploadId                        object名称，必须
       *     @param  {String}  params.CacheControl                    RFC 2616 中定义的缓存策略，将作为 Object 元数据保存，非必须
       *     @param  {String}  params.ContentDisposition              RFC 2616 中定义的文件名称，将作为 Object 元数据保存    ，非必须
       *     @param  {String}  params.ContentEncoding                 RFC 2616 中定义的编码格式，将作为 Object 元数据保存，非必须
       *     @param  {String}  params.ContentType                     RFC 2616 中定义的内容类型（MIME），将作为 Object 元数据保存，非必须
       *     @param  {String}  params.Expires                         RFC 2616 中定义的过期时间，将作为 Object 元数据保存，非必须
       *     @param  {String}  params.ACL                             允许用户自定义文件权限，非必须
       *     @param  {String}  params.GrantRead                       赋予被授权者读的权限 ，非必须
       *     @param  {String}  params.GrantWrite                      赋予被授权者写的权限 ，非必须
       *     @param  {String}  params.GrantFullControl                赋予被授权者读写权限 ，非必须
       *     @param  {String}  params.StorageClass                    设置Object的存储级别，枚举值：Standard，Standard_IA，Archive，非必须
       *     @param  {String}  params.ServerSideEncryption           支持按照指定的加密算法进行服务端数据加密，格式 x-cos-server-side-encryption: "AES256"，非必须
       * @param  {Function}  callback                                 回调函数，必须
       * @return  {Object}  err                                       请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
       * @return  {Object}  data                                      返回的数据
       */
      function multipartInit(params, callback) {
        submitRequest.call(this, {
          Action: 'name/cos:InitiateMultipartUpload',
          method: 'POST',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          action: 'uploads',
          headers: params.Headers },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          data = util.clone(data || {});
          if (data && data.InitiateMultipartUploadResult) {
            return callback(null, util.extend(data.InitiateMultipartUploadResult, {
              statusCode: data.statusCode,
              headers: data.headers }));

          }
          callback(null, data);
        });
      }

      /**
         * 分块上传
         * @param  {Object}  params                                 参数对象，必须
         *     @param  {String}  params.Bucket                      Bucket名称，必须
         *     @param  {String}  params.Region                      地域名称，必须
         *     @param  {String}  params.Key                         object名称，必须
         *     @param  {String}  params.Body                        上传文件对象或字符串
         *     @param  {String} params.ContentLength                RFC 2616 中定义的 HTTP 请求内容长度（字节），非必须
         *     @param  {String} params.Expect                       当使用 Expect: 100-continue 时，在收到服务端确认后，才会发送请求内容，非必须
         *     @param  {String} params.ServerSideEncryption         支持按照指定的加密算法进行服务端数据加密，格式 x-cos-server-side-encryption: "AES256"，非必须
         *     @param  {String} params.ContentSha1                  RFC 3174 中定义的 160-bit 内容 SHA-1 算法校验值，非必须
         * @param  {Function}  callback                             回调函数，必须
         *     @return  {Object}  err                               请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         *     @return  {Object}  data                              返回的数据
         *     @return  {Object}  data.ETag                         返回的文件分块 sha1 值
         */
      function multipartUpload(params, callback) {

        var self = this;
        util.getFileSize('multipartUpload', params, function () {
          util.getBodyMd5(self.options.UploadCheckContentMd5, params.Body, function (md5) {
            md5 && (params.Headers['Content-MD5'] = util.binaryBase64(md5));
            submitRequest.call(self, {
              Action: 'name/cos:UploadPart',
              TaskId: params.TaskId,
              method: 'PUT',
              Bucket: params.Bucket,
              Region: params.Region,
              Key: params.Key,
              qs: {
                partNumber: params['PartNumber'],
                uploadId: params['UploadId'] },

              headers: params.Headers,
              onProgress: params.onProgress,
              body: params.Body || null },
            function (err, data) {
              if (err) {
                return callback(err);
              }
              if (data && data.headers) {
                var headers = data.headers;
                data.ETag = headers.etag || headers.Etag || headers.ETag || '';
              }

              callback(null, data);
            });
          });
        });

      }

      /**
         * 完成分块上传
         * @param  {Object}  params                             参数对象，必须
         *     @param  {String}  params.Bucket                  Bucket名称，必须
         *     @param  {String}  params.Region                  地域名称，必须
         *     @param  {String}  params.Key                     object名称，必须
         *     @param  {Array}   params.Parts                   分块信息列表，必须
         *     @param  {String}  params.Parts[i].PartNumber     块编号，必须
         *     @param  {String}  params.Parts[i].ETag           分块的 sha1 校验值
         * @param  {Function}  callback                         回调函数，必须
         * @return  {Object}  err                               请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                              返回的数据
         *     @return  {Object}  data.CompleteMultipartUpload  完成分块上传后的文件信息，包括Location, Bucket, Key 和 ETag
         */
      function multipartComplete(params, callback) {
        var self = this;

        var UploadId = params.UploadId;

        var Parts = params['Parts'];

        for (var i = 0, len = Parts.length; i < len; i++) {
          if (Parts[i]['ETag'].indexOf('"') === 0) {
            continue;
          }
          Parts[i]['ETag'] = '"' + Parts[i]['ETag'] + '"';
        }

        var xml = util.json2xml({ CompleteMultipartUpload: { Part: Parts } });

        var headers = params.Headers;
        headers['Content-Type'] = 'application/xml';
        headers['Content-MD5'] = util.binaryBase64(util.md5(xml));

        submitRequest.call(this, {
          Action: 'name/cos:CompleteMultipartUpload',
          method: 'POST',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          qs: {
            uploadId: UploadId },

          body: xml,
          headers: headers },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var url = getUrl({
            ForcePathStyle: self.options.ForcePathStyle,
            protocol: self.options.Protocol,
            domain: self.options.Domain,
            bucket: params.Bucket,
            region: params.Region,
            object: params.Key,
            isLocation: true });

          var CompleteMultipartUploadResult = data.CompleteMultipartUploadResult || {};
          var result = util.extend(CompleteMultipartUploadResult, {
            Location: url,
            statusCode: data.statusCode,
            headers: data.headers });

          callback(null, result);
        });
      }

      /**
         * 分块上传任务列表查询
         * @param  {Object}  params                                 参数对象，必须
         *     @param  {String}  params.Bucket                      Bucket名称，必须
         *     @param  {String}  params.Region                      地域名称，必须
         *     @param  {String}  params.Delimiter                   定界符为一个符号，如果有Prefix，则将Prefix到delimiter之间的相同路径归为一类，定义为Common Prefix，然后列出所有Common Prefix。如果没有Prefix，则从路径起点开始，非必须
         *     @param  {String}  params.EncodingType                规定返回值的编码方式，非必须
         *     @param  {String}  params.Prefix                      前缀匹配，用来规定返回的文件前缀地址，非必须
         *     @param  {String}  params.MaxUploads                  单次返回最大的条目数量，默认1000，非必须
         *     @param  {String}  params.KeyMarker                   与upload-id-marker一起使用 </Br>当upload-id-marker未被指定时，ObjectName字母顺序大于key-marker的条目将被列出 </Br>当upload-id-marker被指定时，ObjectName字母顺序大于key-marker的条目被列出，ObjectName字母顺序等于key-marker同时UploadId大于upload-id-marker的条目将被列出，非必须
         *     @param  {String}  params.UploadIdMarker              与key-marker一起使用 </Br>当key-marker未被指定时，upload-id-marker将被忽略 </Br>当key-marker被指定时，ObjectName字母顺序大于key-marker的条目被列出，ObjectName字母顺序等于key-marker同时UploadId大于upload-id-marker的条目将被列出，非必须
         * @param  {Function}  callback                             回调函数，必须
         * @return  {Object}  err                                   请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                                  返回的数据
         *     @return  {Object}  data.ListMultipartUploadsResult   分块上传任务信息
         */
      function multipartList(params, callback) {
        var reqParams = {};

        reqParams['delimiter'] = params['Delimiter'];
        reqParams['encoding-type'] = params['EncodingType'];
        reqParams['prefix'] = params['Prefix'] || '';

        reqParams['max-uploads'] = params['MaxUploads'];

        reqParams['key-marker'] = params['KeyMarker'];
        reqParams['upload-id-marker'] = params['UploadIdMarker'];

        reqParams = util.clearKey(reqParams);

        submitRequest.call(this, {
          Action: 'name/cos:ListMultipartUploads',
          ResourceKey: reqParams['prefix'],
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          headers: params.Headers,
          qs: reqParams,
          action: 'uploads' },
        function (err, data) {
          if (err) {
            return callback(err);
          }

          if (data && data.ListMultipartUploadsResult) {
            var Upload = data.ListMultipartUploadsResult.Upload || [];

            var CommonPrefixes = data.ListMultipartUploadsResult.CommonPrefixes || [];

            CommonPrefixes = util.isArray(CommonPrefixes) ? CommonPrefixes : [CommonPrefixes];
            Upload = util.isArray(Upload) ? Upload : [Upload];

            data.ListMultipartUploadsResult.Upload = Upload;
            data.ListMultipartUploadsResult.CommonPrefixes = CommonPrefixes;
          }
          var result = util.clone(data.ListMultipartUploadsResult || {});
          util.extend(result, {
            statusCode: data.statusCode,
            headers: data.headers });

          callback(null, result);
        });
      }

      /**
         * 上传的分块列表查询
         * @param  {Object}  params                                 参数对象，必须
         *     @param  {String}  params.Bucket                      Bucket名称，必须
         *     @param  {String}  params.Region                      地域名称，必须
         *     @param  {String}  params.Key                         object名称，必须
         *     @param  {String}  params.UploadId                    标示本次分块上传的ID，必须
         *     @param  {String}  params.EncodingType                规定返回值的编码方式，非必须
         *     @param  {String}  params.MaxParts                    单次返回最大的条目数量，默认1000，非必须
         *     @param  {String}  params.PartNumberMarker            默认以UTF-8二进制顺序列出条目，所有列出条目从marker开始，非必须
         * @param  {Function}  callback                             回调函数，必须
         * @return  {Object}  err                                   请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         * @return  {Object}  data                                  返回的数据
         *     @return  {Object}  data.ListMultipartUploadsResult   分块信息
         */
      function multipartListPart(params, callback) {
        var reqParams = {};

        reqParams['uploadId'] = params['UploadId'];
        reqParams['encoding-type'] = params['EncodingType'];
        reqParams['max-parts'] = params['MaxParts'];
        reqParams['part-number-marker'] = params['PartNumberMarker'];

        submitRequest.call(this, {
          Action: 'name/cos:ListParts',
          method: 'GET',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          headers: params.Headers,
          qs: reqParams },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          var ListPartsResult = data.ListPartsResult || {};
          var Part = ListPartsResult.Part || [];
          Part = util.isArray(Part) ? Part : [Part];

          ListPartsResult.Part = Part;
          var result = util.clone(ListPartsResult);
          util.extend(result, {
            statusCode: data.statusCode,
            headers: data.headers });

          callback(null, result);
        });
      }

      /**
         * 抛弃分块上传
         * @param  {Object}  params                 参数对象，必须
         *     @param  {String}  params.Bucket      Bucket名称，必须
         *     @param  {String}  params.Region      地域名称，必须
         *     @param  {String}  params.Key         object名称，必须
         *     @param  {String}  params.UploadId    标示本次分块上传的ID，必须
         * @param  {Function}  callback             回调函数，必须
         *     @return  {Object}    err             请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         *     @return  {Object}    data            返回的数据
         */
      function multipartAbort(params, callback) {
        var reqParams = {};

        reqParams['uploadId'] = params['UploadId'];
        submitRequest.call(this, {
          Action: 'name/cos:AbortMultipartUpload',
          method: 'DELETE',
          Bucket: params.Bucket,
          Region: params.Region,
          Key: params.Key,
          headers: params.Headers,
          qs: reqParams },
        function (err, data) {
          if (err) {
            return callback(err);
          }
          callback(null, {
            statusCode: data.statusCode,
            headers: data.headers });

        });
      }

      /**
         * 获取签名
         * @param  {Object}  params             参数对象，必须
         *     @param  {String}  params.Method  请求方法，必须
         *     @param  {String}  params.Key     object名称，必须
         *     @param  {String}  params.Expires 名超时时间，单位秒，可选
         * @return  {String}  data              返回签名字符串
         */
      function getAuth(params) {
        var self = this;
        return util.getAuth({
          SecretId: params.SecretId || this.options.SecretId || '',
          SecretKey: params.SecretKey || this.options.SecretKey || '',
          Method: params.Method,
          Key: params.Key,
          Query: params.Query,
          Headers: params.Headers,
          Expires: params.Expires,
          SystemClockOffset: self.options.SystemClockOffset });

      }

      /**
         * 获取文件下载链接
         * @param  {Object}  params                 参数对象，必须
         *     @param  {String}  params.Bucket      Bucket名称，必须
         *     @param  {String}  params.Region      地域名称，必须
         *     @param  {String}  params.Key         object名称，必须
         *     @param  {String}  params.Method      请求的方法，可选
         *     @param  {String}  params.Expires     签名超时时间，单位秒，可选
         * @param  {Function}  callback             回调函数，必须
         *     @return  {Object}    err             请求失败的错误，如果请求成功，则为空。https://cloud.tencent.com/document/product/436/7730
         *     @return  {Object}    data            返回的数据
         */
      function getObjectUrl(params, callback) {
        var self = this;
        var url = getUrl({
          ForcePathStyle: self.options.ForcePathStyle,
          protocol: params.Protocol || self.options.Protocol,
          domain: self.options.Domain,
          bucket: params.Bucket,
          region: params.Region,
          object: params.Key });

        if (params.Sign !== undefined && !params.Sign) {
          callback(null, { Url: url });
          return url;
        }
        var AuthData = getAuthorizationAsync.call(this, {
          Action: (params.Method || '').toUpperCase() === 'PUT' ? 'name/cos:PutObject' : 'name/cos:GetObject',
          Bucket: params.Bucket || '',
          Region: params.Region || '',
          Method: params.Method || 'get',
          Key: params.Key,
          Expires: params.Expires },
        function (err, AuthData) {
          if (!callback) return;
          if (err) {
            callback(err);
            return;
          }
          var signUrl = url;
          signUrl += '?' + (AuthData.Authorization.indexOf('q-signature') > -1 ?
          AuthData.Authorization : 'sign=' + encodeURIComponent(AuthData.Authorization));
          AuthData.XCosSecurityToken && (signUrl += '&x-cos-security-token=' + AuthData.XCosSecurityToken);
          AuthData.ClientIP && (signUrl += '&clientIP=' + AuthData.ClientIP);
          AuthData.ClientUA && (signUrl += '&clientUA=' + AuthData.ClientUA);
          AuthData.Token && (signUrl += '&token=' + AuthData.Token);
          setTimeout(function () {
            callback(null, { Url: signUrl });
          });
        });
        if (AuthData) {
          return url + '?' + AuthData.Authorization + (
          AuthData.XCosSecurityToken ? '&x-cos-security-token=' + AuthData.XCosSecurityToken : '');
        } else {
          return url;
        }
      }


      /**
         * 私有方法
         */
      function decodeAcl(AccessControlPolicy) {
        var result = {
          GrantFullControl: [],
          GrantWrite: [],
          GrantRead: [],
          GrantReadAcp: [],
          GrantWriteAcp: [],
          ACL: '' };

        var GrantMap = {
          'FULL_CONTROL': 'GrantFullControl',
          'WRITE': 'GrantWrite',
          'READ': 'GrantRead',
          'READ_ACP': 'GrantReadAcp',
          'WRITE_ACP': 'GrantWriteAcp' };

        var Grant = AccessControlPolicy.AccessControlList.Grant;
        if (Grant) {
          Grant = util.isArray(Grant) ? Grant : [Grant];
        }
        var PublicAcl = { READ: 0, WRITE: 0, FULL_CONTROL: 0 };
        Grant.length && util.each(Grant, function (item) {
          if (item.Grantee.ID === 'qcs::cam::anyone:anyone' || item.Grantee.URI === 'http://cam.qcloud.com/groups/global/AllUsers') {
            PublicAcl[item.Permission] = 1;
          } else if (item.Grantee.ID !== AccessControlPolicy.Owner.ID) {
            result[GrantMap[item.Permission]].push('id="' + item.Grantee.ID + '"');
          }
        });
        if (PublicAcl.FULL_CONTROL || PublicAcl.WRITE && PublicAcl.READ) {
          result.ACL = 'public-read-write';
        } else if (PublicAcl.READ) {
          result.ACL = 'public-read';
        } else {
          result.ACL = 'private';
        }
        util.each(GrantMap, function (item) {
          result[item] = uniqGrant(result[item].join(','));
        });
        return result;
      }

      // Grant 去重
      function uniqGrant(str) {
        var arr = str.split(',');
        var exist = {};
        var i, item;
        for (i = 0; i < arr.length;) {
          item = arr[i].trim();
          if (exist[item]) {
            arr.splice(i, 1);
          } else {
            exist[item] = true;
            arr[i] = item;
            i++;
          }
        }
        return arr.join(',');
      }

      // 生成操作 url
      function getUrl(params) {
        var longBucket = params.bucket;
        var shortBucket = longBucket.substr(0, longBucket.lastIndexOf('-'));
        var appId = longBucket.substr(longBucket.lastIndexOf('-') + 1);
        var domain = params.domain;
        var region = params.region;
        var object = params.object;
        var protocol = 'https:';
        if (!domain) {
          if (['cn-south', 'cn-south-2', 'cn-north', 'cn-east', 'cn-southwest', 'sg'].indexOf(region) > -1) {
            domain = '{Region}.myqcloud.com';
          } else {
            domain = 'cos.{Region}.myqcloud.com';
          }
          if (!params.ForcePathStyle) {
            domain = '{Bucket}.' + domain;
          }
        }
        domain = domain.replace(/\{\{AppId\}\}/ig, appId).
        replace(/\{\{Bucket\}\}/ig, shortBucket).
        replace(/\{\{Region\}\}/ig, region).
        replace(/\{\{.*?\}\}/ig, '');
        domain = domain.replace(/\{AppId\}/ig, appId).
        replace(/\{BucketName\}/ig, shortBucket).
        replace(/\{Bucket\}/ig, longBucket).
        replace(/\{Region\}/ig, region).
        replace(/\{.*?\}/ig, '');
        if (!/^[a-zA-Z]+:\/\//.test(domain)) {
          domain = protocol + '//' + domain;
        }

        // 去掉域名最后的斜杆
        if (domain.slice(-1) === '/') {
          domain = domain.slice(0, -1);
        }
        var url = domain;

        if (params.ForcePathStyle) {
          url += '/' + longBucket;
        }
        url += '/';
        if (object) {
          url += util.camSafeUrlEncode(object).replace(/%2F/g, '/');
        }

        if (params.isLocation) {
          url = url.replace(/^https?:\/\//, '');
        }
        return url;
      }

      // 异步获取签名
      function getAuthorizationAsync(params, callback) {

        var headers = util.clone(params.Headers);
        delete headers['Content-Type'];
        delete headers['Cache-Control'];
        util.each(headers, function (v, k) {
          v === '' && delete headers[k];
        });

        var cb = function cb(AuthData) {

          // 检查签名格式
          var formatAllow = false;
          var auth = AuthData.Authorization;
          if (auth) {
            if (auth.indexOf(' ') > -1) {
              formatAllow = false;
            } else if (auth.indexOf('q-sign-algorithm=') > -1 &&
            auth.indexOf('q-ak=') > -1 &&
            auth.indexOf('q-sign-time=') > -1 &&
            auth.indexOf('q-key-time=') > -1 &&
            auth.indexOf('q-url-param-list=') > -1) {
              formatAllow = true;
            } else {
              try {
                auth = base64.atob(auth);
                if (auth.indexOf('a=') > -1 &&
                auth.indexOf('k=') > -1 &&
                auth.indexOf('t=') > -1 &&
                auth.indexOf('r=') > -1 &&
                auth.indexOf('b=') > -1) {
                  formatAllow = true;
                }
              } catch (e) {}
            }
          }
          if (formatAllow) {
            callback && callback(null, AuthData);
          } else {
            callback && callback('authorization error');
          }
        };

        var self = this;
        var Bucket = params.Bucket || '';
        var Region = params.Region || '';

        // PathName
        var KeyName = params.Action === 'name/cos:PostObject' || !params.Key ? '' : params.Key;
        if (self.options.ForcePathStyle && Bucket) {
          KeyName = Bucket + '/' + KeyName;
        }
        var Pathname = '/' + KeyName;

        // Action、ResourceKey
        var StsData = {};
        var Scope = params.Scope;
        if (!Scope) {
          var Action = params.Action || '';
          var ResourceKey = params.ResourceKey || params.Key || '';
          Scope = params.Scope || [{
            action: Action,
            bucket: Bucket,
            region: Region,
            prefix: ResourceKey }];

        }
        var ScopeKey = util.md5(JSON.stringify(Scope));

        // STS
        self._StsCache = self._StsCache || [];
        (function () {
          var i, AuthData;
          for (i = self._StsCache.length - 1; i >= 0; i--) {
            AuthData = self._StsCache[i];
            var compareTime = Math.round(util.getSkewTime(self.options.SystemClockOffset) / 1000) + 30;
            if (AuthData.StartTime && compareTime < AuthData.StartTime || compareTime >= AuthData.ExpiredTime) {
              self._StsCache.splice(i, 1);
              continue;
            }
            if (!AuthData.ScopeLimit || AuthData.ScopeLimit && AuthData.ScopeKey === ScopeKey) {
              StsData = AuthData;
              break;
            }
          }
        })();

        var calcAuthByTmpKey = function calcAuthByTmpKey() {
          var KeyTime = StsData.StartTime && StsData.ExpiredTime ? StsData.StartTime + ';' + StsData.ExpiredTime : '';
          var Authorization = util.getAuth({
            SecretId: StsData.TmpSecretId,
            SecretKey: StsData.TmpSecretKey,
            Method: params.Method,
            Pathname: Pathname,
            Query: params.Query,
            Headers: headers,
            Expires: params.Expires,
            SystemClockOffset: self.options.SystemClockOffset,
            KeyTime: KeyTime });

          var AuthData = {
            Authorization: Authorization,
            XCosSecurityToken: StsData.XCosSecurityToken || '',
            Token: StsData.Token || '',
            ClientIP: StsData.ClientIP || '',
            ClientUA: StsData.ClientUA || '' };

          cb(AuthData);
        };

        // 先判断是否有临时密钥
        if (StsData.ExpiredTime && StsData.ExpiredTime - util.getSkewTime(self.options.SystemClockOffset) / 1000 > 60) {// 如果缓存的临时密钥有效，并还有超过60秒有效期就直接使用
          calcAuthByTmpKey();
        } else if (self.options.getAuthorization) {// 外部计算签名或获取临时密钥
          self.options.getAuthorization.call(self, {
            Bucket: Bucket,
            Region: Region,
            Method: params.Method,
            Key: KeyName,
            Pathname: Pathname,
            Query: params.Query,
            Headers: headers,
            Scope: Scope },
          function (AuthData) {
            if (typeof AuthData === 'string') {
              AuthData = { Authorization: AuthData };
            }
            if (AuthData.TmpSecretId &&
            AuthData.TmpSecretKey &&
            AuthData.XCosSecurityToken &&
            AuthData.ExpiredTime) {
              StsData = AuthData || {};
              StsData.Scope = Scope;
              StsData.ScopeKey = ScopeKey;
              self._StsCache.push(StsData);
              calcAuthByTmpKey();
            } else {
              cb(AuthData);
            }
          });
        } else if (self.options.getSTS) {// 外部获取临时密钥
          self.options.getSTS.call(self, {
            Bucket: Bucket,
            Region: Region },
          function (data) {
            StsData = data || {};
            StsData.Scope = Scope;
            StsData.ScopeKey = ScopeKey;
            StsData.TmpSecretId = StsData.SecretId;
            StsData.TmpSecretKey = StsData.SecretKey;
            self._StsCache.push(StsData);
            calcAuthByTmpKey();
          });
        } else {// 内部计算获取签名
          return function () {
            var Authorization = util.getAuth({
              SecretId: params.SecretId || self.options.SecretId,
              SecretKey: params.SecretKey || self.options.SecretKey,
              Method: params.Method,
              Pathname: Pathname,
              Query: params.Query,
              Headers: headers,
              Expires: params.Expires,
              SystemClockOffset: self.options.SystemClockOffset });

            var AuthData = {
              Authorization: Authorization,
              XCosSecurityToken: self.options.XCosSecurityToken };

            cb(AuthData);
            return AuthData;
          }();
        }
        return '';
      }

      // 调整时间偏差
      function allowRetry(err) {
        var allowRetry = false;
        var isTimeError = false;
        var serverDate = err.headers && (err.headers.date || err.headers.Date) || '';
        try {
          var errorCode = err.error.Code;
          var errorMessage = err.error.Message;
          if (errorCode === 'RequestTimeTooSkewed' ||
          errorCode === 'AccessDenied' && errorMessage === 'Request has expired') {
            isTimeError = true;
          }
        } catch (e) {
        }
        if (err) {
          if (isTimeError && serverDate) {
            var serverTime = Date.parse(serverDate);
            if (this.options.CorrectClockSkew && Math.abs(util.getSkewTime(this.options.SystemClockOffset) - serverTime) >= 30000) {
              console.error('error: Local time is too skewed.');
              this.options.SystemClockOffset = serverTime - Date.now();
              allowRetry = true;
            }
          } else if (Math.round(err.statusCode / 100) === 5) {
            allowRetry = true;
          }
        }
        return allowRetry;
      }

      // 获取签名并发起请求
      function submitRequest(params, callback) {
        var self = this;

        // 处理 headers
        !params.headers && (params.headers = {});

        // 处理 query
        !params.qs && (params.qs = {});
        params.VersionId && (params.qs.versionId = params.VersionId);
        params.qs = util.clearKey(params.qs);

        // 清理 undefined 和 null 字段
        params.headers && (params.headers = util.clearKey(params.headers));
        params.qs && (params.qs = util.clearKey(params.qs));

        var Query = util.clone(params.qs);
        params.action && (Query[params.action] = '');

        var next = function next(tryIndex) {
          var oldClockOffset = self.options.SystemClockOffset;
          getAuthorizationAsync.call(self, {
            Bucket: params.Bucket || '',
            Region: params.Region || '',
            Method: params.method,
            Key: params.Key,
            Query: Query,
            Headers: params.headers,
            Action: params.Action,
            ResourceKey: params.ResourceKey,
            Scope: params.Scope },
          function (err, AuthData) {
            params.AuthData = AuthData;
            _submitRequest.call(self, params, function (err, data) {
              if (err && tryIndex < 2 && (oldClockOffset !== self.options.SystemClockOffset || allowRetry.call(self, err))) {
                if (params.headers) {
                  delete params.headers.Authorization;
                  delete params.headers['token'];
                  delete params.headers['clientIP'];
                  delete params.headers['clientUA'];
                  delete params.headers['x-cos-security-token'];
                }
                next(tryIndex + 1);
              } else {
                callback(err, data);
              }
            });
          });
        };
        next(0);

      }

      // 发起请求
      function _submitRequest(params, callback) {
        var self = this;
        var TaskId = params.TaskId;
        if (TaskId && !self._isRunningTask(TaskId)) return;

        var bucket = params.Bucket;
        var region = params.Region;
        var object = params.Key;
        var method = params.method || 'GET';
        var url = params.url;
        var body = params.body;
        var json = params.json;
        var rawBody = params.rawBody;

        // url
        url = url || getUrl({
          ForcePathStyle: self.options.ForcePathStyle,
          protocol: self.options.Protocol,
          domain: self.options.Domain,
          bucket: bucket,
          region: region,
          object: object });

        if (params.action) {
          url = url + '?' + params.action;
        }

        var opt = {
          method: method,
          url: url,
          headers: params.headers,
          qs: params.qs,
          filePath: params.filePath,
          body: body,
          json: json };


        // 获取签名
        opt.headers.Authorization = params.AuthData.Authorization;
        params.AuthData.Token && (opt.headers['token'] = params.AuthData.Token);
        params.AuthData.ClientIP && (opt.headers['clientIP'] = params.AuthData.ClientIP);
        params.AuthData.ClientUA && (opt.headers['clientUA'] = params.AuthData.ClientUA);
        params.AuthData.XCosSecurityToken && (opt.headers['x-cos-security-token'] = params.AuthData.XCosSecurityToken);

        // 清理 undefined 和 null 字段
        opt.headers && (opt.headers = util.clearKey(opt.headers));
        opt = util.clearKey(opt);

        // progress
        if (params.onProgress && typeof params.onProgress === 'function') {
          opt.onProgress = function (e) {
            if (TaskId && !self._isRunningTask(TaskId)) return;
            var loaded = e ? e.loaded : 0;
            params.onProgress({ loaded: loaded, total: e.total });
          };
        }

        self.options.ForcePathStyle && (opt.pathStyle = self.options.ForcePathStyle);
        var sender = REQUEST(opt, function (err, response, body) {

          // 返回内容添加 状态码 和 headers
          var hasReturned;
          var cb = function cb(err, data) {
            TaskId && self.off('inner-kill-task', killTask);
            if (hasReturned) return;
            hasReturned = true;
            var attrs = {};
            response && response.statusCode && (attrs.statusCode = response.statusCode);
            response && response.headers && (attrs.headers = response.headers);
            if (err) {
              err = util.extend(err || {}, attrs);
              callback(err, null);
            } else {
              data = util.extend(data || {}, attrs);
              callback(null, data);
            }
          };

          // 请求错误，发生网络错误
          if (err) {
            cb({ error: err });
            return;
          }

          var jsonRes;
          try {
            jsonRes = util.xml2json(body) || {};
          } catch (e) {
            jsonRes = body || {};
          }

          // 请求返回码不为 200
          var statusCode = response.statusCode;
          var statusSuccess = Math.floor(statusCode / 100) === 2; // 200 202 204 206
          if (!statusSuccess) {
            cb({ error: jsonRes.Error || jsonRes });
            return;
          }

          // 不对 body 进行转换，body 直接挂载返回
          if (rawBody) {
            jsonRes = {};
            jsonRes.body = body;
          }

          if (jsonRes.Error) {
            cb({ error: jsonRes.Error });
            return;
          }
          cb(null, jsonRes);
        });

        // kill task
        var killTask = function killTask(data) {
          if (data.TaskId === TaskId) {
            sender && sender.abort && sender.abort();
            self.off('inner-kill-task', killTask);
          }
        };
        TaskId && self.on('inner-kill-task', killTask);

      }


      var API_MAP = {
        // Bucket 相关方法
        getService: getService,
        putBucket: putBucket,
        getBucket: getBucket,
        headBucket: headBucket,
        deleteBucket: deleteBucket,
        getBucketAcl: getBucketAcl,
        putBucketAcl: putBucketAcl,
        getBucketCors: getBucketCors,
        putBucketCors: putBucketCors,
        deleteBucketCors: deleteBucketCors,
        getBucketLocation: getBucketLocation,
        putBucketTagging: putBucketTagging,
        getBucketTagging: getBucketTagging,
        deleteBucketTagging: deleteBucketTagging,
        getBucketPolicy: getBucketPolicy,
        putBucketPolicy: putBucketPolicy,
        deleteBucketPolicy: deleteBucketPolicy,
        getBucketLifecycle: getBucketLifecycle,
        putBucketLifecycle: putBucketLifecycle,
        deleteBucketLifecycle: deleteBucketLifecycle,
        putBucketVersioning: putBucketVersioning,
        getBucketVersioning: getBucketVersioning,
        putBucketReplication: putBucketReplication,
        getBucketReplication: getBucketReplication,
        deleteBucketReplication: deleteBucketReplication,

        // Object 相关方法
        getObject: getObject,
        headObject: headObject,
        listObjectVersions: listObjectVersions,
        putObject: putObject,
        postObject: postObject,
        deleteObject: deleteObject,
        getObjectAcl: getObjectAcl,
        putObjectAcl: putObjectAcl,
        optionsObject: optionsObject,
        putObjectCopy: putObjectCopy,
        deleteMultipleObject: deleteMultipleObject,
        restoreObject: restoreObject,

        // 分块上传相关方法
        uploadPartCopy: uploadPartCopy,
        multipartInit: multipartInit,
        multipartUpload: multipartUpload,
        multipartComplete: multipartComplete,
        multipartList: multipartList,
        multipartListPart: multipartListPart,
        multipartAbort: multipartAbort,

        // 工具方法
        getObjectUrl: getObjectUrl,
        getAuth: getAuth };


      module.exports.init = function (COS, task) {
        task.transferToTaskMethod(API_MAP, 'postObject');
        util.each(API_MAP, function (fn, apiName) {
          COS.prototype[apiName] = util.apiWrapper(apiName, fn);
        });
      };


      /***/},
    /* 16 */
    /***/function (module, exports, __webpack_require__) {

      var util = __webpack_require__(0);

      var originApiMap = {};
      var transferToTaskMethod = function transferToTaskMethod(apiMap, apiName) {
        originApiMap[apiName] = apiMap[apiName];
        apiMap[apiName] = function (params, callback) {
          if (params.SkipTask) {
            originApiMap[apiName].call(this, params, callback);
          } else {
            this._addTask(apiName, params, callback);
          }
        };
      };

      var initTask = function initTask(cos) {

        var queue = [];
        var tasks = {};
        var uploadingFileCount = 0;
        var nextUploadIndex = 0;

        // 接口返回简略的任务信息
        var formatTask = function formatTask(task) {
          var t = {
            id: task.id,
            Bucket: task.Bucket,
            Region: task.Region,
            Key: task.Key,
            FilePath: task.FilePath,
            state: task.state,
            loaded: task.loaded,
            size: task.size,
            speed: task.speed,
            percent: task.percent,
            hashPercent: task.hashPercent,
            error: task.error };

          if (task.FilePath) t.FilePath = task.FilePath;
          return t;
        };

        var emitListUpdate = function emitListUpdate() {
          cos.emit('list-update', { list: util.map(queue, formatTask) });
        };

        var clearQueue = function clearQueue() {
          if (queue.length > cos.options.UploadQueueSize) {
            var i;
            for (i = 0;
            i < queue.length &&
            queue.length > cos.options.UploadQueueSize && // 大于队列才处理
            i < nextUploadIndex; // 小于当前操作的 index 才处理
            i++) {
              if (!queue[i] || queue[i].state !== 'waiting') {
                queue.splice(i, 1);
                nextUploadIndex--;
              }
            }
          }
        };

        var startNextTask = function startNextTask() {
          if (nextUploadIndex < queue.length &&
          uploadingFileCount < cos.options.FileParallelLimit) {
            var task = queue[nextUploadIndex];
            if (task.state === 'waiting') {
              uploadingFileCount++;
              task.state = 'checking';
              var apiParams = util.formatParams(task.api, task.params);
              originApiMap[task.api].call(cos, apiParams, function (err, data) {
                if (!cos._isRunningTask(task.id)) return;
                if (task.state === 'checking' || task.state === 'uploading') {
                  task.state = err ? 'error' : 'success';
                  err && (task.error = err);
                  uploadingFileCount--;
                  emitListUpdate();
                  startNextTask(cos);
                  task.callback && task.callback(err, data);
                  if (task.state === 'success') {
                    if (task.params) {
                      delete task.params.Body;
                      delete task.params;
                    }
                    delete task.callback;
                  }
                }
                clearQueue();
              });
              emitListUpdate();
            }
            nextUploadIndex++;
            startNextTask(cos);
          }
        };

        var killTask = function killTask(id, switchToState) {
          var task = tasks[id];
          if (!task) return;
          var waiting = task && task.state === 'waiting';
          var running = task && (task.state === 'checking' || task.state === 'uploading');
          if (switchToState === 'canceled' && task.state !== 'canceled' ||
          switchToState === 'paused' && waiting ||
          switchToState === 'paused' && running) {
            if (switchToState === 'paused' && task.params.Body && typeof task.params.Body.pipe === 'function') {
              console.error('stream not support pause');
              return;
            }
            task.state = switchToState;
            cos.emit('inner-kill-task', { TaskId: id, toState: switchToState });
            emitListUpdate();
            if (running) {
              uploadingFileCount--;
              startNextTask(cos);
            }
            if (switchToState === 'canceled') {
              if (task.params) {
                delete task.params.Body;
                delete task.params;
              }
              delete task.callback;
            }
          }
          clearQueue();
        };

        cos._addTasks = function (taskList) {
          util.each(taskList, function (task) {
            cos._addTask(task.api, task.params, task.callback, true);
          });
          emitListUpdate();
        };

        cos._addTask = function (api, params, callback, ignoreAddEvent) {

          // 复制参数对象
          params = util.formatParams(api, params);

          // 生成 id
          var id = util.uuid();
          params.TaskId = id;
          params.TaskReady && params.TaskReady(id);

          var task = {
            // env
            params: params,
            callback: callback,
            api: api,
            index: queue.length,
            // task
            id: id,
            Bucket: params.Bucket,
            Region: params.Region,
            Key: params.Key,
            FilePath: params.FilePath || '',
            state: 'waiting',
            loaded: 0,
            size: 0,
            speed: 0,
            percent: 0,
            hashPercent: 0,
            error: null };

          var onHashProgress = params.onHashProgress;
          params.onHashProgress = function (info) {
            if (!cos._isRunningTask(task.id)) return;
            task.hashPercent = info.percent;
            onHashProgress && onHashProgress(info);
            emitListUpdate();
          };
          var onProgress = params.onProgress;
          params.onProgress = function (info) {
            if (!cos._isRunningTask(task.id)) return;
            task.state === 'checking' && (task.state = 'uploading');
            task.loaded = info.loaded;
            task.size = info.total;
            task.speed = info.speed;
            task.percent = info.percent;
            onProgress && onProgress(info);
            emitListUpdate();
          };

          (function () {
            // 获取完文件大小再把任务加入队列
            tasks[id] = task;
            queue.push(task);
            task.size = params.FileSize;
            !ignoreAddEvent && emitListUpdate();
            startNextTask(cos);
            clearQueue();
          })();
          return id;
        };
        cos._isRunningTask = function (id) {
          var task = tasks[id];
          return !!(task && (task.state === 'checking' || task.state === 'uploading'));
        };
        cos.getTaskList = function () {
          return util.map(queue, formatTask);
        };
        cos.cancelTask = function (id) {
          killTask(id, 'canceled');
        };
        cos.pauseTask = function (id) {
          killTask(id, 'paused');
        };
        cos.restartTask = function (id) {
          var task = tasks[id];
          if (task && (task.state === 'paused' || task.state === 'error')) {
            task.state = 'waiting';
            emitListUpdate();
            nextUploadIndex = Math.min(nextUploadIndex, task.index);
            startNextTask();
          }
        };

      };

      module.exports.transferToTaskMethod = transferToTaskMethod;
      module.exports.init = initTask;


      /***/}
    /******/]));
});

/***/ }),

/***/ 18:
/*!*****************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/common/common.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var commen = {};


commen.emojiList = [
[{
  "url": "100.gif",
  alt: "[微笑]" },
{
  "url": "101.gif",
  alt: "[伤心]" },
{
  "url": "102.gif",
  alt: "[美女]" },
{
  "url": "103.gif",
  alt: "[发呆]" },
{
  "url": "104.gif",
  alt: "[墨镜]" },
{
  "url": "105.gif",
  alt: "[哭]" },
{
  "url": "106.gif",
  alt: "[羞]" },
{
  "url": "107.gif",
  alt: "[哑]" },
{
  "url": "108.gif",
  alt: "[睡]" },
{
  "url": "109.gif",
  alt: "[哭]" },
{
  "url": "110.gif",
  alt: "[囧]" },
{
  "url": "111.gif",
  alt: "[怒]" },
{
  "url": "112.gif",
  alt: "[调皮]" },
{
  "url": "113.gif",
  alt: "[笑]" },
{
  "url": "114.gif",
  alt: "[惊讶]" },
{
  "url": "115.gif",
  alt: "[难过]" },
{
  "url": "116.gif",
  alt: "[酷]" },
{
  "url": "117.gif",
  alt: "[汗]" },
{
  "url": "118.gif",
  alt: "[抓狂]" },
{
  "url": "119.gif",
  alt: "[吐]" },
{
  "url": "120.gif",
  alt: "[笑]" },
{
  "url": "121.gif",
  alt: "[快乐]" },
{
  "url": "122.gif",
  alt: "[奇]" },
{
  "url": "123.gif",
  alt: "[傲]" }],

[{
  "url": "124.gif",
  alt: "[饿]" },
{
  "url": "125.gif",
  alt: "[累]" },
{
  "url": "126.gif",
  alt: "[吓]" },
{
  "url": "127.gif",
  alt: "[汗]" },
{
  "url": "128.gif",
  alt: "[高兴]" },
{
  "url": "129.gif",
  alt: "[闲]" },
{
  "url": "130.gif",
  alt: "[努力]" },
{
  "url": "131.gif",
  alt: "[骂]" },
{
  "url": "132.gif",
  alt: "[疑问]" },
{
  "url": "133.gif",
  alt: "[秘密]" },
{
  "url": "134.gif",
  alt: "[乱]" },
{
  "url": "135.gif",
  alt: "[疯]" },
{
  "url": "136.gif",
  alt: "[哀]" },
{
  "url": "137.gif",
  alt: "[鬼]" },
{
  "url": "138.gif",
  alt: "[打击]" },
{
  "url": "139.gif",
  alt: "[bye]" },
{
  "url": "140.gif",
  alt: "[汗]" },
{
  "url": "141.gif",
  alt: "[抠]" },
{
  "url": "142.gif",
  alt: "[鼓掌]" },
{
  "url": "143.gif",
  alt: "[糟糕]" },
{
  "url": "144.gif",
  alt: "[恶搞]" },
{
  "url": "145.gif",
  alt: "[什么]" },
{
  "url": "146.gif",
  alt: "[什么]" },
{
  "url": "147.gif",
  alt: "[累]" }],

[{
  "url": "148.gif",
  alt: "[看]" },
{
  "url": "149.gif",
  alt: "[难过]" },
{
  "url": "150.gif",
  alt: "[难过]" },
{
  "url": "151.gif",
  alt: "[坏]" },
{
  "url": "152.gif",
  alt: "[亲]" },
{
  "url": "153.gif",
  alt: "[吓]" },
{
  "url": "154.gif",
  alt: "[可怜]" },
{
  "url": "155.gif",
  alt: "[刀]" },
{
  "url": "156.gif",
  alt: "[水果]" },
{
  "url": "157.gif",
  alt: "[酒]" },
{
  "url": "158.gif",
  alt: "[篮球]" },
{
  "url": "159.gif",
  alt: "[乒乓]" },
{
  "url": "160.gif",
  alt: "[咖啡]" },
{
  "url": "161.gif",
  alt: "[美食]" },
{
  "url": "162.gif",
  alt: "[动物]" },
{
  "url": "163.gif",
  alt: "[鲜花]" },
{
  "url": "164.gif",
  alt: "[枯]" },
{
  "url": "165.gif",
  alt: "[唇]" },
{
  "url": "166.gif",
  alt: "[爱]" },
{
  "url": "167.gif",
  alt: "[分手]" },
{
  "url": "168.gif",
  alt: "[生日]" },
{
  "url": "169.gif",
  alt: "[电]" },
{
  "url": "170.gif",
  alt: "[炸弹]" },
{
  "url": "171.gif",
  alt: "[刀子]" }],

[{
  "url": "172.gif",
  alt: "[足球]" },
{
  "url": "173.gif",
  alt: "[瓢虫]" },
{
  "url": "174.gif",
  alt: "[翔]" },
{
  "url": "175.gif",
  alt: "[月亮]" },
{
  "url": "176.gif",
  alt: "[太阳]" },
{
  "url": "177.gif",
  alt: "[礼物]" },
{
  "url": "178.gif",
  alt: "[抱抱]" },
{
  "url": "179.gif",
  alt: "[拇指]" },
{
  "url": "180.gif",
  alt: "[贬低]" },
{
  "url": "181.gif",
  alt: "[握手]" },
{
  "url": "182.gif",
  alt: "[剪刀手]" },
{
  "url": "183.gif",
  alt: "[抱拳]" },
{
  "url": "184.gif",
  alt: "[勾引]" },
{
  "url": "185.gif",
  alt: "[拳头]" },
{
  "url": "186.gif",
  alt: "[小拇指]" },
{
  "url": "187.gif",
  alt: "[拇指八]" },
{
  "url": "188.gif",
  alt: "[食指]" },
{
  "url": "189.gif",
  alt: "[ok]" },
{
  "url": "190.gif",
  alt: "[情侣]" },
{
  "url": "191.gif",
  alt: "[爱心]" },
{
  "url": "192.gif",
  alt: "[蹦哒]" },
{
  "url": "193.gif",
  alt: "[颤抖]" },
{
  "url": "194.gif",
  alt: "[怄气]" },
{
  "url": "195.gif",
  alt: "[跳舞]" }],

[{
  "url": "196.gif",
  alt: "[发呆]" },
{
  "url": "197.gif",
  alt: "[背着]" },
{
  "url": "198.gif",
  alt: "[伸手]" },
{
  "url": "199.gif",
  alt: "[耍帅]" },
{
  "url": "200.png",
  alt: "[微笑]" },
{
  "url": "201.png",
  alt: "[生病]" },
{
  "url": "202.png",
  alt: "[哭泣]" },
{
  "url": "203.png",
  alt: "[吐舌]" },
{
  "url": "204.png",
  alt: "[迷糊]" },
{
  "url": "205.png",
  alt: "[瞪眼]" },
{
  "url": "206.png",
  alt: "[恐怖]" },
{
  "url": "207.png",
  alt: "[忧愁]" },
{
  "url": "208.png",
  alt: "[眨眉]" },
{
  "url": "209.png",
  alt: "[闭眼]" },
{
  "url": "210.png",
  alt: "[鄙视]" },
{
  "url": "211.png",
  alt: "[阴暗]" },
{
  "url": "212.png",
  alt: "[小鬼]" },
{
  "url": "213.png",
  alt: "[礼物]" },
{
  "url": "214.png",
  alt: "[拜佛]" },
{
  "url": "215.png",
  alt: "[力量]" },
{
  "url": "216.png",
  alt: "[金钱]" },
{
  "url": "217.png",
  alt: "[蛋糕]" },
{
  "url": "218.png",
  alt: "[彩带]" },
{
  "url": "219.png",
  alt: "[礼物]" }]];



/**@dateTimeFliter 转换格林日期时间格式为常用日期格式
                    * @time[必填] 						Date  		格林日期格式
                    * @part[可选,默认:0]				Number      选择返回日期时间部分  列:0:返回所有 1:只返回日期  2:只返回时间
                    * @dateComplete[可选,默认:true] 	Boolean 	日期位数不足是否添0补齐:true:补齐,false:不补齐
                    * @timeComplete[可选,默认:true] 	Boolean 	时间位数不足是否添0补齐:true:补齐,false:不补齐
                    * @dateConnector[可选,默认:-] 		String 		年月日连接符  例: - : /
                    * @timeConnector[可选,默认::] 		String 		时间连接符   例: - : /
                    * @hour12[可选,默认:false]          Boolean     是否返回12小时制时间   例: true:返回12小时制时间   false:返回24小时制时间
                    * @return   '2019-11-25 15:05:54'  String    返回示例
                    * **/
commen.dateTimeFliter = function (time)
{var part = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;var dateComplete = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var timeComplete = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;var dateConnector = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '-';var timeConnector = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : ':';var hour12 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
  var year = time.getFullYear();
  var month = time.getMonth() + 1;
  var day = time.getDate();
  var hour = time.getHours();
  var minute = time.getMinutes();
  var second = time.getSeconds();
  var dateStr = '';
  var timeStr = '';
  //转换日期
  if (dateComplete) {//添0补齐
    if (month < 10) {
      month = '0' + month;
    }
    if (day < 10) {
      day = '0' + day;
    }
  }
  dateStr = year + dateConnector + month + dateConnector + day;
  //转换时间
  //修改小时制
  if (hour12) {
    if (hour > 12) {
      hour = hour - 12;
      if (timeComplete) {
        if (hour < 10) {
          hour = '下午 ' + '0' + hour;
        } else {
          hour = '下午 ' + hour;
        }
      }
    } else {
      if (timeComplete) {
        if (hour < 10) {
          hour = '上午 ' + '0' + hour;
        } else {
          hour = '上午 ' + hour;
        }
      }
    }
  }
  //判断分钟与秒
  if (timeComplete) {//添0补齐
    if (minute < 10) {
      minute = '0' + minute;
    }
    if (second < 10) {
      second = '0' + second;
    }
  }
  // timeStr = hour + timeConnector + minute + timeConnector + second
  timeStr = hour + timeConnector + minute;
  //合成输出值
  if (part == 0) {
    return dateStr + ' ' + timeStr;
  } else if (part == 1) {
    return dateStr;
  } else if (part == 2) {
    return timeStr;
  }
  return '传参有误';
};var _default =



commen;exports.default = _default;

/***/ }),

/***/ 19:
/*!*****************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/common/base64.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


var base64EncodeChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
var base64DecodeChars = new Array(
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,
52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,
-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,
-1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);
function encode(str) {
  var out, i, len;
  var c1, c2, c3;
  len = str.length;
  i = 0;
  out = "";
  while (i < len) {
    c1 = str.charCodeAt(i++) & 0xff;
    if (i == len) {
      out += base64EncodeChars.charAt(c1 >> 2);
      out += base64EncodeChars.charAt((c1 & 0x3) << 4);
      out += "==";
      break;
    }
    c2 = str.charCodeAt(i++);
    if (i == len) {
      out += base64EncodeChars.charAt(c1 >> 2);
      out += base64EncodeChars.charAt((c1 & 0x3) << 4 | (c2 & 0xF0) >> 4);
      out += base64EncodeChars.charAt((c2 & 0xF) << 2);
      out += "=";
      break;
    }
    c3 = str.charCodeAt(i++);
    out += base64EncodeChars.charAt(c1 >> 2);
    out += base64EncodeChars.charAt((c1 & 0x3) << 4 | (c2 & 0xF0) >> 4);
    out += base64EncodeChars.charAt((c2 & 0xF) << 2 | (c3 & 0xC0) >> 6);
    out += base64EncodeChars.charAt(c3 & 0x3F);
  }
  return out;
}
function decode(str) {
  var c1, c2, c3, c4;
  var i, len, out;
  len = str.length;
  i = 0;
  out = "";
  while (i < len) {
    /* c1 */
    do {
      c1 = base64DecodeChars[str.charCodeAt(i++) & 0xff];
    } while (i < len && c1 == -1);
    if (c1 == -1)
    break;
    /* c2 */
    do {
      c2 = base64DecodeChars[str.charCodeAt(i++) & 0xff];
    } while (i < len && c2 == -1);
    if (c2 == -1)
    break;
    out += String.fromCharCode(c1 << 2 | (c2 & 0x30) >> 4);
    /* c3 */
    do {
      c3 = str.charCodeAt(i++) & 0xff;
      if (c3 == 61)
      return out;
      c3 = base64DecodeChars[c3];
    } while (i < len && c3 == -1);
    if (c3 == -1)
    break;
    out += String.fromCharCode((c2 & 0XF) << 4 | (c3 & 0x3C) >> 2);
    /* c4 */
    do {
      c4 = str.charCodeAt(i++) & 0xff;
      if (c4 == 61)
      return out;
      c4 = base64DecodeChars[c4];
    } while (i < len && c4 == -1);
    if (c4 == -1)
    break;
    out += String.fromCharCode((c3 & 0x03) << 6 | c4);
  }
  return out;
}


function utf16to8(str) {
  var out, i, len, c;
  out = "";
  len = str.length;
  for (i = 0; i < len; i++) {
    c = str.charCodeAt(i);
    if (c >= 0x0001 && c <= 0x007F) {
      out += str.charAt(i);
    } else if (c > 0x07FF) {
      out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);
      out += String.fromCharCode(0x80 | c >> 6 & 0x3F);
      out += String.fromCharCode(0x80 | c >> 0 & 0x3F);
    } else {
      out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);
      out += String.fromCharCode(0x80 | c >> 0 & 0x3F);
    }
  }
  return out;
}
function utf8to16(str) {
  var out, i, len, c;
  var char2, char3;
  out = "";
  len = str.length;
  i = 0;
  while (i < len) {
    c = str.charCodeAt(i++);
    switch (c >> 4) {
      case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:
        // 0xxxxxxx
        out += str.charAt(i - 1);
        break;
      case 12:case 13:
        // 110x xxxx 10xx xxxx
        char2 = str.charCodeAt(i++);
        out += String.fromCharCode((c & 0x1F) << 6 | char2 & 0x3F);
        break;
      case 14:
        // 1110 xxxx 10xx xxxx 10xx xxxx
        char2 = str.charCodeAt(i++);
        char3 = str.charCodeAt(i++);
        out += String.fromCharCode((c & 0x0F) << 12 |
        (char2 & 0x3F) << 6 |
        (char3 & 0x3F) << 0);
        break;}

  }
  return out;
}


module.exports = {
  encode: encode,
  decode: decode,
  utf16to8: utf16to8,
  utf8to16: utf8to16 };

/***/ }),

/***/ 2:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2020 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      if (vm.$options && vm.$options.__file) { // fixed by xxxxxx
        return ('') + vm.$options.__file
      }
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm && vm.$options.name !== 'PageBody') {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        !vm.$options.isReserved && tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
  Dep.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
  Dep.target = Dep.SharedObject.target;
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i++, i)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  
  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);
  
  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' && 
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return  
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    !vm._$fallback && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    !vm._$fallback && initProvide(vm); // resolve provide after data/props
    !vm._$fallback && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    if (currentValue != pre[key]) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"NODE_ENV":"development","VUE_APP_NAME":"68_yibeitong","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"NODE_ENV":"development","VUE_APP_NAME":"68_yibeitong","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"NODE_ENV":"development","VUE_APP_NAME":"68_yibeitong","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);

  // vue-composition-api
  var compositionApiState = vm.__composition_api_state__ || vm.__secret_vfa_state__;
  var rawBindings = compositionApiState && compositionApiState.rawBindings;
  if (rawBindings) {
    Object.keys(rawBindings).forEach(function (key) {
      ret[key] = vm[key];
    });
  }

  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"NODE_ENV":"development","VUE_APP_NAME":"68_yibeitong","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  !vm._$fallback && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err, vm, info) {
    Vue.util.warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    console.error(err);
    /* eslint-disable no-undef */
    var app = getApp();
    if (app && app.onError) {
      app.onError(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      this.$scope['triggerEvent'](event, {
        __args__: toArray(arguments, 1)
      });
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0, l = val; i < l; i++) {
        // 第一个参数暂时仍和小程序一致
        ret[i] = iteratee(i, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onPageNotFound',
    'onThemeChange',
    'onError',
    'onUnhandledRejection',
    //Page
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onAddToFavorites',
    'onShareTimeline',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 262:
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ 263);

/***/ }),

/***/ 263:
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() {
  return this || (typeof self === "object" && self);
})() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(/*! ./runtime */ 264);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),

/***/ 264:
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() {
    return this || (typeof self === "object" && self);
  })() || Function("return this")()
);


/***/ }),

/***/ 265:
/*!****************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/utils/QS-SharePoster/app.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _log = console.log; // 如果在项目的APP.vue文件中的onlaunch中设置 console.log = ()=> {} 则在此也不会有打印信息
// log = ()=>{};	// 打开注释则该插件不会打印任何信息
var _app = {
  //交互控制
  log: function log(t) {
    _log(t);
  }, // 打印控制,
  showLoading: function showLoading(msg, ifmask) {
    uni.showLoading({
      title: msg,
      mask: ifmask || false });

  },
  hideLoading: function hideLoading() {
    uni.hideLoading();
  },
  showToast: function showToast(msg, icon) {
    uni.showToast({
      title: msg,
      icon: icon || 'none' });

  },
  getPosterUrl: function getPosterUrl(objs) {// 后端获取背景图的url路径方法
    var
    backgroundImage =


    objs.backgroundImage,type = objs.type,formData = objs.formData;
    return new Promise(function (rs, rj) {
      var image;
      if (backgroundImage) {
        image = backgroundImage;
      } else {
        switch (type) {//根据type获取背景图, 一般要改成request获取
          case 1:
            image = '';
            break;
          default:
            image = '/static/1.png';
            break;}

      }
      if (image) {
        rs(image); // resolve图片的路径
      } else {
        rj('背景图片路径不存在');
      }
    });
  },






  //下面一般不用动他
  shareTypeListSheetArray: {
    array: [0, 1, 2, 3, 4, 5] },
  // 分享类型 0-图文链接 1-纯文字 2-纯图片 3-音乐 4-视频 5-小程序
  isArray: function isArray(arg) {
    return Object.prototype.toString.call(arg) === '[object Array]';
  },
  isObject: function isObject(arg) {
    return Object.prototype.toString.call(arg) === '[object Object]';
  },
  isPromise: function isPromise(obj) {
    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
  },
  isNull: function isNull(arg) {
    return arg === null;
  },
  isUndefined: function isUndefined(arg) {
    return arg === undefined;
  },
  isUndef: function isUndef(arg) {
    return arg === undefined;
  },
  isNotNull_string: function isNotNull_string(arg) {
    return arg !== null && arg !== undefined && arg !== '';
  },
  isFn: function isFn(fn) {
    return fn && typeof fn === 'function';
  },
  getStorage: function getStorage(key, scb, fcb) {
    uni.getStorage({
      key: key,
      success: function success(res) {
        if (res.data && res.data != "") {
          if (scb) scb(res.data);
        } else {
          if (fcb) fcb();
        }
      },
      fail: function fail() {
        if (fcb) fcb();
      } });

  },
  setStorage: function setStorage(key, data) {
    _log('设置缓存');
    _log('key：' + key);
    _log('data：' + JSON.stringify(data));
    uni.setStorage({
      key: key,
      data: data });

  },
  setStorageSync: function setStorageSync(key, data) {
    uni.setStorageSync(key, data);
  },
  getStorageSync: function getStorageSync(key) {
    return uni.getStorageSync(key);
  },
  clearStorageSync: function clearStorageSync() {
    uni.clearStorageSync();
  },
  removeStorageSync: function removeStorageSync(key) {
    uni.removeStorageSync(key);
  },
  getImageInfo: function getImageInfo(url, cb, fcb) {
    url = checkMPUrl(url);
    uni.getImageInfo({
      src: url,
      success: function success(res) {
        if (cb && typeof cb == 'function') cb(res);
      },
      fail: function fail(err) {
        if (fcb && typeof fcb == 'function') fcb(err);
      } });

  },
  downloadFile: function downloadFile(url, cb) {
    url = checkMPUrl(url);
    uni.downloadFile({
      url: url,
      success: function success(res) {
        if (cb && typeof cb == 'function') cb(res);
      } });

  },
  downloadFile_PromiseFc: function downloadFile_PromiseFc(url) {
    return new Promise(function (rs, rj) {
      if (url.substring(0, 4) !== 'http') {
        rs(url);
      } else {
        url = checkMPUrl(url);
        _log('url:' + url);
        uni.downloadFile({
          url: url,
          success: function success(res) {
            if (res && res.tempFilePath)
            rs(res.tempFilePath);else

            rj('not find tempFilePath');
          },
          fail: function fail(err) {
            rj(err);
          } });

      }
    });
  },
  saveFile: function saveFile(url) {
    uni.saveFile({
      tempFilePath: url,
      success: function success(res) {
        _log('保存成功:' + JSON.stringify(res));
      } });

  },
  downLoadAndSaveFile_PromiseFc: function downLoadAndSaveFile_PromiseFc(url) {
    return new Promise(function (rs, rj) {
      _log('准备下载并保存图片:' + url);
      if (url.substring(0, 4) === 'http') {
        url = checkMPUrl(url);
        uni.downloadFile({
          url: url,
          success: function success(d_res) {
            _log('下载背景图成功：' + JSON.stringify(d_res));
            if (d_res && d_res.tempFilePath) {






              uni.saveFile({
                tempFilePath: d_res.tempFilePath,
                success: function success(s_res) {
                  _log('保存背景图成功:' + JSON.stringify(s_res));
                  if (s_res && s_res.savedFilePath)
                  rs(s_res.savedFilePath);else

                  rs(d_res.tempFilePath);
                },
                fail: function fail(err) {
                  rs(d_res.tempFilePath);
                } });



            } else {
              rj('not find tempFilePath');
            }
          },
          fail: function fail(err) {
            rj(err);
          } });

      } else {
        rs(url);
      }
    });
  },
  checkFile_PromiseFc: function checkFile_PromiseFc(url) {
    return new Promise(function (rs, rj) {
      uni.getSavedFileList({
        success: function success(res) {
          var d = res.fileList;
          var index = d.findIndex(function (item) {
            return item.filePath === url;
          });
          rs(index);
        },
        fail: function fail(err) {
          rj(err);
        } });

    });
  },
  removeSavedFile: function removeSavedFile(path) {
    uni.getSavedFileList({
      success: function success(res) {
        var d = res.fileList;
        var index = d.findIndex(function (item) {
          return item.filePath === path;
        });
        if (index >= 0)
        uni.removeSavedFile({
          filePath: path });

      } });

  },
  fileNameInPath: function fileNameInPath(path) {
    var s = path.split("/");
    return s[s.length - 1];
  },
  getImageInfo_PromiseFc: function getImageInfo_PromiseFc(imgPath) {
    return new Promise(function (rs, rj) {
      _log('准备获取图片信息:' + imgPath);
      imgPath = checkMPUrl(imgPath);
      uni.getImageInfo({
        src: imgPath,
        success: function success(res) {
          _log('获取图片信息成功:' + JSON.stringify(res));
          rs(res);
        },
        fail: function fail(err) {
          _log('获取图片信息失败:' + JSON.stringify(err));
          rj(err);
        } });

    });
  },
  previewImage: function previewImage(urls) {
    if (typeof urls == 'string')
    urls = [urls];
    uni.previewImage({
      urls: urls });

  },
  actionSheet: function actionSheet(obj, cb) {
    var sheetArray = [];
    for (var i = 0; i < obj.array.length; i++) {
      switch (obj.array[i]) {
        case 'sinaweibo':
          sheetArray[i] = '新浪微博';
          break;
        case 'qq':
          sheetArray[i] = 'QQ';
          break;
        case 'weixin':
          sheetArray[i] = '微信';
          break;
        case 'WXSceneSession':
          sheetArray[i] = '微信好友';
          break;
        case 'WXSenceTimeline':
          sheetArray[i] = '微信朋友圈';
          break;
        case 'WXSceneFavorite':
          sheetArray[i] = '微信收藏';
          break;
        case 0:
          sheetArray[i] = '图文链接';
          break;
        case 1:
          sheetArray[i] = '纯文字';
          break;
        case 2:
          sheetArray[i] = '纯图片';
          break;
        case 3:
          sheetArray[i] = '音乐';
          break;
        case 4:
          sheetArray[i] = '视频';
          break;
        case 5:
          sheetArray[i] = '小程序';
          break;
        default:
          break;}

    }
    this.showActionSheet(sheetArray, cb);
  },
  showActionSheet: function showActionSheet(sheetArray, cb) {
    uni.showActionSheet({
      itemList: sheetArray,
      success: function success(e) {
        if (cb && typeof cb == 'function') cb(e.tapIndex);
      } });

  },
  getProvider: function getProvider(type, cb, sheet) {
    var _this = this;
    uni.getProvider({
      service: type,
      success: function success(res) {
        if (sheet) {
          var obj = {};
          obj.array = res.provider;
          _this.actionSheet(obj, function (index) {
            if (cb && typeof cb == "function") cb(res.provider[index]);
          });
        } else {
          if (type == 'payment') {
            var providers = res.provider;
            var payTypeArray = [];
            for (var i = 0; i < providers.length; i++) {
              if (providers[i] == 'wxpay') {
                payTypeArray[i] = {
                  name: '微信支付',
                  value: providers[i],
                  img: '/static/image/wei.png' };

              } else if (providers[i] == 'alipay') {
                payTypeArray[i] = {
                  name: "支付宝支付",
                  value: providers[i],
                  img: '/static/image/ali.png' };

              }
            }
            if (cb && typeof cb == "function") cb(payTypeArray);
          } else {
            if (cb && typeof cb == "function") cb(res);
          }
        }
      } });

  } };



















































































































































































function checkMPUrl(url) {

  if (false) {}

  return url;
}

module.exports = _app;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 266:
/*!***************************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/utils/QS-SharePoster/QS-SharePoster.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {var _regenerator = _interopRequireDefault(__webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ 262));var _app2 = _interopRequireDefault(__webpack_require__(/*! ./app.js */ 265));
var _QRCodeAlg = _interopRequireDefault(__webpack_require__(/*! ./QRCodeAlg.js */ 267));
var _imageTools = __webpack_require__(/*! ./image-tools.js */ 268);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {Promise.resolve(value).then(_next, _throw);}}function _asyncToGenerator(fn) {return function () {var self = this,args = arguments;return new Promise(function (resolve, reject) {var gen = fn.apply(self, args);function _next(value) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);}function _throw(err) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);}_next(undefined);});};}
var ShreUserPosterBackgroundKey = 'ShrePosterBackground_'; // 背景图片缓存名称前缀
var idKey = 'QSSHAREPOSTER_IDKEY'; //drawArray自动生成的idkey
var isMp = false;

isMp = true;


var nbgScale = 1;
// export default 
function getSharePoster(obj) {
  return new Promise( /*#__PURE__*/function () {var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee(resolve, reject) {var result1, result2;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.prev = 0;_context.next = 3;return (

                returnPromise(obj));case 3:result1 = _context.sent;
              resolve(result1);_context.next = 21;break;case 7:_context.prev = 7;_context.t0 = _context["catch"](0);_context.prev = 9;



              if (obj.bgScale) {
                obj.bgScale = Number(obj.bgScale) - 0.1;
              } else {
                nbgScale = nbgScale - 0.1;
              }
              console.log('------------清除缓存后, 开始第二次尝试------------');_context.next = 14;return (
                returnPromise(obj));case 14:result2 = _context.sent;
              resolve(result2);_context.next = 21;break;case 18:_context.prev = 18;_context.t1 = _context["catch"](9);

              //TODO handle the exception
              reject(_context.t1);case 21:case "end":return _context.stop();}}}, _callee, null, [[0, 7], [9, 18]]);}));return function (_x, _x2) {return _ref.apply(this, arguments);};}());




}

function returnPromise(obj) {var

  type =

















  obj.type,formData = obj.formData,background = obj.background,posterCanvasId = obj.posterCanvasId,backgroundImage = obj.backgroundImage,reserve = obj.reserve,textArray = obj.textArray,drawArray = obj.drawArray,qrCodeArray = obj.qrCodeArray,imagesArray = obj.imagesArray,setCanvasWH = obj.setCanvasWH,setCanvasToTempFilePath = obj.setCanvasToTempFilePath,setDraw = obj.setDraw,bgScale = obj.bgScale,Context = obj.Context,_this = obj._this,delayTimeScale = obj.delayTimeScale,drawDelayTime = obj.drawDelayTime;
  return new Promise( /*#__PURE__*/function () {var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee2(rs, rj) {var bgObj, params, i, hasAllInfoCallback, _i, drawArrayItem, newData, drawArray_copy, _i2, item, _newData, item_idKey, poster;return _regenerator.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:_context2.prev = 0;

              _app2.default.showLoading('正在准备海报数据');
              if (!Context) {
                _app2.default.log('没有画布对象,创建画布对象');
                Context = uni.createCanvasContext(posterCanvasId, _this || null);
              }if (!(

              background && background.width && background.height)) {_context2.next = 7;break;}
              bgObj = background;_context2.next = 10;break;case 7:_context2.next = 9;return (

                getShreUserPosterBackground({
                  backgroundImage: backgroundImage,
                  type: type,
                  formData: formData }));case 9:bgObj = _context2.sent;case 10:


              bgScale = bgScale || nbgScale;
              bgObj.width = bgObj.width * bgScale;
              bgObj.height = bgObj.height * bgScale;

              _app2.default.log('获取背景图信息对象成功:' + JSON.stringify(bgObj));
              params = {
                bgObj: bgObj,
                type: type,
                bgScale: bgScale,
                getBgObj: function getBgObj() {
                  return params.bgObj;
                },
                setBgObj: function setBgObj(newBgObj) {
                  var n = _objectSpread(_objectSpread({}, params.bgObj), newBgObj);
                  params.bgObj = n;
                  bgObj = n;
                } };if (!

              imagesArray) {_context2.next = 23;break;}
              if (typeof imagesArray == 'function')
              imagesArray = imagesArray(params);
              _app2.default.showLoading('正在生成需绘制图片的临时路径');
              _app2.default.log('准备设置图片');_context2.next = 21;return (
                setImage(imagesArray));case 21:imagesArray = _context2.sent;
              _app2.default.hideLoading();case 23:

              if (textArray) {
                if (typeof textArray == 'function')
                textArray = textArray(params);
                textArray = setText(Context, textArray);

              }if (!
              qrCodeArray) {_context2.next = 38;break;}
              if (typeof qrCodeArray == 'function')
              qrCodeArray = qrCodeArray(params);
              _app2.default.showLoading('正在生成需绘制图片的临时路径');
              i = 0;case 28:if (!(i < qrCodeArray.length)) {_context2.next = 37;break;}
              _app2.default.log(i);if (!
              qrCodeArray[i].image) {_context2.next = 34;break;}_context2.next = 33;return (
                _app2.default.downloadFile_PromiseFc(qrCodeArray[i].image));case 33:qrCodeArray[i].image = _context2.sent;case 34:i++;_context2.next = 28;break;case 37:

              _app2.default.hideLoading();case 38:if (!

              drawArray) {_context2.next = 99;break;}
              if (typeof drawArray == 'function') {
                drawArray = drawArray(params);
              }if (!
              _app2.default.isPromise(drawArray)) {_context2.next = 44;break;}_context2.next = 43;return (
                drawArray);case 43:drawArray = _context2.sent;case 44:if (!(


              _app2.default.isArray(drawArray) && drawArray.length > 0)) {_context2.next = 99;break;}
              hasAllInfoCallback = false;
              _i = 0;case 47:if (!(_i < drawArray.length)) {_context2.next = 79;break;}
              drawArrayItem = drawArray[_i];
              if (_app2.default.isFn(drawArrayItem.allInfoCallback) && !hasAllInfoCallback) hasAllInfoCallback = true;
              drawArrayItem[idKey] = _i;
              newData = void 0;_context2.t0 =
              drawArrayItem.type;_context2.next = _context2.t0 ===
              'image' ? 55 : _context2.t0 ===


              'text' ? 59 : _context2.t0 ===


              'qrcode' ? 61 : _context2.t0 ===





              'custom' ? 67 : _context2.t0 ===

              'fillrect' ? 68 : _context2.t0 ===

              'strokeRect' ? 69 : _context2.t0 ===

              'roundStrokeRect' ? 70 : _context2.t0 ===

              'roundFillRect' ? 71 : 72;break;case 55:_context2.next = 57;return setImage(drawArrayItem);case 57:newData = _context2.sent;return _context2.abrupt("break", 74);case 59:newData = setText(Context, drawArrayItem);return _context2.abrupt("break", 74);case 61:if (!drawArrayItem.image) {_context2.next = 66;break;}_context2.next = 64;return _app2.default.downloadFile_PromiseFc(drawArrayItem.image);case 64:_context2.t1 = _context2.sent;newData = { image: _context2.t1 };case 66:return _context2.abrupt("break", 74);case 67:return _context2.abrupt("break", 74);case 68:return _context2.abrupt("break", 74);case 69:return _context2.abrupt("break", 74);case 70:return _context2.abrupt("break", 74);case 71:return _context2.abrupt("break", 74);case 72:


              _app2.default.log('未识别的类型');return _context2.abrupt("break", 74);case 74:


              if (newData && _app2.default.isObject(newData)) {
                drawArray[_i] = _objectSpread(_objectSpread({}, drawArrayItem),
                newData);

              };case 76:_i++;_context2.next = 47;break;case 79:if (!


              hasAllInfoCallback) {_context2.next = 99;break;}
              _app2.default.log('----------------hasAllInfoCallback----------------');
              drawArray_copy = _toConsumableArray(drawArray);
              drawArray_copy.sort(function (a, b) {
                var a_serialNum = !_app2.default.isUndef(a.serialNum) && !_app2.default.isNull(a.serialNum) ? Number(a.serialNum) : Number.NEGATIVE_INFINITY;
                var b_serialNum = !_app2.default.isUndef(b.serialNum) && !_app2.default.isNull(b.serialNum) ? Number(b.serialNum) : Number.NEGATIVE_INFINITY;
                return a_serialNum - b_serialNum;
              });
              _app2.default.log('开始for循环');

              _i2 = 0;case 85:if (!(_i2 < drawArray_copy.length)) {_context2.next = 98;break;}
              item = _objectSpread({}, drawArray_copy[_i2]);if (!

              _app2.default.isFn(item.allInfoCallback)) {_context2.next = 95;break;}
              _newData = item.allInfoCallback({
                drawArray: drawArray });if (!

              _app2.default.isPromise(_newData)) {_context2.next = 93;break;}_context2.next = 92;return _newData;case 92:_newData = _context2.sent;case 93:
              item_idKey = item[idKey];
              if (!_app2.default.isUndef(item_idKey)) {
                drawArray[item[idKey]] = _objectSpread(_objectSpread({}, item),
                _newData);

              } else {
                console.log('程序错误 找不到idKey!!!	...这不应该啊');
              }case 95:_i2++;_context2.next = 85;break;case 98:


              _app2.default.log('for循环结束');case 99:



              console.log('params:' + JSON.stringify(params));if (!(
              setCanvasWH && typeof setCanvasWH == 'function')) {_context2.next = 103;break;}_context2.next = 103;return (
                new Promise(function (resolve, reject) {
                  setCanvasWH(params);
                  setTimeout(function () {
                    resolve();
                  }, 50);
                }));case 103:_context2.next = 105;return (

                drawShareImage({
                  Context: Context,
                  type: type,
                  posterCanvasId: posterCanvasId,
                  reserve: reserve,
                  drawArray: drawArray,
                  textArray: textArray,
                  imagesArray: imagesArray,
                  bgObj: bgObj,
                  qrCodeArray: qrCodeArray,
                  setCanvasToTempFilePath: setCanvasToTempFilePath,
                  setDraw: setDraw,
                  bgScale: bgScale,
                  _this: _this,
                  delayTimeScale: delayTimeScale,
                  drawDelayTime: drawDelayTime }));case 105:poster = _context2.sent;

              _app2.default.hideLoading();
              rs({
                bgObj: bgObj,
                poster: poster,
                type: type });_context2.next = 113;break;case 110:_context2.prev = 110;_context2.t2 = _context2["catch"](0);


              //TODO handle the exception
              rj(_context2.t2);case 113:case "end":return _context2.stop();}}}, _callee2, null, [[0, 110]]);}));return function (_x3, _x4) {return _ref2.apply(this, arguments);};}());


}

function drawShareImage(obj) {//绘制海报方法
  var
  Context =














  obj.Context,type = obj.type,posterCanvasId = obj.posterCanvasId,reserve = obj.reserve,bgObj = obj.bgObj,drawArray = obj.drawArray,textArray = obj.textArray,qrCodeArray = obj.qrCodeArray,imagesArray = obj.imagesArray,setCanvasToTempFilePath = obj.setCanvasToTempFilePath,setDraw = obj.setDraw,bgScale = obj.bgScale,_this = obj._this,delayTimeScale = obj.delayTimeScale,drawDelayTime = obj.drawDelayTime;
  var params = {
    Context: Context,
    bgObj: bgObj,
    type: type,
    bgScale: bgScale };

  delayTimeScale = delayTimeScale !== undefined ? delayTimeScale : 15;
  drawDelayTime = drawDelayTime !== undefined ? drawDelayTime : 100;
  return new Promise(function (rs, rj) {
    try {
      _app2.default.showLoading('正在绘制海报');
      _app2.default.log('背景对象:' + JSON.stringify(bgObj));
      if (bgObj && bgObj.path) {
        _app2.default.log('背景有图片路径');
        Context.drawImage(bgObj.path, 0, 0, bgObj.width, bgObj.height);
      } else {
        _app2.default.log('背景没有图片路径');
        if (bgObj.backgroundColor) {
          _app2.default.log('背景有背景颜色:' + bgObj.backgroundColor);
          Context.setFillStyle(bgObj.backgroundColor);
          Context.fillRect(0, 0, bgObj.width, bgObj.height);
        } else {
          _app2.default.log('背景没有背景颜色');
        }
      }

      _app2.default.showLoading('绘制图片');
      if (imagesArray && imagesArray.length > 0)
      drawImage(Context, imagesArray);

      _app2.default.showLoading('绘制自定义内容');
      if (setDraw && typeof setDraw == 'function') setDraw(params);

      _app2.default.showLoading('绘制文本');
      if (textArray && textArray.length > 0)
      drawText(Context, textArray, bgObj);

      _app2.default.showLoading('绘制二维码');
      if (qrCodeArray && qrCodeArray.length > 0) {
        for (var i = 0; i < qrCodeArray.length; i++) {
          drawQrCode(Context, qrCodeArray[i]);
        }
      }

      _app2.default.showLoading('绘制可控层级序列');
      if (drawArray && drawArray.length > 0) {
        for (var _i3 = 0; _i3 < drawArray.length; _i3++) {
          var drawArrayItem = drawArray[_i3];
          _app2.default.log('绘制可控层级序列, drawArrayItem:' + JSON.stringify(drawArrayItem));
          switch (drawArrayItem.type) {
            case 'image':
              _app2.default.log('绘制可控层级序列, 绘制图片');
              drawImage(Context, drawArrayItem);
              break;
            case 'text':
              _app2.default.log('绘制可控层级序列, 绘制文本');
              drawText(Context, drawArrayItem, bgObj);
              break;
            case 'qrcode':
              _app2.default.log('绘制可控层级序列, 绘制二维码');
              drawQrCode(Context, drawArrayItem);
              break;
            case 'custom':
              _app2.default.log('绘制可控层级序列, 绘制自定义内容');
              if (drawArrayItem.setDraw && typeof drawArrayItem.setDraw === 'function')
              drawArrayItem.setDraw(Context);
              break;drawRoundStrokeRect, drawStrokeRect;
            case 'fillRect':
              _app2.default.log('绘制可控层级序列, 绘制填充直角矩形');
              drawFillRect(Context, drawArrayItem);
              break;
            case 'strokeRect':
              _app2.default.log('绘制可控层级序列, 绘制线条直角矩形');
              drawStrokeRect(Context, drawArrayItem);
              break;
            case 'roundStrokeRect':
              _app2.default.log('绘制可控层级序列, 绘制线条圆角矩形');
              drawRoundStrokeRect(Context, drawArrayItem);
              break;
            case 'roundFillRect':
              _app2.default.log('绘制可控层级序列, 绘制填充圆角矩形');
              drawRoundFillRect(Context, drawArrayItem);
              break;
            default:
              _app2.default.log('未识别的类型');
              break;}

        }
      }
      _app2.default.showLoading('绘制中');
      setTimeout(function () {
        _app2.default.log('准备执行draw方法');
        _app2.default.log('Context:' + Context);
        var fn = function fn() {
          _app2.default.showLoading('正在输出图片');
          var setObj = setCanvasToTempFilePath || {};
          if (setObj && typeof setObj == 'function')
          setObj = setCanvasToTempFilePath(bgObj, type);
          var canvasToTempFilePathFn;
          var data = _objectSpread({
            x: 0,
            y: 0,
            width: bgObj.width,
            height: bgObj.height,
            destWidth: bgObj.width, // 若H5使用这里请不要乘以二
            destHeight: bgObj.height, // 若H5使用这里请不要乘以二
            quality: .8,
            fileType: 'jpg' },
          setObj);

          _app2.default.log('canvasToTempFilePath的data对象:' + JSON.stringify(data));
          canvasToTempFilePathFn = function canvasToTempFilePathFn() {
            var toTempFilePathObj = _objectSpread(_objectSpread({},
            data), {}, {
              canvasId: posterCanvasId,
              success: function success(res) {
                _app2.default.hideLoading();
                rs(res);
              },
              fail: function fail(err) {
                _app2.default.hideLoading();
                _app2.default.log('输出图片失败:' + JSON.stringify(err));
                rj('输出图片失败:' + JSON.stringify(err));
              } });

            uni.canvasToTempFilePath(toTempFilePathObj, _this || null);
          };
          var delayTime = 0;
          if (qrCodeArray) {
            qrCodeArray.forEach(function (item) {
              if (item.text) {
                delayTime += Number(item.text.length);
              }
            });
          }
          if (imagesArray) {
            imagesArray.forEach(function () {
              delayTime += delayTimeScale;
            });
          }
          if (textArray) {
            textArray.forEach(function () {
              delayTime += delayTimeScale;
            });
          }
          if (drawArray) {
            drawArray.forEach(function (item) {
              switch (item.type) {
                case 'text':
                  if (item.text) {
                    delayTime += item.text.length;
                  }
                  break;
                default:
                  delayTime += delayTimeScale;
                  break;}

            });
          }
          _app2.default.log('延时系数:' + delayTimeScale);
          _app2.default.log('总计延时:' + delayTime);
          setTimeout(canvasToTempFilePathFn, delayTime);
        };
        Context.draw(typeof reserve == 'boolean' ? reserve : false, fn);
      }, drawDelayTime);
    } catch (e) {
      //TODO handle the exception
      _app2.default.hideLoading();
      rj(e);
    }
  });
}

// export
function drawFillRect(Context) {var drawArrayItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //填充矩形
  _app2.default.log('进入绘制填充直角矩形方法, drawArrayItem:' + JSON.stringify(drawArrayItem));
  Context.setFillStyle(drawArrayItem.backgroundColor || 'black');
  Context.setGlobalAlpha(drawArrayItem.alpha || 1);
  Context.fillRect(drawArrayItem.dx || 0, drawArrayItem.dy || 0, drawArrayItem.width || 0, drawArrayItem.height || 0);
  Context.setGlobalAlpha(1);
}

// export
function drawStrokeRect(Context) {var drawArrayItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; //线条矩形
  Context.setStrokeStyle(drawArrayItem.color || 'black');
  Context.setLineWidth(drawArrayItem.lineWidth || 1);
  Context.strokeRect(drawArrayItem.dx, drawArrayItem.dy, drawArrayItem.width, drawArrayItem.height);
}

// export
function drawRoundStrokeRect(Context) {var drawArrayItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var
  dx = drawArrayItem.dx,dy = drawArrayItem.dy,width = drawArrayItem.width,height = drawArrayItem.height,r = drawArrayItem.r,lineWidth = drawArrayItem.lineWidth,color = drawArrayItem.color;
  r = r || width * .1;

  if (width < 2 * r) {
    r = width / 2;
  }
  if (width < 2 * r) {
    r = width / 2;
  }
  Context.beginPath();
  Context.moveTo(dx + r, dy);
  Context.arcTo(dx + width, dy, dx + width, dy + height, r);
  Context.arcTo(dx + width, dy + height, dx, dy + height, r);
  Context.arcTo(dx, dy + height, dx, dy, r);
  Context.arcTo(dx, dy, dx + width, dy, r);
  Context.closePath();
  Context.setLineWidth(lineWidth || 1);
  Context.setStrokeStyle(color || 'black');
  Context.stroke();
}

// export
function drawRoundFillRect(Context) {var drawArrayItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var
  dx = drawArrayItem.dx,dy = drawArrayItem.dy,width = drawArrayItem.width,height = drawArrayItem.height,r = drawArrayItem.r,backgroundColor = drawArrayItem.backgroundColor;
  r = r || width * .1;

  if (width < 2 * r) {
    r = width / 2;
  }
  if (width < 2 * r) {
    r = width / 2;
  }
  Context.beginPath();
  Context.moveTo(dx + r, dy);
  Context.arcTo(dx + width, dy, dx + width, dy + height, r);
  Context.arcTo(dx + width, dy + height, dx, dy + height, r);
  Context.arcTo(dx, dy + height, dx, dy, r);
  Context.arcTo(dx, dy, dx + width, dy, r);
  Context.closePath();
  Context.setFillStyle(backgroundColor);
  Context.fill();
}

// export 
function setText(Context, texts) {// 设置文本数据
  _app2.default.log('进入设置文字方法, texts:' + JSON.stringify(texts));
  if (texts && _app2.default.isArray(texts)) {
    _app2.default.log('texts是数组');
    if (texts.length > 0) {
      for (var i = 0; i < texts.length; i++) {
        _app2.default.log('字符串信息-初始化之前:' + JSON.stringify(texts[i]));
        texts[i] = setTextFn(Context, texts[i]);
      }
    }
  } else {
    _app2.default.log('texts是对象');
    texts = setTextFn(Context, texts);
  }
  _app2.default.log('返回texts:' + JSON.stringify(texts));
  return texts;
}

function setTextFn(Context, textItem) {
  _app2.default.log('进入设置文字方法, textItem:' + JSON.stringify(textItem));
  if (_app2.default.isNotNull_string(textItem.text)) {
    textItem.text = String(textItem.text);
    textItem.alpha = textItem.alpha !== undefined ? Number(textItem.alpha) : 1;
    textItem.color = textItem.color || 'black';
    textItem.size = textItem.size !== undefined ? Number(textItem.size) : 10;
    textItem.textAlign = textItem.textAlign || 'left';
    textItem.textBaseline = textItem.textBaseline || 'middle';
    textItem.dx = Number(textItem.dx) || 0;
    textItem.dy = Number(textItem.dy) || 0;
    textItem.size = Math.ceil(Number(textItem.size));
    _app2.default.log('字符串信息-初始化默认值后:' + JSON.stringify(textItem));
    var textLength = countTextLength(Context, {
      text: textItem.text,
      size: textItem.size });

    _app2.default.log('字符串信息-初始化时的文本长度:' + textLength);
    var infoCallBackObj = {};
    if (textItem.infoCallBack && typeof textItem.infoCallBack === 'function') {
      infoCallBackObj = textItem.infoCallBack(textLength);
    }
    textItem = _objectSpread(_objectSpread({},
    textItem), {}, {
      textLength: textLength },
    infoCallBackObj);

    _app2.default.log('字符串信息-infoCallBack后:' + JSON.stringify(textItem));
  }
  return textItem;
}

function countTextLength(Context, obj) {
  _app2.default.log('计算文字长度, obj:' + JSON.stringify(obj));var

  text =

  obj.text,size = obj.size;
  Context.setFontSize(size);
  var textLength;
  try {
    textLength = Context.measureText(text); // 官方文档说 App端自定义组件编译模式暂时不可用measureText方法
  } catch (e) {
    //TODO handle the exception
    textLength = {};
  }
  textLength = {};
  _app2.default.log('measureText计算文字长度, textLength:' + JSON.stringify(textLength));
  textLength = textLength && textLength.width ? textLength.width : 0;
  if (!textLength) {
    var l = 0;
    for (var j = 0; j < text.length; j++) {
      var t = text.substr(j, 1);
      var countL = countStrLength(t);
      _app2.default.log('计算文字宽度系数:' + countL);
      l += countL;
    }
    _app2.default.log('文字宽度总系数:' + l);
    textLength = l * size;
  }
  return textLength;
}

//计算字符长度系数
function countStrLength(t) {
  var l;
  if (/a/.test(t)) {
    l = 0.552734375;
  } else if (/b/.test(t)) {
    l = 0.638671875;
  } else if (/c/.test(t)) {
    l = 0.50146484375;
  } else if (/d/.test(t)) {
    l = 0.6396484375;
  } else if (/e/.test(t)) {
    l = 0.5673828125;
  } else if (/f/.test(t)) {
    l = 0.3466796875;
  } else if (/g/.test(t)) {
    l = 0.6396484375;
  } else if (/h/.test(t)) {
    l = 0.61572265625;
  } else if (/i/.test(t)) {
    l = 0.26611328125;
  } else if (/j/.test(t)) {
    l = 0.26708984375;
  } else if (/k/.test(t)) {
    l = 0.54443359375;
  } else if (/l/.test(t)) {
    l = 0.26611328125;
  } else if (/m/.test(t)) {
    l = 0.93701171875;
  } else if (/n/.test(t)) {
    l = 0.6162109375;
  } else if (/o/.test(t)) {
    l = 0.6357421875;
  } else if (/p/.test(t)) {
    l = 0.638671875;
  } else if (/q/.test(t)) {
    l = 0.6396484375;
  } else if (/r/.test(t)) {
    l = 0.3818359375;
  } else if (/s/.test(t)) {
    l = 0.462890625;
  } else if (/t/.test(t)) {
    l = 0.37255859375;
  } else if (/u/.test(t)) {
    l = 0.6162109375;
  } else if (/v/.test(t)) {
    l = 0.52490234375;
  } else if (/w/.test(t)) {
    l = 0.78955078125;
  } else if (/x/.test(t)) {
    l = 0.5068359375;
  } else if (/y/.test(t)) {
    l = 0.529296875;
  } else if (/z/.test(t)) {
    l = 0.49169921875;
  } else if (/A/.test(t)) {
    l = 0.70361328125;
  } else if (/B/.test(t)) {
    l = 0.62744140625;
  } else if (/C/.test(t)) {
    l = 0.6689453125;
  } else if (/D/.test(t)) {
    l = 0.76171875;
  } else if (/E/.test(t)) {
    l = 0.5498046875;
  } else if (/F/.test(t)) {
    l = 0.53125;
  } else if (/G/.test(t)) {
    l = 0.74365234375;
  } else if (/H/.test(t)) {
    l = 0.7734375;
  } else if (/I/.test(t)) {
    l = 0.2939453125;
  } else if (/J/.test(t)) {
    l = 0.39599609375;
  } else if (/K/.test(t)) {
    l = 0.634765625;
  } else if (/L/.test(t)) {
    l = 0.51318359375;
  } else if (/M/.test(t)) {
    l = 0.97705078125;
  } else if (/N/.test(t)) {
    l = 0.81298828125;
  } else if (/O/.test(t)) {
    l = 0.81494140625;
  } else if (/P/.test(t)) {
    l = 0.61181640625;
  } else if (/Q/.test(t)) {
    l = 0.81494140625;
  } else if (/R/.test(t)) {
    l = 0.65283203125;
  } else if (/S/.test(t)) {
    l = 0.5771484375;
  } else if (/T/.test(t)) {
    l = 0.5732421875;
  } else if (/U/.test(t)) {
    l = 0.74658203125;
  } else if (/V/.test(t)) {
    l = 0.67626953125;
  } else if (/W/.test(t)) {
    l = 1.017578125;
  } else if (/X/.test(t)) {
    l = 0.64501953125;
  } else if (/Y/.test(t)) {
    l = 0.603515625;
  } else if (/Z/.test(t)) {
    l = 0.6201171875;
  } else if (/[0-9]/.test(t)) {
    l = 0.58642578125;
  } else if (/[\u4e00-\u9fa5]/.test(t)) {
    l = 1;
  } else if (/ /.test(t)) {
    l = 0.2958984375;
  } else if (/\`/.test(t)) {
    l = 0.294921875;
  } else if (/\~/.test(t)) {
    l = 0.74169921875;
  } else if (/\!/.test(t)) {
    l = 0.3125;
  } else if (/\@/.test(t)) {
    l = 1.03125;
  } else if (/\#/.test(t)) {
    l = 0.63818359375;
  } else if (/\$/.test(t)) {
    l = 0.58642578125;
  } else if (/\%/.test(t)) {
    l = 0.8896484375;
  } else if (/\^/.test(t)) {
    l = 0.74169921875;
  } else if (/\&/.test(t)) {
    l = 0.8701171875;
  } else if (/\*/.test(t)) {
    l = 0.455078125;
  } else if (/\(/.test(t)) {
    l = 0.333984375;
  } else if (/\)/.test(t)) {
    l = 0.333984375;
  } else if (/\_/.test(t)) {
    l = 0.4482421875;
  } else if (/\-/.test(t)) {
    l = 0.4326171875;
  } else if (/\+/.test(t)) {
    l = 0.74169921875;
  } else if (/\=/.test(t)) {
    l = 0.74169921875;
  } else if (/\|/.test(t)) {
    l = 0.26904296875;
  } else if (/\\/.test(t)) {
    l = 0.416015625;
  } else if (/\[/.test(t)) {
    l = 0.333984375;
  } else if (/\]/.test(t)) {
    l = 0.333984375;
  } else if (/\;/.test(t)) {
    l = 0.24072265625;
  } else if (/\'/.test(t)) {
    l = 0.25634765625;
  } else if (/\,/.test(t)) {
    l = 0.24072265625;
  } else if (/\./.test(t)) {
    l = 0.24072265625;
  } else if (/\//.test(t)) {
    l = 0.42724609375;
  } else if (/\{/.test(t)) {
    l = 0.333984375;
  } else if (/\}/.test(t)) {
    l = 0.333984375;
  } else if (/\:/.test(t)) {
    l = 0.24072265625;
  } else if (/\"/.test(t)) {
    l = 0.435546875;
  } else if (/\</.test(t)) {
    l = 0.74169921875;
  } else if (/\>/.test(t)) {
    l = 0.74169921875;
  } else if (/\?/.test(t)) {
    l = 0.48291015625;
  } else {
    l = 1;
  }
  return l;
}

// export 
function setImage(images) {// 设置图片数据
  _app2.default.log('进入设置图片数据方法');
  return new Promise( /*#__PURE__*/function () {var _ref3 = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee3(resolve, rejcet) {var i;return _regenerator.default.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:_context3.prev = 0;if (!(

              images && _app2.default.isArray(images))) {_context3.next = 14;break;}
              _app2.default.log('images是一个数组');
              i = 0;case 4:if (!(i < images.length)) {_context3.next = 12;break;}
              _app2.default.log('设置图片数据循环中:' + i);_context3.next = 8;return (
                setImageFn(images[i]));case 8:images[i] = _context3.sent;case 9:i++;_context3.next = 4;break;case 12:_context3.next = 18;break;case 14:


              _app2.default.log('images是一个对象');_context3.next = 17;return (
                setImageFn(images));case 17:images = _context3.sent;case 18:

              resolve(images);_context3.next = 24;break;case 21:_context3.prev = 21;_context3.t0 = _context3["catch"](0);

              //TODO handle the exception
              rejcet(_context3.t0);case 24:case "end":return _context3.stop();}}}, _callee3, null, [[0, 21]]);}));return function (_x5, _x6) {return _ref3.apply(this, arguments);};}());


}

function base64ToPathFn(path) {
  var reg = /^\s*data:([a-z]+\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\-._~:@\/?%\s]*?)\s*$/i;
  if (!reg.test(path)) {
    return Promise.resolve(path);
  }
  return (0, _imageTools.base64ToPath)(path);
}

function setImageFn(image) {
  return new Promise( /*#__PURE__*/function () {var _ref4 = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee4(resolve, reject) {var imgUrl, hasinfoCallBack, imageInfo;return _regenerator.default.wrap(function _callee4$(_context4) {while (1) {switch (_context4.prev = _context4.next) {case 0:if (!
              image.url) {_context4.next = 20;break;}_context4.next = 3;return (
                base64ToPathFn(image.url));case 3:image.url = _context4.sent;
              imgUrl = image.url;_context4.next = 7;return (
                _app2.default.downloadFile_PromiseFc(imgUrl));case 7:imgUrl = _context4.sent;
              image.url = imgUrl;
              hasinfoCallBack = image.infoCallBack && typeof image.infoCallBack === 'function';
              imageInfo = {};_context4.next = 13;return (
                _app2.default.getImageInfo_PromiseFc(imgUrl));case 13:imageInfo = _context4.sent;
              if (hasinfoCallBack) {
                image = _objectSpread(_objectSpread({},
                image),
                image.infoCallBack(imageInfo));

              }
              image.dx = Number(image.dx) || 0;
              image.dy = Number(image.dy) || 0;
              image.dWidth = Number(image.dWidth || imageInfo.width);
              image.dHeight = Number(image.dHeight || imageInfo.height);
              image = _objectSpread(_objectSpread({},
              image), {}, {
                imageInfo: imageInfo });case 20:


              resolve(image);case 21:case "end":return _context4.stop();}}}, _callee4);}));return function (_x7, _x8) {return _ref4.apply(this, arguments);};}());

}

// export 
function drawText(Context, textArray, bgObj) {// 先遍历换行再绘制
  if (!_app2.default.isArray(textArray)) {
    _app2.default.log('遍历文本方法, 不是数组');
    textArray = [textArray];
  } else {
    _app2.default.log('遍历文本方法, 是数组');
  }
  _app2.default.log('遍历文本方法, textArray:' + JSON.stringify(textArray));
  var newArr = [];
  if (textArray && textArray.length > 0) {
    for (var j = 0; j < textArray.length; j++) {
      var textItem = textArray[j];
      if (textItem.text && textItem.lineFeed) {
        var lineNum = -1,
        maxWidth = bgObj.width,
        lineHeight = textItem.size,
        dx = textItem.dx;
        if (_app2.default.isObject(textItem.lineFeed)) {
          var lineFeed = textItem.lineFeed;
          lineNum = lineFeed.lineNum !== undefined && typeof lineFeed.lineNum === 'number' && lineFeed.lineNum >= 0 ?
          lineFeed.lineNum : lineNum;
          maxWidth = lineFeed.maxWidth !== undefined && typeof lineFeed.maxWidth === 'number' ? lineFeed.maxWidth :
          maxWidth;
          lineHeight = lineFeed.lineHeight !== undefined && typeof lineFeed.lineHeight === 'number' ? lineFeed.lineHeight :
          lineHeight;
          dx = lineFeed.dx !== undefined && typeof lineFeed.dx === 'number' ? lineFeed.dx : dx;
        }
        var chr = textItem.text.split("");
        var temp = "";
        var row = [];
        //循环出几行文字组成数组
        for (var a = 0, len = chr.length; a < len; a++) {
          if (countTextLength(Context, {
            text: temp,
            size: textItem.size }) <=
          maxWidth && countTextLength(Context, {
            text: temp + chr[a],
            size: textItem.size }) <=
          maxWidth) {
            temp += chr[a];
            if (a == chr.length - 1) {
              row.push(temp);
            }
          } else {
            row.push(temp);
            temp = chr[a];
          }
        }
        _app2.default.log('循环出的文本数组:' + JSON.stringify(row));
        //只显示几行 变量间距lineHeight  变量行数lineNum
        var allNum = lineNum >= 0 && lineNum < row.length ? lineNum : row.length;

        for (var i = 0; i < allNum; i++) {
          var str = row[i];
          if (i == allNum - 1 && allNum < row.length) {
            str = str.substring(0, str.length - 1) + '...';
          }
          var obj = _objectSpread(_objectSpread({}, textItem), {}, {
            text: str,
            dx: i === 0 ? textItem.dx : dx >= 0 ? dx : textItem.dx,
            dy: textItem.dy + i * lineHeight,
            textLength: countTextLength(Context, {
              text: str,
              size: textItem.size }) });


          _app2.default.log('重新组成的文本对象:' + JSON.stringify(obj));
          newArr.push(obj);
        }
      } else {
        newArr.push(textItem);
      }
    }
  }
  _app2.default.log('绘制文本新数组:' + JSON.stringify(newArr));
  drawTexts(Context, newArr);
}

function setFont() {var textItem = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  if (textItem.font && typeof textItem.font === 'string') {
    _app2.default.log(textItem.font);
    return textItem.font;
  } else {
    var fontStyle = 'normal';
    var fontVariant = 'normal';
    var fontWeight = 'normal';
    var fontSize = textItem.size || 10;
    var fontFamily = 'sans-serif';
    fontSize = Math.ceil(Number(fontSize));
    if (textItem.fontStyle && typeof textItem.fontStyle === 'string')
    fontStyle = textItem.fontStyle.trim();
    if (textItem.fontVariant && typeof textItem.fontVariant === 'string')
    fontVariant = textItem.fontVariant.trim();
    if (textItem.fontWeight && (typeof textItem.fontWeight === 'string' || typeof textItem.fontWeight === 'number'))
    fontWeight = textItem.fontWeight.trim();
    if (textItem.fontFamily && typeof textItem.fontFamily === 'string')
    fontFamily = textItem.fontFamily.trim();
    return fontStyle + ' ' +
    fontVariant + ' ' +
    fontWeight + ' ' +
    fontSize + 'px' + ' ' +
    fontFamily;
  }
}

function drawTexts(Context, texts) {// 绘制文本
  _app2.default.log('准备绘制文本方法, texts:' + JSON.stringify(texts));
  if (texts && _app2.default.isArray(texts)) {
    _app2.default.log('准备绘制文本方法, 是数组');
    if (texts.length > 0) {
      for (var i = 0; i < texts.length; i++) {
        drawTextFn(Context, texts[i]);
      }
    }
  } else {
    _app2.default.log('准备绘制文本方法, 不是数组');
    drawTextFn(Context, texts);
  }
}

function drawTextFn(Context, textItem) {
  _app2.default.log('进入绘制文本方法, textItem:' + JSON.stringify(textItem));
  if (textItem && _app2.default.isObject(textItem) && textItem.text) {
    Context.font = setFont(textItem);
    Context.setFillStyle(textItem.color);
    Context.setGlobalAlpha(textItem.alpha);
    Context.setTextAlign(textItem.textAlign);
    Context.setTextBaseline(textItem.textBaseline);
    Context.fillText(textItem.text, textItem.dx, textItem.dy);
    if (textItem.lineThrough && _app2.default.isObject(textItem.lineThrough)) {
      _app2.default.log('有删除线');
      var lineThrough = textItem.lineThrough;
      lineThrough.alpha = lineThrough.alpha !== undefined ? lineThrough.alpha : textItem.alpha;
      lineThrough.style = lineThrough.style || textItem.color;
      lineThrough.width = lineThrough.width !== undefined ? lineThrough.width : textItem.size / 10;
      lineThrough.cap = lineThrough.cap !== undefined ? lineThrough.cap : 'butt';
      _app2.default.log('删除线对象:' + JSON.stringify(lineThrough));
      Context.setGlobalAlpha(lineThrough.alpha);
      Context.setStrokeStyle(lineThrough.style);
      Context.setLineWidth(lineThrough.width);
      Context.setLineCap(lineThrough.cap);
      var mx, my;
      switch (textItem.textAlign) {
        case 'left':
          mx = textItem.dx;
          break;
        case 'center':
          mx = textItem.dx - textItem.textLength / 2;
          break;
        default:
          mx = textItem.dx - textItem.textLength;
          break;}

      switch (textItem.textBaseline) {
        case 'top':
          my = textItem.dy + textItem.size * .5;
          break;
        case 'middle':
          my = textItem.dy;
          break;
        default:
          my = textItem.dy - textItem.size * .5;
          break;}

      Context.beginPath();
      Context.moveTo(mx, my);
      Context.lineTo(mx + textItem.textLength, my);
      Context.stroke();
      Context.closePath();
      _app2.default.log('删除线完毕');
    }
    Context.setGlobalAlpha(1);
    Context.font = '10px sans-serif';
  }
}
// export 
function drawImage(Context, images) {// 绘制图片
  _app2.default.log('判断图片数据类型:' + JSON.stringify(images));
  if (images && _app2.default.isArray(images)) {
    if (images.length > 0) {
      for (var i = 0; i < images.length; i++) {
        readyDrawImageFn(Context, images[i]);
      }
    }
  } else {
    readyDrawImageFn(Context, images);
  }

}

function readyDrawImageFn(Context, img) {
  _app2.default.log('判断绘制图片形状, img:' + JSON.stringify(img));
  if (img.url) {
    if (img.circleSet) {
      drawCircleImage(Context, img);
    } else if (img.roundRectSet) {
      drawRoundRectImage(Context, img);
    } else {
      drawImageFn(Context, img);
    }
  }
}

function drawImageFn(Context, img) {
  _app2.default.log('进入绘制默认图片方法, img:' + JSON.stringify(img));
  if (img.url) {
    var hasAlpha = !_app2.default.isUndef(img.alpha);
    img.alpha = Number(!_app2.default.isUndef(img.alpha) ? img.alpha : 1);
    Context.setGlobalAlpha(img.alpha);
    _app2.default.log('绘制默认图片方法, 有url');
    if (img.dWidth && img.dHeight && img.sx && img.sy && img.sWidth && img.sHeight) {
      _app2.default.log('绘制默认图片方法, 绘制第一种方案');
      Context.drawImage(img.url,
      Number(img.sx) || false, Number(img.sy) || false,
      Number(img.sWidth) || false, Number(img.sHeight) || false,
      Number(img.dx || 0), Number(img.dy || 0),
      Number(img.dWidth) || false, Number(img.dHeight) || false);
    } else if (img.dWidth && img.dHeight) {
      _app2.default.log('绘制默认图片方法, 绘制第二种方案');
      Context.drawImage(img.url, Number(img.dx || 0), Number(img.dy || 0),
      Number(img.dWidth) || false, Number(img.dHeight) || false);
    } else {
      _app2.default.log('绘制默认图片方法, 绘制第三种方案');
      Context.drawImage(img.url, Number(img.dx || 0), Number(img.dy || 0));
    }
    if (hasAlpha) {
      Context.setGlobalAlpha(1);
    }
  }
  _app2.default.log('绘制默认图片方法, 绘制完毕');
}

function drawCircleImage(Context, obj) {
  _app2.default.log('进入绘制圆形图片方法, obj:' + JSON.stringify(obj));var

  dx =





  obj.dx,dy = obj.dy,dWidth = obj.dWidth,dHeight = obj.dHeight,circleSet = obj.circleSet,imageInfo = obj.imageInfo;
  var x, y, r;
  if (typeof circleSet === 'object') {
    x = circleSet.x;
    y = circleSet.y;
    r = circleSet.r;
  }
  if (!r) {
    var d;
    d = dWidth > dHeight ? dHeight : dWidth;
    r = d / 2;
  }

  x = x ? dx + x : (dx || 0) + r;
  y = y ? dy + y : (dy || 0) + r;
  Context.save();
  Context.beginPath();
  Context.arc(x, y, r, 0, 2 * Math.PI, false);
  Context.closePath();
  Context.setGlobalAlpha(0);
  Context.fillStyle = '#FFFFFF';
  Context.fill();
  Context.setGlobalAlpha(1);
  Context.clip();
  drawImageFn(Context, obj);
  _app2.default.log('默认图片绘制完毕');
  Context.restore();
}

function drawRoundRectImage(Context, obj) {// 绘制矩形
  _app2.default.log('进入绘制矩形图片方法, obj:' + JSON.stringify(obj));
  Context.save();var

  dx =





  obj.dx,dy = obj.dy,dWidth = obj.dWidth,dHeight = obj.dHeight,roundRectSet = obj.roundRectSet,imageInfo = obj.imageInfo;
  var r;
  if (typeof roundRectSet === 'object') {
    r = roundRectSet.r;
  }
  r = r || dWidth * .1;

  if (dWidth < 2 * r) {
    r = dWidth / 2;
  }
  if (dHeight < 2 * r) {
    r = dHeight / 2;
  }
  Context.beginPath();
  Context.moveTo(dx + r, dy);
  Context.arcTo(dx + dWidth, dy, dx + dWidth, dy + dHeight, r);
  Context.arcTo(dx + dWidth, dy + dHeight, dx, dy + dHeight, r);
  Context.arcTo(dx, dy + dHeight, dx, dy, r);
  Context.arcTo(dx, dy, dx + dWidth, dy, r);
  Context.closePath();
  Context.setGlobalAlpha(0);
  Context.fillStyle = '#FFFFFF';
  Context.fill();
  Context.setGlobalAlpha(1);
  Context.clip();
  drawImageFn(Context, obj);
  Context.restore();
  _app2.default.log('进入绘制矩形图片方法, 绘制完毕');
}

// export 
function drawQrCode(Context, qrCodeObj) {//生成二维码方法， 参考了 诗小柒 的二维码生成器代码
  _app2.default.log('进入绘制二维码方法');
  _app2.default.showLoading('正在生成二维码');
  var qrcodeAlgObjCache = [];
  var options = {
    text: String(qrCodeObj.text || '') || '', // 生成内容
    size: Number(qrCodeObj.size || 0) || 200, // 二维码大小
    background: String(qrCodeObj.background || '') || '#ffffff', // 背景色
    foreground: String(qrCodeObj.foreground || '') || '#000000', // 前景色
    pdground: String(qrCodeObj.pdground || '') || '#000000', // 定位角点颜色
    correctLevel: Number(qrCodeObj.correctLevel || 0) || 3, // 容错级别
    image: String(qrCodeObj.image || '') || '', // 二维码图标
    imageSize: Number(qrCodeObj.imageSize || 0) || 40, // 二维码图标大小
    dx: Number(qrCodeObj.dx || 0) || 0, // x轴距离
    dy: Number(qrCodeObj.dy || 0) || 0 // y轴距离
  };
  var qrCodeAlg = null;
  var d = 0;
  for (var i = 0, l = qrcodeAlgObjCache.length; i < l; i++) {
    d = i;
    if (qrcodeAlgObjCache[i].text == options.text && qrcodeAlgObjCache[i].text.correctLevel == options.correctLevel) {
      qrCodeAlg = qrcodeAlgObjCache[i].obj;
      break;
    }
  }
  if (d == l) {
    qrCodeAlg = new _QRCodeAlg.default(options.text, options.correctLevel);
    qrcodeAlgObjCache.push({
      text: options.text,
      correctLevel: options.correctLevel,
      obj: qrCodeAlg });

  }
  var getForeGround = function getForeGround(config) {
    var options = config.options;
    if (options.pdground && (
    config.row > 1 && config.row < 5 && config.col > 1 && config.col < 5 ||
    config.row > config.count - 6 && config.row < config.count - 2 && config.col > 1 && config.col < 5 ||
    config.row > 1 && config.row < 5 && config.col > config.count - 6 && config.col < config.count - 2))
    {
      return options.pdground;
    }
    return options.foreground;
  };
  var count = qrCodeAlg.getModuleCount();
  var ratioSize = options.size;
  var ratioImgSize = options.imageSize;
  //计算每个点的长宽
  var tileW = (ratioSize / count).toPrecision(4);
  var tileH = (ratioSize / count).toPrecision(4);
  //绘制
  for (var row = 0; row < count; row++) {
    for (var col = 0; col < count; col++) {
      var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);
      var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);
      var foreground = getForeGround({
        row: row,
        col: col,
        count: count,
        options: options });

      Context.setFillStyle(qrCodeAlg.modules[row][col] ? foreground : options.background);
      Context.fillRect(options.dx + Math.round(col * tileW), options.dy + Math.round(row * tileH), w, h);
    }
  }
  if (options.image) {




    // 画圆角矩形
    var drawRoundedRect = function drawRoundedRect(ctxi, x, y, width, height, r, lineWidth, fill, stroke) {
      ctxi.setLineWidth(lineWidth);
      ctxi.setFillStyle(options.background);
      ctxi.setStrokeStyle(options.background);
      ctxi.beginPath(); // draw top and top right corner 
      ctxi.moveTo(x + r, y);
      ctxi.arcTo(x + width, y, x + width, y + r, r); // draw right side and bottom right corner 
      ctxi.arcTo(x + width, y + height, x + width - r, y + height, r); // draw bottom and bottom left corner 
      ctxi.arcTo(x, y + height, x, y + height - r, r); // draw left and top left corner 
      ctxi.arcTo(x, y, x + r, y, r);
      ctxi.closePath();
      if (fill) {
        ctxi.fill();
      }
      if (stroke) {
        ctxi.stroke();
      }
    };var x = options.dx + Number(((ratioSize - ratioImgSize) / 2).toFixed(2));var y = options.dy + Number(((ratioSize - ratioImgSize) / 2).toFixed(2));drawRoundedRect(Context, x, y, ratioImgSize, ratioImgSize, 2, 6, true, true);Context.drawImage(options.image, x, y, ratioImgSize, ratioImgSize);
  }
  _app2.default.log('进入绘制二维码方法完毕');
  _app2.default.hideLoading();
}


function getShreUserPosterBackground(objs) {//检查背景图是否存在于本地， 若存在直接返回， 否则调用getShreUserPosterBackgroundFc方法
  var
  backgroundImage =

  objs.backgroundImage,type = objs.type;
  return new Promise( /*#__PURE__*/function () {var _ref5 = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee5(resolve, reject) {var savedFilePath;return _regenerator.default.wrap(function _callee5$(_context5) {while (1) {switch (_context5.prev = _context5.next) {case 0:_context5.prev = 0;

              _app2.default.showLoading('正在获取海报背景图');_context5.next = 4;return (
                getShreUserPosterBackgroundFc(objs));case 4:savedFilePath = _context5.sent;
              _app2.default.hideLoading();
              resolve(savedFilePath);_context5.next = 15;break;case 9:_context5.prev = 9;_context5.t0 = _context5["catch"](0);

              _app2.default.hideLoading();
              _app2.default.showToast('获取分享用户背景图失败:' + JSON.stringify(_context5.t0));
              _app2.default.log(JSON.stringify(_context5.t0));
              reject(_context5.t0);case 15:case "end":return _context5.stop();}}}, _callee5, null, [[0, 9]]);}));return function (_x9, _x10) {return _ref5.apply(this, arguments);};}());


}

function getPosterStorage(type) {
  return _app2.default.getStorageSync(getStorageKey(type));
}

function removePosterStorage(type) {
  var ShreUserPosterBackgroundKey = getStorageKey(type);
  var pbg = _app2.default.getStorageSync(ShreUserPosterBackgroundKey);
  if (pbg && pbg.path) {
    _app2.default.removeStorageSync(ShreUserPosterBackgroundKey);
  }
}

function setPosterStorage(type, data) {
  _app2.default.setStorage(getStorageKey(type), data);
}

function getStorageKey(type) {
  return ShreUserPosterBackgroundKey + (type || 'default');
}

function getShreUserPosterBackgroundFc(objs, upimage) {//下载并保存背景图方法
  var
  backgroundImage =

  objs.backgroundImage,type = objs.type;
  _app2.default.log('获取分享背景图, 尝试清空本地数据');
  return new Promise( /*#__PURE__*/function () {var _ref6 = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee6(resolve, reject) {var image, savedFilePath, imageObj, returnObj;return _regenerator.default.wrap(function _callee6$(_context6) {while (1) {switch (_context6.prev = _context6.next) {case 0:_context6.prev = 0;

              _app2.default.showLoading('正在下载海报背景图');
              _app2.default.log('没有从后端获取的背景图片路径, 尝试从后端获取背景图片路径');if (!
              backgroundImage) {_context6.next = 7;break;}_context6.t0 = backgroundImage;_context6.next = 10;break;case 7:_context6.next = 9;return _app2.default.getPosterUrl(objs);case 9:_context6.t0 = _context6.sent;case 10:image = _context6.t0;_context6.next = 13;return (
                base64ToPathFn(image));case 13:image = _context6.sent;
              _app2.default.log('尝试下载并保存背景图:' + image);_context6.next = 17;return (
                _app2.default.downLoadAndSaveFile_PromiseFc(image));case 17:savedFilePath = _context6.sent;if (!
              savedFilePath) {_context6.next = 32;break;}
              _app2.default.log('下载并保存背景图成功:' + savedFilePath);_context6.next = 22;return (
                _app2.default.getImageInfo_PromiseFc(savedFilePath));case 22:imageObj = _context6.sent;
              _app2.default.log('获取图片信息成功');
              returnObj = {
                path: savedFilePath,
                width: imageObj.width,
                height: imageObj.height,
                name: _app2.default.fileNameInPath(image) };

              _app2.default.log('拼接背景图信息对象成功:' + JSON.stringify(returnObj));


              setPosterStorage(type, _objectSpread({}, returnObj));



              _app2.default.hideLoading();
              _app2.default.log('返回背景图信息对象');
              resolve(_objectSpread({}, returnObj));_context6.next = 34;break;case 32:


              _app2.default.hideLoading();
              reject('not find savedFilePath');case 34:_context6.next = 39;break;case 36:_context6.prev = 36;_context6.t1 = _context6["catch"](0);


              //TODO handle the exception
              reject(_context6.t1);case 39:case "end":return _context6.stop();}}}, _callee6, null, [[0, 36]]);}));return function (_x11, _x12) {return _ref6.apply(this, arguments);};}());


}


module.exports = {
  getSharePoster: getSharePoster,
  setText: setText,
  setImage: setImage,
  drawText: drawText,
  drawImage: drawImage,
  drawQrCode: drawQrCode,
  drawFillRect: drawFillRect,
  drawStrokeRect: drawStrokeRect,
  drawRoundStrokeRect: drawRoundStrokeRect,
  drawRoundFillRect: drawRoundFillRect };
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 267:
/*!**********************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/utils/QS-SharePoster/QRCodeAlg.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = QRCodeAlg; /**
                                                                                                            * 获取单个字符的utf8编码
                                                                                                            * unicode BMP平面约65535个字符
                                                                                                            * @param {num} code
                                                                                                            * return {array}
                                                                                                            */
function unicodeFormat8(code) {
  // 1 byte
  var c0, c1, c2;
  if (code < 128) {
    return [code];
    // 2 bytes
  } else if (code < 2048) {
    c0 = 192 + (code >> 6);
    c1 = 128 + (code & 63);
    return [c0, c1];
    // 3 bytes
  } else {
    c0 = 224 + (code >> 12);
    c1 = 128 + (code >> 6 & 63);
    c2 = 128 + (code & 63);
    return [c0, c1, c2];
  }
}
/**
   * 获取字符串的utf8编码字节串
   * @param {string} string
   * @return {array}
   */
function getUTF8Bytes(string) {
  var utf8codes = [];
  for (var i = 0; i < string.length; i++) {
    var code = string.charCodeAt(i);
    var utf8 = unicodeFormat8(code);
    for (var j = 0; j < utf8.length; j++) {
      utf8codes.push(utf8[j]);
    }
  }
  return utf8codes;
}
/**
   * 二维码算法实现
   * @param {string} data              要编码的信息字符串
   * @param {num} errorCorrectLevel 纠错等级
   */
function QRCodeAlg(data, errorCorrectLevel) {
  this.typeNumber = -1; //版本
  this.errorCorrectLevel = errorCorrectLevel;
  this.modules = null; //二维矩阵，存放最终结果
  this.moduleCount = 0; //矩阵大小
  this.dataCache = null; //数据缓存
  this.rsBlocks = null; //版本数据信息
  this.totalDataCount = -1; //可使用的数据量
  this.data = data;
  this.utf8bytes = getUTF8Bytes(data);
  this.make();
}
QRCodeAlg.prototype = {
  constructor: QRCodeAlg,
  /**
                           * 获取二维码矩阵大小
                           * @return {num} 矩阵大小
                           */
  getModuleCount: function getModuleCount() {
    return this.moduleCount;
  },
  /**
      * 编码
      */
  make: function make() {
    this.getRightType();
    this.dataCache = this.createData();
    this.createQrcode();
  },
  /**
      * 设置二位矩阵功能图形
      * @param  {bool} test 表示是否在寻找最好掩膜阶段
      * @param  {num} maskPattern 掩膜的版本
      */
  makeImpl: function makeImpl(maskPattern) {
    this.moduleCount = this.typeNumber * 4 + 17;
    this.modules = new Array(this.moduleCount);
    for (var row = 0; row < this.moduleCount; row++) {
      this.modules[row] = new Array(this.moduleCount);
    }
    this.setupPositionProbePattern(0, 0);
    this.setupPositionProbePattern(this.moduleCount - 7, 0);
    this.setupPositionProbePattern(0, this.moduleCount - 7);
    this.setupPositionAdjustPattern();
    this.setupTimingPattern();
    this.setupTypeInfo(true, maskPattern);
    if (this.typeNumber >= 7) {
      this.setupTypeNumber(true);
    }
    this.mapData(this.dataCache, maskPattern);
  },
  /**
      * 设置二维码的位置探测图形
      * @param  {num} row 探测图形的中心横坐标
      * @param  {num} col 探测图形的中心纵坐标
      */
  setupPositionProbePattern: function setupPositionProbePattern(row, col) {
    for (var r = -1; r <= 7; r++) {
      if (row + r <= -1 || this.moduleCount <= row + r) continue;
      for (var c = -1; c <= 7; c++) {
        if (col + c <= -1 || this.moduleCount <= col + c) continue;
        if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {
          this.modules[row + r][col + c] = true;
        } else {
          this.modules[row + r][col + c] = false;
        }
      }
    }
  },
  /**
      * 创建二维码
      * @return {[type]} [description]
      */
  createQrcode: function createQrcode() {
    var minLostPoint = 0;
    var pattern = 0;
    var bestModules = null;
    for (var i = 0; i < 8; i++) {
      this.makeImpl(i);
      var lostPoint = QRUtil.getLostPoint(this);
      if (i == 0 || minLostPoint > lostPoint) {
        minLostPoint = lostPoint;
        pattern = i;
        bestModules = this.modules;
      }
    }
    this.modules = bestModules;
    this.setupTypeInfo(false, pattern);
    if (this.typeNumber >= 7) {
      this.setupTypeNumber(false);
    }
  },
  /**
      * 设置定位图形
      * @return {[type]} [description]
      */
  setupTimingPattern: function setupTimingPattern() {
    for (var r = 8; r < this.moduleCount - 8; r++) {
      if (this.modules[r][6] != null) {
        continue;
      }
      this.modules[r][6] = r % 2 == 0;
      if (this.modules[6][r] != null) {
        continue;
      }
      this.modules[6][r] = r % 2 == 0;
    }
  },
  /**
      * 设置矫正图形
      * @return {[type]} [description]
      */
  setupPositionAdjustPattern: function setupPositionAdjustPattern() {
    var pos = QRUtil.getPatternPosition(this.typeNumber);
    for (var i = 0; i < pos.length; i++) {
      for (var j = 0; j < pos.length; j++) {
        var row = pos[i];
        var col = pos[j];
        if (this.modules[row][col] != null) {
          continue;
        }
        for (var r = -2; r <= 2; r++) {
          for (var c = -2; c <= 2; c++) {
            if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {
              this.modules[row + r][col + c] = true;
            } else {
              this.modules[row + r][col + c] = false;
            }
          }
        }
      }
    }
  },
  /**
      * 设置版本信息（7以上版本才有）
      * @param  {bool} test 是否处于判断最佳掩膜阶段
      * @return {[type]}      [description]
      */
  setupTypeNumber: function setupTypeNumber(test) {
    var bits = QRUtil.getBCHTypeNumber(this.typeNumber);
    for (var i = 0; i < 18; i++) {
      var mod = !test && (bits >> i & 1) == 1;
      this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;
      this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
    }
  },
  /**
      * 设置格式信息（纠错等级和掩膜版本）
      * @param  {bool} test
      * @param  {num} maskPattern 掩膜版本
      * @return {}
      */
  setupTypeInfo: function setupTypeInfo(test, maskPattern) {
    var data = QRErrorCorrectLevel[this.errorCorrectLevel] << 3 | maskPattern;
    var bits = QRUtil.getBCHTypeInfo(data);
    // vertical
    for (var i = 0; i < 15; i++) {
      var mod = !test && (bits >> i & 1) == 1;
      if (i < 6) {
        this.modules[i][8] = mod;
      } else if (i < 8) {
        this.modules[i + 1][8] = mod;
      } else {
        this.modules[this.moduleCount - 15 + i][8] = mod;
      }
      // horizontal
      var mod = !test && (bits >> i & 1) == 1;
      if (i < 8) {
        this.modules[8][this.moduleCount - i - 1] = mod;
      } else if (i < 9) {
        this.modules[8][15 - i - 1 + 1] = mod;
      } else {
        this.modules[8][15 - i - 1] = mod;
      }
    }
    // fixed module
    this.modules[this.moduleCount - 8][8] = !test;
  },
  /**
      * 数据编码
      * @return {[type]} [description]
      */
  createData: function createData() {
    var buffer = new QRBitBuffer();
    var lengthBits = this.typeNumber > 9 ? 16 : 8;
    buffer.put(4, 4); //添加模式
    buffer.put(this.utf8bytes.length, lengthBits);
    for (var i = 0, l = this.utf8bytes.length; i < l; i++) {
      buffer.put(this.utf8bytes[i], 8);
    }
    if (buffer.length + 4 <= this.totalDataCount * 8) {
      buffer.put(0, 4);
    }
    // padding
    while (buffer.length % 8 != 0) {
      buffer.putBit(false);
    }
    // padding
    while (true) {
      if (buffer.length >= this.totalDataCount * 8) {
        break;
      }
      buffer.put(QRCodeAlg.PAD0, 8);
      if (buffer.length >= this.totalDataCount * 8) {
        break;
      }
      buffer.put(QRCodeAlg.PAD1, 8);
    }
    return this.createBytes(buffer);
  },
  /**
      * 纠错码编码
      * @param  {buffer} buffer 数据编码
      * @return {[type]}
      */
  createBytes: function createBytes(buffer) {
    var offset = 0;
    var maxDcCount = 0;
    var maxEcCount = 0;
    var length = this.rsBlock.length / 3;
    var rsBlocks = new Array();
    for (var i = 0; i < length; i++) {
      var count = this.rsBlock[i * 3 + 0];
      var totalCount = this.rsBlock[i * 3 + 1];
      var dataCount = this.rsBlock[i * 3 + 2];
      for (var j = 0; j < count; j++) {
        rsBlocks.push([dataCount, totalCount]);
      }
    }
    var dcdata = new Array(rsBlocks.length);
    var ecdata = new Array(rsBlocks.length);
    for (var r = 0; r < rsBlocks.length; r++) {
      var dcCount = rsBlocks[r][0];
      var ecCount = rsBlocks[r][1] - dcCount;
      maxDcCount = Math.max(maxDcCount, dcCount);
      maxEcCount = Math.max(maxEcCount, ecCount);
      dcdata[r] = new Array(dcCount);
      for (var i = 0; i < dcdata[r].length; i++) {
        dcdata[r][i] = 0xff & buffer.buffer[i + offset];
      }
      offset += dcCount;
      var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
      var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);
      var modPoly = rawPoly.mod(rsPoly);
      ecdata[r] = new Array(rsPoly.getLength() - 1);
      for (var i = 0; i < ecdata[r].length; i++) {
        var modIndex = i + modPoly.getLength() - ecdata[r].length;
        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;
      }
    }
    var data = new Array(this.totalDataCount);
    var index = 0;
    for (var i = 0; i < maxDcCount; i++) {
      for (var r = 0; r < rsBlocks.length; r++) {
        if (i < dcdata[r].length) {
          data[index++] = dcdata[r][i];
        }
      }
    }
    for (var i = 0; i < maxEcCount; i++) {
      for (var r = 0; r < rsBlocks.length; r++) {
        if (i < ecdata[r].length) {
          data[index++] = ecdata[r][i];
        }
      }
    }
    return data;

  },
  /**
      * 布置模块，构建最终信息
      * @param  {} data
      * @param  {} maskPattern
      * @return {}
      */
  mapData: function mapData(data, maskPattern) {
    var inc = -1;
    var row = this.moduleCount - 1;
    var bitIndex = 7;
    var byteIndex = 0;
    for (var col = this.moduleCount - 1; col > 0; col -= 2) {
      if (col == 6) col--;
      while (true) {
        for (var c = 0; c < 2; c++) {
          if (this.modules[row][col - c] == null) {
            var dark = false;
            if (byteIndex < data.length) {
              dark = (data[byteIndex] >>> bitIndex & 1) == 1;
            }
            var mask = QRUtil.getMask(maskPattern, row, col - c);
            if (mask) {
              dark = !dark;
            }
            this.modules[row][col - c] = dark;
            bitIndex--;
            if (bitIndex == -1) {
              byteIndex++;
              bitIndex = 7;
            }
          }
        }
        row += inc;
        if (row < 0 || this.moduleCount <= row) {
          row -= inc;
          inc = -inc;
          break;
        }
      }
    }
  } };

/**
        * 填充字段
        */
QRCodeAlg.PAD0 = 0xEC;
QRCodeAlg.PAD1 = 0x11;
//---------------------------------------------------------------------
// 纠错等级对应的编码
//---------------------------------------------------------------------
var QRErrorCorrectLevel = [1, 0, 3, 2];
//---------------------------------------------------------------------
// 掩膜版本
//---------------------------------------------------------------------
var QRMaskPattern = {
  PATTERN000: 0,
  PATTERN001: 1,
  PATTERN010: 2,
  PATTERN011: 3,
  PATTERN100: 4,
  PATTERN101: 5,
  PATTERN110: 6,
  PATTERN111: 7 };

//---------------------------------------------------------------------
// 工具类
//---------------------------------------------------------------------
var QRUtil = {
  /*
               每个版本矫正图形的位置
                */
  PATTERN_POSITION_TABLE: [
  [],
  [6, 18],
  [6, 22],
  [6, 26],
  [6, 30],
  [6, 34],
  [6, 22, 38],
  [6, 24, 42],
  [6, 26, 46],
  [6, 28, 50],
  [6, 30, 54],
  [6, 32, 58],
  [6, 34, 62],
  [6, 26, 46, 66],
  [6, 26, 48, 70],
  [6, 26, 50, 74],
  [6, 30, 54, 78],
  [6, 30, 56, 82],
  [6, 30, 58, 86],
  [6, 34, 62, 90],
  [6, 28, 50, 72, 94],
  [6, 26, 50, 74, 98],
  [6, 30, 54, 78, 102],
  [6, 28, 54, 80, 106],
  [6, 32, 58, 84, 110],
  [6, 30, 58, 86, 114],
  [6, 34, 62, 90, 118],
  [6, 26, 50, 74, 98, 122],
  [6, 30, 54, 78, 102, 126],
  [6, 26, 52, 78, 104, 130],
  [6, 30, 56, 82, 108, 134],
  [6, 34, 60, 86, 112, 138],
  [6, 30, 58, 86, 114, 142],
  [6, 34, 62, 90, 118, 146],
  [6, 30, 54, 78, 102, 126, 150],
  [6, 24, 50, 76, 102, 128, 154],
  [6, 28, 54, 80, 106, 132, 158],
  [6, 32, 58, 84, 110, 136, 162],
  [6, 26, 54, 82, 110, 138, 166],
  [6, 30, 58, 86, 114, 142, 170]],

  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,
  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,
  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,
  /*
                                                           BCH编码格式信息
                                                            */
  getBCHTypeInfo: function getBCHTypeInfo(data) {
    var d = data << 10;
    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {
      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);
    }
    return (data << 10 | d) ^ QRUtil.G15_MASK;
  },
  /*
     BCH编码版本信息
      */
  getBCHTypeNumber: function getBCHTypeNumber(data) {
    var d = data << 12;
    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {
      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);
    }
    return data << 12 | d;
  },
  /*
     获取BCH位信息
      */
  getBCHDigit: function getBCHDigit(data) {
    var digit = 0;
    while (data != 0) {
      digit++;
      data >>>= 1;
    }
    return digit;
  },
  /*
     获取版本对应的矫正图形位置
      */
  getPatternPosition: function getPatternPosition(typeNumber) {
    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
  },
  /*
     掩膜算法
      */
  getMask: function getMask(maskPattern, i, j) {
    switch (maskPattern) {
      case QRMaskPattern.PATTERN000:
        return (i + j) % 2 == 0;
      case QRMaskPattern.PATTERN001:
        return i % 2 == 0;
      case QRMaskPattern.PATTERN010:
        return j % 3 == 0;
      case QRMaskPattern.PATTERN011:
        return (i + j) % 3 == 0;
      case QRMaskPattern.PATTERN100:
        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
      case QRMaskPattern.PATTERN101:
        return i * j % 2 + i * j % 3 == 0;
      case QRMaskPattern.PATTERN110:
        return (i * j % 2 + i * j % 3) % 2 == 0;
      case QRMaskPattern.PATTERN111:
        return (i * j % 3 + (i + j) % 2) % 2 == 0;
      default:
        throw new Error("bad maskPattern:" + maskPattern);}

  },
  /*
     获取RS的纠错多项式
      */
  getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {
    var a = new QRPolynomial([1], 0);
    for (var i = 0; i < errorCorrectLength; i++) {
      a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));
    }
    return a;
  },
  /*
     获取评价
      */
  getLostPoint: function getLostPoint(qrCode) {
    var moduleCount = qrCode.getModuleCount(),
    lostPoint = 0,
    darkCount = 0;
    for (var row = 0; row < moduleCount; row++) {
      var sameCount = 0;
      var head = qrCode.modules[row][0];
      for (var col = 0; col < moduleCount; col++) {
        var current = qrCode.modules[row][col];
        //level 3 评价
        if (col < moduleCount - 6) {
          if (current && !qrCode.modules[row][col + 1] && qrCode.modules[row][col + 2] && qrCode.modules[row][col + 3] && qrCode.modules[row][col + 4] && !qrCode.modules[row][col + 5] && qrCode.modules[row][col + 6]) {
            if (col < moduleCount - 10) {
              if (qrCode.modules[row][col + 7] && qrCode.modules[row][col + 8] && qrCode.modules[row][col + 9] && qrCode.modules[row][col + 10]) {
                lostPoint += 40;
              }
            } else if (col > 3) {
              if (qrCode.modules[row][col - 1] && qrCode.modules[row][col - 2] && qrCode.modules[row][col - 3] && qrCode.modules[row][col - 4]) {
                lostPoint += 40;
              }
            }
          }
        }
        //level 2 评价
        if (row < moduleCount - 1 && col < moduleCount - 1) {
          var count = 0;
          if (current) count++;
          if (qrCode.modules[row + 1][col]) count++;
          if (qrCode.modules[row][col + 1]) count++;
          if (qrCode.modules[row + 1][col + 1]) count++;
          if (count == 0 || count == 4) {
            lostPoint += 3;
          }
        }
        //level 1 评价
        if (head ^ current) {
          sameCount++;
        } else {
          head = current;
          if (sameCount >= 5) {
            lostPoint += 3 + sameCount - 5;
          }
          sameCount = 1;
        }
        //level 4 评价
        if (current) {
          darkCount++;
        }
      }
    }
    for (var col = 0; col < moduleCount; col++) {
      var sameCount = 0;
      var head = qrCode.modules[0][col];
      for (var row = 0; row < moduleCount; row++) {
        var current = qrCode.modules[row][col];
        //level 3 评价
        if (row < moduleCount - 6) {
          if (current && !qrCode.modules[row + 1][col] && qrCode.modules[row + 2][col] && qrCode.modules[row + 3][col] && qrCode.modules[row + 4][col] && !qrCode.modules[row + 5][col] && qrCode.modules[row + 6][col]) {
            if (row < moduleCount - 10) {
              if (qrCode.modules[row + 7][col] && qrCode.modules[row + 8][col] && qrCode.modules[row + 9][col] && qrCode.modules[row + 10][col]) {
                lostPoint += 40;
              }
            } else if (row > 3) {
              if (qrCode.modules[row - 1][col] && qrCode.modules[row - 2][col] && qrCode.modules[row - 3][col] && qrCode.modules[row - 4][col]) {
                lostPoint += 40;
              }
            }
          }
        }
        //level 1 评价
        if (head ^ current) {
          sameCount++;
        } else {
          head = current;
          if (sameCount >= 5) {
            lostPoint += 3 + sameCount - 5;
          }
          sameCount = 1;
        }
      }
    }
    // LEVEL4
    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
    lostPoint += ratio * 10;
    return lostPoint;
  } };


//---------------------------------------------------------------------
// QRMath使用的数学工具
//---------------------------------------------------------------------
var QRMath = {
  /*
               将n转化为a^m
                */
  glog: function glog(n) {
    if (n < 1) {
      throw new Error("glog(" + n + ")");
    }
    return QRMath.LOG_TABLE[n];
  },
  /*
     将a^m转化为n
      */
  gexp: function gexp(n) {
    while (n < 0) {
      n += 255;
    }
    while (n >= 256) {
      n -= 255;
    }
    return QRMath.EXP_TABLE[n];
  },
  EXP_TABLE: new Array(256),
  LOG_TABLE: new Array(256) };


for (var i = 0; i < 8; i++) {
  QRMath.EXP_TABLE[i] = 1 << i;
}
for (var i = 8; i < 256; i++) {
  QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];
}
for (var i = 0; i < 255; i++) {
  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;
}
//---------------------------------------------------------------------
// QRPolynomial 多项式
//---------------------------------------------------------------------
/**
 * 多项式类
 * @param {Array} num   系数
 * @param {num} shift a^shift
 */
function QRPolynomial(num, shift) {
  if (num.length == undefined) {
    throw new Error(num.length + "/" + shift);
  }
  var offset = 0;
  while (offset < num.length && num[offset] == 0) {
    offset++;
  }
  this.num = new Array(num.length - offset + shift);
  for (var i = 0; i < num.length - offset; i++) {
    this.num[i] = num[i + offset];
  }
}
QRPolynomial.prototype = {
  get: function get(index) {
    return this.num[index];
  },
  getLength: function getLength() {
    return this.num.length;
  },
  /**
      * 多项式乘法
      * @param  {QRPolynomial} e 被乘多项式
      * @return {[type]}   [description]
      */
  multiply: function multiply(e) {
    var num = new Array(this.getLength() + e.getLength() - 1);
    for (var i = 0; i < this.getLength(); i++) {
      for (var j = 0; j < e.getLength(); j++) {
        num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));
      }
    }
    return new QRPolynomial(num, 0);
  },
  /**
      * 多项式模运算
      * @param  {QRPolynomial} e 模多项式
      * @return {}
      */
  mod: function mod(e) {
    var tl = this.getLength(),
    el = e.getLength();
    if (tl - el < 0) {
      return this;
    }
    var num = new Array(tl);
    for (var i = 0; i < tl; i++) {
      num[i] = this.get(i);
    }
    while (num.length >= el) {
      var ratio = QRMath.glog(num[0]) - QRMath.glog(e.get(0));

      for (var i = 0; i < e.getLength(); i++) {
        num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);
      }
      while (num[0] == 0) {
        num.shift();
      }
    }
    return new QRPolynomial(num, 0);
  } };


//---------------------------------------------------------------------
// RS_BLOCK_TABLE
//---------------------------------------------------------------------
/*
二维码各个版本信息[块数, 每块中的数据块数, 每块中的信息块数]
 */
var RS_BLOCK_TABLE = [
// L
// M
// Q
// H
// 1
[1, 26, 19],
[1, 26, 16],
[1, 26, 13],
[1, 26, 9],

// 2
[1, 44, 34],
[1, 44, 28],
[1, 44, 22],
[1, 44, 16],

// 3
[1, 70, 55],
[1, 70, 44],
[2, 35, 17],
[2, 35, 13],

// 4
[1, 100, 80],
[2, 50, 32],
[2, 50, 24],
[4, 25, 9],

// 5
[1, 134, 108],
[2, 67, 43],
[2, 33, 15, 2, 34, 16],
[2, 33, 11, 2, 34, 12],

// 6
[2, 86, 68],
[4, 43, 27],
[4, 43, 19],
[4, 43, 15],

// 7
[2, 98, 78],
[4, 49, 31],
[2, 32, 14, 4, 33, 15],
[4, 39, 13, 1, 40, 14],

// 8
[2, 121, 97],
[2, 60, 38, 2, 61, 39],
[4, 40, 18, 2, 41, 19],
[4, 40, 14, 2, 41, 15],

// 9
[2, 146, 116],
[3, 58, 36, 2, 59, 37],
[4, 36, 16, 4, 37, 17],
[4, 36, 12, 4, 37, 13],

// 10
[2, 86, 68, 2, 87, 69],
[4, 69, 43, 1, 70, 44],
[6, 43, 19, 2, 44, 20],
[6, 43, 15, 2, 44, 16],

// 11
[4, 101, 81],
[1, 80, 50, 4, 81, 51],
[4, 50, 22, 4, 51, 23],
[3, 36, 12, 8, 37, 13],

// 12
[2, 116, 92, 2, 117, 93],
[6, 58, 36, 2, 59, 37],
[4, 46, 20, 6, 47, 21],
[7, 42, 14, 4, 43, 15],

// 13
[4, 133, 107],
[8, 59, 37, 1, 60, 38],
[8, 44, 20, 4, 45, 21],
[12, 33, 11, 4, 34, 12],

// 14
[3, 145, 115, 1, 146, 116],
[4, 64, 40, 5, 65, 41],
[11, 36, 16, 5, 37, 17],
[11, 36, 12, 5, 37, 13],

// 15
[5, 109, 87, 1, 110, 88],
[5, 65, 41, 5, 66, 42],
[5, 54, 24, 7, 55, 25],
[11, 36, 12],

// 16
[5, 122, 98, 1, 123, 99],
[7, 73, 45, 3, 74, 46],
[15, 43, 19, 2, 44, 20],
[3, 45, 15, 13, 46, 16],

// 17
[1, 135, 107, 5, 136, 108],
[10, 74, 46, 1, 75, 47],
[1, 50, 22, 15, 51, 23],
[2, 42, 14, 17, 43, 15],

// 18
[5, 150, 120, 1, 151, 121],
[9, 69, 43, 4, 70, 44],
[17, 50, 22, 1, 51, 23],
[2, 42, 14, 19, 43, 15],

// 19
[3, 141, 113, 4, 142, 114],
[3, 70, 44, 11, 71, 45],
[17, 47, 21, 4, 48, 22],
[9, 39, 13, 16, 40, 14],

// 20
[3, 135, 107, 5, 136, 108],
[3, 67, 41, 13, 68, 42],
[15, 54, 24, 5, 55, 25],
[15, 43, 15, 10, 44, 16],

// 21
[4, 144, 116, 4, 145, 117],
[17, 68, 42],
[17, 50, 22, 6, 51, 23],
[19, 46, 16, 6, 47, 17],

// 22
[2, 139, 111, 7, 140, 112],
[17, 74, 46],
[7, 54, 24, 16, 55, 25],
[34, 37, 13],

// 23
[4, 151, 121, 5, 152, 122],
[4, 75, 47, 14, 76, 48],
[11, 54, 24, 14, 55, 25],
[16, 45, 15, 14, 46, 16],

// 24
[6, 147, 117, 4, 148, 118],
[6, 73, 45, 14, 74, 46],
[11, 54, 24, 16, 55, 25],
[30, 46, 16, 2, 47, 17],

// 25
[8, 132, 106, 4, 133, 107],
[8, 75, 47, 13, 76, 48],
[7, 54, 24, 22, 55, 25],
[22, 45, 15, 13, 46, 16],

// 26
[10, 142, 114, 2, 143, 115],
[19, 74, 46, 4, 75, 47],
[28, 50, 22, 6, 51, 23],
[33, 46, 16, 4, 47, 17],

// 27
[8, 152, 122, 4, 153, 123],
[22, 73, 45, 3, 74, 46],
[8, 53, 23, 26, 54, 24],
[12, 45, 15, 28, 46, 16],

// 28
[3, 147, 117, 10, 148, 118],
[3, 73, 45, 23, 74, 46],
[4, 54, 24, 31, 55, 25],
[11, 45, 15, 31, 46, 16],

// 29
[7, 146, 116, 7, 147, 117],
[21, 73, 45, 7, 74, 46],
[1, 53, 23, 37, 54, 24],
[19, 45, 15, 26, 46, 16],

// 30
[5, 145, 115, 10, 146, 116],
[19, 75, 47, 10, 76, 48],
[15, 54, 24, 25, 55, 25],
[23, 45, 15, 25, 46, 16],

// 31
[13, 145, 115, 3, 146, 116],
[2, 74, 46, 29, 75, 47],
[42, 54, 24, 1, 55, 25],
[23, 45, 15, 28, 46, 16],

// 32
[17, 145, 115],
[10, 74, 46, 23, 75, 47],
[10, 54, 24, 35, 55, 25],
[19, 45, 15, 35, 46, 16],

// 33
[17, 145, 115, 1, 146, 116],
[14, 74, 46, 21, 75, 47],
[29, 54, 24, 19, 55, 25],
[11, 45, 15, 46, 46, 16],

// 34
[13, 145, 115, 6, 146, 116],
[14, 74, 46, 23, 75, 47],
[44, 54, 24, 7, 55, 25],
[59, 46, 16, 1, 47, 17],

// 35
[12, 151, 121, 7, 152, 122],
[12, 75, 47, 26, 76, 48],
[39, 54, 24, 14, 55, 25],
[22, 45, 15, 41, 46, 16],

// 36
[6, 151, 121, 14, 152, 122],
[6, 75, 47, 34, 76, 48],
[46, 54, 24, 10, 55, 25],
[2, 45, 15, 64, 46, 16],

// 37
[17, 152, 122, 4, 153, 123],
[29, 74, 46, 14, 75, 47],
[49, 54, 24, 10, 55, 25],
[24, 45, 15, 46, 46, 16],

// 38
[4, 152, 122, 18, 153, 123],
[13, 74, 46, 32, 75, 47],
[48, 54, 24, 14, 55, 25],
[42, 45, 15, 32, 46, 16],

// 39
[20, 147, 117, 4, 148, 118],
[40, 75, 47, 7, 76, 48],
[43, 54, 24, 22, 55, 25],
[10, 45, 15, 67, 46, 16],

// 40
[19, 148, 118, 6, 149, 119],
[18, 75, 47, 31, 76, 48],
[34, 54, 24, 34, 55, 25],
[20, 45, 15, 61, 46, 16]];


/**
                            * 根据数据获取对应版本
                            * @return {[type]} [description]
                            */
QRCodeAlg.prototype.getRightType = function () {
  for (var typeNumber = 1; typeNumber < 41; typeNumber++) {
    var rsBlock = RS_BLOCK_TABLE[(typeNumber - 1) * 4 + this.errorCorrectLevel];
    if (rsBlock == undefined) {
      throw new Error("bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" + this.errorCorrectLevel);
    }
    var length = rsBlock.length / 3;
    var totalDataCount = 0;
    for (var i = 0; i < length; i++) {
      var count = rsBlock[i * 3 + 0];
      var dataCount = rsBlock[i * 3 + 2];
      totalDataCount += dataCount * count;
    }
    var lengthBytes = typeNumber > 9 ? 2 : 1;
    if (this.utf8bytes.length + lengthBytes < totalDataCount || typeNumber == 40) {
      this.typeNumber = typeNumber;
      this.rsBlock = rsBlock;
      this.totalDataCount = totalDataCount;
      break;
    }
  }
};

//---------------------------------------------------------------------
// QRBitBuffer
//---------------------------------------------------------------------
function QRBitBuffer() {
  this.buffer = new Array();
  this.length = 0;
}
QRBitBuffer.prototype = {
  get: function get(index) {
    var bufIndex = Math.floor(index / 8);
    return this.buffer[bufIndex] >>> 7 - index % 8 & 1;
  },
  put: function put(num, length) {
    for (var i = 0; i < length; i++) {
      this.putBit(num >>> length - i - 1 & 1);
    }
  },
  putBit: function putBit(bit) {
    var bufIndex = Math.floor(this.length / 8);
    if (this.buffer.length <= bufIndex) {
      this.buffer.push(0);
    }
    if (bit) {
      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;
    }
    this.length++;
  } };

/***/ }),

/***/ 268:
/*!************************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/utils/QS-SharePoster/image-tools.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.pathToBase64 = pathToBase64;exports.base64ToPath = base64ToPath;function getLocalFilePath(path) {
  if (path.indexOf('_www') === 0 || path.indexOf('_doc') === 0 || path.indexOf('_documents') === 0 || path.indexOf('_downloads') === 0) {
    return path;
  }
  if (path.indexOf('file://') === 0) {
    return path;
  }
  if (path.indexOf('/storage/emulated/0/') === 0) {
    return path;
  }
  if (path.indexOf('/') === 0) {
    var localFilePath = plus.io.convertAbsoluteFileSystem(path);
    if (localFilePath !== path) {
      return localFilePath;
    } else {
      path = path.substr(1);
    }
  }
  return '_www/' + path;
}

function pathToBase64(path) {
  return new Promise(function (resolve, reject) {
    if (typeof window === 'object' && 'document' in window) {
      if (typeof FileReader === 'function') {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', path, true);
        xhr.responseType = 'blob';
        xhr.onload = function () {
          if (this.status === 200) {
            var fileReader = new FileReader();
            fileReader.onload = function (e) {
              resolve(e.target.result);
            };
            fileReader.onerror = reject;
            fileReader.readAsDataURL(this.response);
          }
        };
        xhr.onerror = reject;
        xhr.send();
        return;
      }
      var canvas = document.createElement('canvas');
      var c2x = canvas.getContext('2d');
      var img = new Image();
      img.onload = function () {
        canvas.width = img.width;
        canvas.height = img.height;
        c2x.drawImage(img, 0, 0);
        resolve(canvas.toDataURL());
        canvas.height = canvas.width = 0;
      };
      img.onerror = reject;
      img.src = path;
      return;
    }
    if (typeof plus === 'object') {
      plus.io.resolveLocalFileSystemURL(getLocalFilePath(path), function (entry) {
        entry.file(function (file) {
          var fileReader = new plus.io.FileReader();
          fileReader.onload = function (data) {
            resolve(data.target.result);
          };
          fileReader.onerror = function (error) {
            reject(error);
          };
          fileReader.readAsDataURL(file);
        }, function (error) {
          reject(error);
        });
      }, function (error) {
        reject(error);
      });
      return;
    }
    if (typeof wx === 'object' && wx.canIUse('getFileSystemManager')) {
      wx.getFileSystemManager().readFile({
        filePath: path,
        encoding: 'base64',
        success: function success(res) {
          resolve('data:image/png;base64,' + res.data);
        },
        fail: function fail(error) {
          reject(error);
        } });

      return;
    }
    reject(new Error('not support'));
  });
}

function base64ToPath(base64) {
  return new Promise(function (resolve, reject) {
    if (typeof window === 'object' && 'document' in window) {
      base64 = base64.split(',');
      var type = base64[0].match(/:(.*?);/)[1];
      var str = atob(base64[1]);
      var n = str.length;
      var array = new Uint8Array(n);
      while (n--) {
        array[n] = str.charCodeAt(n);
      }
      return resolve((window.URL || window.webkitURL).createObjectURL(new Blob([array], { type: type })));
    }
    var extName = base64.match(/data\:\S+\/(\S+);/);
    if (extName) {
      extName = extName[1];
    } else {
      reject(new Error('base64 error'));
    }
    var fileName = Date.now() + '.' + extName;
    if (typeof plus === 'object') {
      var bitmap = new plus.nativeObj.Bitmap('bitmap' + Date.now());
      bitmap.loadBase64Data(base64, function () {
        var filePath = '_doc/uniapp_temp/' + fileName;
        bitmap.save(filePath, {}, function () {
          bitmap.clear();
          resolve(filePath);
        }, function (error) {
          bitmap.clear();
          reject(error);
        });
      }, function (error) {
        bitmap.clear();
        reject(error);
      });
      return;
    }
    if (typeof wx === 'object' && wx.canIUse('getFileSystemManager')) {
      var filePath = wx.env.USER_DATA_PATH + '/' + fileName;
      wx.getFileSystemManager().writeFile({
        filePath: filePath,
        data: base64.replace(/^data:\S+\/\S+;base64,/, ''),
        encoding: 'base64',
        success: function success() {
          resolve(filePath);
        },
        fail: function fail(error) {
          reject(error);
        } });

      return;
    }
    reject(new Error('not support'));
  });
}

/***/ }),

/***/ 3:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 301:
/*!******************************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/components/gaoyia-parse/libs/html2json.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;













var _wxDiscode = _interopRequireDefault(__webpack_require__(/*! ./wxDiscode */ 302));
var _htmlparser = _interopRequireDefault(__webpack_require__(/*! ./htmlparser */ 303));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} /**
                                                                                                                                                                 * html2Json 改造来自: https://github.com/Jxck/html2json
                                                                                                                                                                 *
                                                                                                                                                                 *
                                                                                                                                                                 * author: Di (微信小程序开发工程师)
                                                                                                                                                                 * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)
                                                                                                                                                                 *               垂直微信小程序开发交流社区
                                                                                                                                                                 *
                                                                                                                                                                 * github地址: https://github.com/icindy/wxParse
                                                                                                                                                                 *
                                                                                                                                                                 * for: 微信小程序富文本解析
                                                                                                                                                                 * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184
                                                                                                                                                                 */function makeMap(str) {var obj = {};var items = str.split(',');for (var i = 0; i < items.length; i += 1) {obj[items[i]] = true;}return obj;} // Block Elements - HTML 5
var block = makeMap('br,code,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video'); // Inline Elements - HTML 5
var inline = makeMap('a,abbr,acronym,applet,b,basefont,bdo,big,button,cite,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var');
// Elements that you can, intentionally, leave open
// (and which close themselves)
var closeSelf = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr');

function removeDOCTYPE(html) {
  var isDocument = /<body.*>([^]*)<\/body>/.test(html);
  return isDocument ? RegExp.$1 : html;
}

function trimHtml(html) {
  return html.
  replace(/<!--.*?-->/gi, '').
  replace(/\/\*.*?\*\//gi, '').
  replace(/[ ]+</gi, '<').
  replace(/<script[^]*<\/script>/gi, '').
  replace(/<style[^]*<\/style>/gi, '');
}

function getScreenInfo() {
  var screen = {};
  wx.getSystemInfo({
    success: function success(res) {
      screen.width = res.windowWidth;
      screen.height = res.windowHeight;
    } });

  return screen;
}

function html2json(html, customHandler, imageProp, host) {
  // 处理字符串
  html = removeDOCTYPE(html);
  html = trimHtml(html);
  html = _wxDiscode.default.strDiscode(html);
  // 生成node节点
  var bufArray = [];
  var results = {
    nodes: [],
    imageUrls: [] };


  var screen = getScreenInfo();
  function Node(tag) {
    this.node = 'element';
    this.tag = tag;

    this.$screen = screen;
  }

  (0, _htmlparser.default)(html, {
    start: function start(tag, attrs, unary) {
      // node for this element
      var node = new Node(tag);

      if (bufArray.length !== 0) {
        var parent = bufArray[0];
        if (parent.nodes === undefined) {
          parent.nodes = [];
        }
      }

      if (block[tag]) {
        node.tagType = 'block';
      } else if (inline[tag]) {
        node.tagType = 'inline';
      } else if (closeSelf[tag]) {
        node.tagType = 'closeSelf';
      }

      node.attr = attrs.reduce(function (pre, attr) {var
        name = attr.name;var
        value = attr.value;
        if (name === 'class') {
          node.classStr = value;
        }
        // has multi attibutes
        // make it array of attribute
        if (name === 'style') {
          node.styleStr = value;
        }
        if (value.match(/ /)) {
          value = value.split(' ');
        }

        // if attr already exists
        // merge it
        if (pre[name]) {
          if (Array.isArray(pre[name])) {
            // already array, push to last
            pre[name].push(value);
          } else {
            // single value, make it array
            pre[name] = [pre[name], value];
          }
        } else {
          // not exist, put it
          pre[name] = value;
        }

        return pre;
      }, {});

      // 优化样式相关属性
      if (node.classStr) {
        node.classStr += " ".concat(node.tag);
      } else {
        node.classStr = node.tag;
      }
      if (node.tagType === 'inline') {
        node.classStr += ' inline';
      }

      // 对img添加额外数据
      if (node.tag === 'img') {
        var imgUrl = node.attr.src;
        imgUrl = _wxDiscode.default.urlToHttpUrl(imgUrl, imageProp.domain);
        Object.assign(node.attr, imageProp, {
          src: imgUrl || '' });

        if (imgUrl) {
          results.imageUrls.push(imgUrl);
        }
      }

      // 处理a标签属性
      if (node.tag === 'a') {
        node.attr.href = node.attr.href || '';
      }

      // 处理font标签样式属性
      if (node.tag === 'font') {
        var fontSize = [
        'x-small',
        'small',
        'medium',
        'large',
        'x-large',
        'xx-large',
        '-webkit-xxx-large'];

        var styleAttrs = {
          color: 'color',
          face: 'font-family',
          size: 'font-size' };

        if (!node.styleStr) node.styleStr = '';
        Object.keys(styleAttrs).forEach(function (key) {
          if (node.attr[key]) {
            var value = key === 'size' ? fontSize[node.attr[key] - 1] : node.attr[key];
            node.styleStr += "".concat(styleAttrs[key], ": ").concat(value, ";");
          }
        });
      }

      // 临时记录source资源
      if (node.tag === 'source') {
        results.source = node.attr.src;
      }

      if (customHandler.start) {
        customHandler.start(node, results);
      }

      if (unary) {
        // if this tag doesn't have end tag
        // like <img src="hoge.png"/>
        // add to parents
        var _parent = bufArray[0] || results;
        if (_parent.nodes === undefined) {
          _parent.nodes = [];
        }
        _parent.nodes.push(node);
      } else {
        bufArray.unshift(node);
      }
    },
    end: function end(tag) {
      // merge into parent tag
      var node = bufArray.shift();
      if (node.tag !== tag) {
        console.error('invalid state: mismatch end tag');
      }

      // 当有缓存source资源时于于video补上src资源
      if (node.tag === 'video' && results.source) {
        node.attr.src = results.source;
        delete results.source;
      }

      if (customHandler.end) {
        customHandler.end(node, results);
      }

      if (bufArray.length === 0) {
        results.nodes.push(node);
      } else {
        var parent = bufArray[0];
        if (!parent.nodes) {
          parent.nodes = [];
        }
        parent.nodes.push(node);
      }
    },
    chars: function chars(text) {
      if (!text.trim()) return;

      var node = {
        node: 'text',
        text: text };


      if (customHandler.chars) {
        customHandler.chars(node, results);
      }

      if (bufArray.length === 0) {
        results.nodes.push(node);
      } else {
        var parent = bufArray[0];
        if (parent.nodes === undefined) {
          parent.nodes = [];
        }
        parent.nodes.push(node);
      }
    } });


  return results;
}var _default =

html2json;exports.default = _default;

/***/ }),

/***/ 302:
/*!******************************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/components/gaoyia-parse/libs/wxDiscode.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; // HTML 支持的数学符号
function strNumDiscode(str) {
  str = str.replace(/&forall;|&#8704;|&#x2200;/g, '∀');
  str = str.replace(/&part;|&#8706;|&#x2202;/g, '∂');
  str = str.replace(/&exist;|&#8707;|&#x2203;/g, '∃');
  str = str.replace(/&empty;|&#8709;|&#x2205;/g, '∅');
  str = str.replace(/&nabla;|&#8711;|&#x2207;/g, '∇');
  str = str.replace(/&isin;|&#8712;|&#x2208;/g, '∈');
  str = str.replace(/&notin;|&#8713;|&#x2209;/g, '∉');
  str = str.replace(/&ni;|&#8715;|&#x220b;/g, '∋');
  str = str.replace(/&prod;|&#8719;|&#x220f;/g, '∏');
  str = str.replace(/&sum;|&#8721;|&#x2211;/g, '∑');
  str = str.replace(/&minus;|&#8722;|&#x2212;/g, '−');
  str = str.replace(/&lowast;|&#8727;|&#x2217;/g, '∗');
  str = str.replace(/&radic;|&#8730;|&#x221a;/g, '√');
  str = str.replace(/&prop;|&#8733;|&#x221d;/g, '∝');
  str = str.replace(/&infin;|&#8734;|&#x221e;/g, '∞');
  str = str.replace(/&ang;|&#8736;|&#x2220;/g, '∠');
  str = str.replace(/&and;|&#8743;|&#x2227;/g, '∧');
  str = str.replace(/&or;|&#8744;|&#x2228;/g, '∨');
  str = str.replace(/&cap;|&#8745;|&#x2229;/g, '∩');
  str = str.replace(/&cup;|&#8746;|&#x222a;/g, '∪');
  str = str.replace(/&int;|&#8747;|&#x222b;/g, '∫');
  str = str.replace(/&there4;|&#8756;|&#x2234;/g, '∴');
  str = str.replace(/&sim;|&#8764;|&#x223c;/g, '∼');
  str = str.replace(/&cong;|&#8773;|&#x2245;/g, '≅');
  str = str.replace(/&asymp;|&#8776;|&#x2248;/g, '≈');
  str = str.replace(/&ne;|&#8800;|&#x2260;/g, '≠');
  str = str.replace(/&le;|&#8804;|&#x2264;/g, '≤');
  str = str.replace(/&ge;|&#8805;|&#x2265;/g, '≥');
  str = str.replace(/&sub;|&#8834;|&#x2282;/g, '⊂');
  str = str.replace(/&sup;|&#8835;|&#x2283;/g, '⊃');
  str = str.replace(/&nsub;|&#8836;|&#x2284;/g, '⊄');
  str = str.replace(/&sube;|&#8838;|&#x2286;/g, '⊆');
  str = str.replace(/&supe;|&#8839;|&#x2287;/g, '⊇');
  str = str.replace(/&oplus;|&#8853;|&#x2295;/g, '⊕');
  str = str.replace(/&otimes;|&#8855;|&#x2297;/g, '⊗');
  str = str.replace(/&perp;|&#8869;|&#x22a5;/g, '⊥');
  str = str.replace(/&sdot;|&#8901;|&#x22c5;/g, '⋅');
  return str;
}

// HTML 支持的希腊字母
function strGreeceDiscode(str) {
  str = str.replace(/&Alpha;|&#913;|&#x391;/g, 'Α');
  str = str.replace(/&Beta;|&#914;|&#x392;/g, 'Β');
  str = str.replace(/&Gamma;|&#915;|&#x393;/g, 'Γ');
  str = str.replace(/&Delta;|&#916;|&#x394;/g, 'Δ');
  str = str.replace(/&Epsilon;|&#917;|&#x395;/g, 'Ε');
  str = str.replace(/&Zeta;|&#918;|&#x396;/g, 'Ζ');
  str = str.replace(/&Eta;|&#919;|&#x397;/g, 'Η');
  str = str.replace(/&Theta;|&#920;|&#x398;/g, 'Θ');
  str = str.replace(/&Iota;|&#921;|&#x399;/g, 'Ι');
  str = str.replace(/&Kappa;|&#922;|&#x39a;/g, 'Κ');
  str = str.replace(/&Lambda;|&#923;|&#x39b;/g, 'Λ');
  str = str.replace(/&Mu;|&#924;|&#x39c;/g, 'Μ');
  str = str.replace(/&Nu;|&#925;|&#x39d;/g, 'Ν');
  str = str.replace(/&Xi;|&#925;|&#x39d;/g, 'Ν');
  str = str.replace(/&Omicron;|&#927;|&#x39f;/g, 'Ο');
  str = str.replace(/&Pi;|&#928;|&#x3a0;/g, 'Π');
  str = str.replace(/&Rho;|&#929;|&#x3a1;/g, 'Ρ');
  str = str.replace(/&Sigma;|&#931;|&#x3a3;/g, 'Σ');
  str = str.replace(/&Tau;|&#932;|&#x3a4;/g, 'Τ');
  str = str.replace(/&Upsilon;|&#933;|&#x3a5;/g, 'Υ');
  str = str.replace(/&Phi;|&#934;|&#x3a6;/g, 'Φ');
  str = str.replace(/&Chi;|&#935;|&#x3a7;/g, 'Χ');
  str = str.replace(/&Psi;|&#936;|&#x3a8;/g, 'Ψ');
  str = str.replace(/&Omega;|&#937;|&#x3a9;/g, 'Ω');

  str = str.replace(/&alpha;|&#945;|&#x3b1;/g, 'α');
  str = str.replace(/&beta;|&#946;|&#x3b2;/g, 'β');
  str = str.replace(/&gamma;|&#947;|&#x3b3;/g, 'γ');
  str = str.replace(/&delta;|&#948;|&#x3b4;/g, 'δ');
  str = str.replace(/&epsilon;|&#949;|&#x3b5;/g, 'ε');
  str = str.replace(/&zeta;|&#950;|&#x3b6;/g, 'ζ');
  str = str.replace(/&eta;|&#951;|&#x3b7;/g, 'η');
  str = str.replace(/&theta;|&#952;|&#x3b8;/g, 'θ');
  str = str.replace(/&iota;|&#953;|&#x3b9;/g, 'ι');
  str = str.replace(/&kappa;|&#954;|&#x3ba;/g, 'κ');
  str = str.replace(/&lambda;|&#955;|&#x3bb;/g, 'λ');
  str = str.replace(/&mu;|&#956;|&#x3bc;/g, 'μ');
  str = str.replace(/&nu;|&#957;|&#x3bd;/g, 'ν');
  str = str.replace(/&xi;|&#958;|&#x3be;/g, 'ξ');
  str = str.replace(/&omicron;|&#959;|&#x3bf;/g, 'ο');
  str = str.replace(/&pi;|&#960;|&#x3c0;/g, 'π');
  str = str.replace(/&rho;|&#961;|&#x3c1;/g, 'ρ');
  str = str.replace(/&sigmaf;|&#962;|&#x3c2;/g, 'ς');
  str = str.replace(/&sigma;|&#963;|&#x3c3;/g, 'σ');
  str = str.replace(/&tau;|&#964;|&#x3c4;/g, 'τ');
  str = str.replace(/&upsilon;|&#965;|&#x3c5;/g, 'υ');
  str = str.replace(/&phi;|&#966;|&#x3c6;/g, 'φ');
  str = str.replace(/&chi;|&#967;|&#x3c7;/g, 'χ');
  str = str.replace(/&psi;|&#968;|&#x3c8;/g, 'ψ');
  str = str.replace(/&omega;|&#969;|&#x3c9;/g, 'ω');
  str = str.replace(/&thetasym;|&#977;|&#x3d1;/g, 'ϑ');
  str = str.replace(/&upsih;|&#978;|&#x3d2;/g, 'ϒ');
  str = str.replace(/&piv;|&#982;|&#x3d6;/g, 'ϖ');
  str = str.replace(/&middot;|&#183;|&#xb7;/g, '·');
  return str;
}

function strcharacterDiscode(str) {
  // 加入常用解析

  // str = str.replace(/&nbsp;|&#32;|&#x20;/g, "&nbsp;");
  // str = str.replace(/&ensp;|&#8194;|&#x2002;/g, '&ensp;');
  // str = str.replace(/&#12288;|&#x3000;/g, '<span class=\'spaceshow\'>　</span>');
  // str = str.replace(/&emsp;|&#8195;|&#x2003;/g, '&emsp;');
  // str = str.replace(/&quot;|&#34;|&#x22;/g, "\"");
  // str = str.replace(/&apos;|&#39;|&#x27;/g, "&apos;");
  // str = str.replace(/&acute;|&#180;|&#xB4;/g, "´");
  // str = str.replace(/&times;|&#215;|&#xD7;/g, "×");
  // str = str.replace(/&divide;|&#247;|&#xF7;/g, "÷");
  // str = str.replace(/&amp;|&#38;|&#x26;/g, '&amp;');
  // str = str.replace(/&lt;|&#60;|&#x3c;/g, '&lt;');
  // str = str.replace(/&gt;|&#62;|&#x3e;/g, '&gt;');




  str = str.replace(/&nbsp;|&#32;|&#x20;/g, "<span class='spaceshow'> </span>");
  str = str.replace(/&ensp;|&#8194;|&#x2002;/g, '<span class=\'spaceshow\'> </span>');
  str = str.replace(/&#12288;|&#x3000;/g, '<span class=\'spaceshow\'>　</span>');
  str = str.replace(/&emsp;|&#8195;|&#x2003;/g, '<span class=\'spaceshow\'> </span>');
  str = str.replace(/&quot;|&#34;|&#x22;/g, "\"");
  str = str.replace(/&quot;|&#39;|&#x27;/g, "'");
  str = str.replace(/&acute;|&#180;|&#xB4;/g, "´");
  str = str.replace(/&times;|&#215;|&#xD7;/g, "×");
  str = str.replace(/&divide;|&#247;|&#xF7;/g, "÷");
  str = str.replace(/&amp;|&#38;|&#x26;/g, '&');
  str = str.replace(/&lt;|&#60;|&#x3c;/g, '<');
  str = str.replace(/&gt;|&#62;|&#x3e;/g, '>');
  return str;
}

// HTML 支持的其他实体
function strOtherDiscode(str) {
  str = str.replace(/&OElig;|&#338;|&#x152;/g, 'Œ');
  str = str.replace(/&oelig;|&#339;|&#x153;/g, 'œ');
  str = str.replace(/&Scaron;|&#352;|&#x160;/g, 'Š');
  str = str.replace(/&scaron;|&#353;|&#x161;/g, 'š');
  str = str.replace(/&Yuml;|&#376;|&#x178;/g, 'Ÿ');
  str = str.replace(/&fnof;|&#402;|&#x192;/g, 'ƒ');
  str = str.replace(/&circ;|&#710;|&#x2c6;/g, 'ˆ');
  str = str.replace(/&tilde;|&#732;|&#x2dc;/g, '˜');
  str = str.replace(/&thinsp;|$#8201;|&#x2009;/g, '<span class=\'spaceshow\'> </span>');
  str = str.replace(/&zwnj;|&#8204;|&#x200C;/g, '<span class=\'spaceshow\'>‌</span>');
  str = str.replace(/&zwj;|$#8205;|&#x200D;/g, '<span class=\'spaceshow\'>‍</span>');
  str = str.replace(/&lrm;|$#8206;|&#x200E;/g, '<span class=\'spaceshow\'>‎</span>');
  str = str.replace(/&rlm;|&#8207;|&#x200F;/g, '<span class=\'spaceshow\'>‏</span>');
  str = str.replace(/&ndash;|&#8211;|&#x2013;/g, '–');
  str = str.replace(/&mdash;|&#8212;|&#x2014;/g, '—');
  str = str.replace(/&lsquo;|&#8216;|&#x2018;/g, '‘');
  str = str.replace(/&rsquo;|&#8217;|&#x2019;/g, '’');
  str = str.replace(/&sbquo;|&#8218;|&#x201a;/g, '‚');
  str = str.replace(/&ldquo;|&#8220;|&#x201c;/g, '“');
  str = str.replace(/&rdquo;|&#8221;|&#x201d;/g, '”');
  str = str.replace(/&bdquo;|&#8222;|&#x201e;/g, '„');
  str = str.replace(/&dagger;|&#8224;|&#x2020;/g, '†');
  str = str.replace(/&Dagger;|&#8225;|&#x2021;/g, '‡');
  str = str.replace(/&bull;|&#8226;|&#x2022;/g, '•');
  str = str.replace(/&hellip;|&#8230;|&#x2026;/g, '…');
  str = str.replace(/&permil;|&#8240;|&#x2030;/g, '‰');
  str = str.replace(/&prime;|&#8242;|&#x2032;/g, '′');
  str = str.replace(/&Prime;|&#8243;|&#x2033;/g, '″');
  str = str.replace(/&lsaquo;|&#8249;|&#x2039;/g, '‹');
  str = str.replace(/&rsaquo;|&#8250;|&#x203a;/g, '›');
  str = str.replace(/&oline;|&#8254;|&#x203e;/g, '‾');
  str = str.replace(/&euro;|&#8364;|&#x20ac;/g, '€');
  str = str.replace(/&trade;|&#8482;|&#x2122;/g, '™');
  str = str.replace(/&larr;|&#8592;|&#x2190;/g, '←');
  str = str.replace(/&uarr;|&#8593;|&#x2191;/g, '↑');
  str = str.replace(/&rarr;|&#8594;|&#x2192;/g, '→');
  str = str.replace(/&darr;|&#8595;|&#x2193;/g, '↓');
  str = str.replace(/&harr;|&#8596;|&#x2194;/g, '↔');
  str = str.replace(/&crarr;|&#8629;|&#x21b5;/g, '↵');
  str = str.replace(/&lceil;|&#8968;|&#x2308;/g, '⌈');
  str = str.replace(/&rceil;|&#8969;|&#x2309;/g, '⌉');
  str = str.replace(/&lfloor;|&#8970;|&#x230a;/g, '⌊');
  str = str.replace(/&rfloor;|&#8971;|&#x230b;/g, '⌋');
  str = str.replace(/&loz;|&#9674;|&#x25ca;/g, '◊');
  str = str.replace(/&spades;|&#9824;|&#x2660;/g, '♠');
  str = str.replace(/&clubs;|&#9827;|&#x2663;/g, '♣');
  str = str.replace(/&hearts;|&#9829;|&#x2665;/g, '♥');
  str = str.replace(/&diams;|&#9830;|&#x2666;/g, '♦');
  return str;
}

function strDiscode(str) {
  str = strNumDiscode(str);
  str = strGreeceDiscode(str);
  str = strcharacterDiscode(str);
  str = strOtherDiscode(str);
  return str;
}

function urlToHttpUrl(url, domain) {
  if (/^\/\//.test(url)) {
    return "https:".concat(url);
  } else if (/^\//.test(url)) {
    return "https://".concat(domain).concat(url);
  }
  return url;
}var _default =

{
  strDiscode: strDiscode,
  urlToHttpUrl: urlToHttpUrl };exports.default = _default;

/***/ }),

/***/ 303:
/*!*******************************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/components/gaoyia-parse/libs/htmlparser.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
                                                                                                      *
                                                                                                      * htmlParser改造自: https://github.com/blowsie/Pure-JavaScript-HTML5-Parser
                                                                                                      *
                                                                                                      * author: Di (微信小程序开发工程师)
                                                                                                      * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)
                                                                                                      *               垂直微信小程序开发交流社区
                                                                                                      *
                                                                                                      * github地址: https://github.com/icindy/wxParse
                                                                                                      *
                                                                                                      * for: 微信小程序富文本解析
                                                                                                      * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184
                                                                                                      */
// Regular Expressions for parsing tags and attributes

var startTag = /^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z0-9_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/;
var endTag = /^<\/([-A-Za-z0-9_]+)[^>]*>/;
var attr = /([a-zA-Z0-9_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g;

function makeMap(str) {
  var obj = {};
  var items = str.split(',');
  for (var i = 0; i < items.length; i += 1) {obj[items[i]] = true;}
  return obj;
}

// Empty Elements - HTML 5
var empty = makeMap('area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr');

// Block Elements - HTML 5
var block = makeMap('address,code,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video');

// Inline Elements - HTML 5
var inline = makeMap('a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var');

// Elements that you can, intentionally, leave open
// (and which close themselves)
var closeSelf = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr');

// Attributes that have their values filled in disabled="disabled"
var fillAttrs = makeMap('checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected');

function HTMLParser(html, handler) {
  var index;
  var chars;
  var match;
  var last = html;
  var stack = [];

  stack.last = function () {return stack[stack.length - 1];};

  function parseEndTag(tag, tagName) {
    // If no tag name is provided, clean shop
    var pos;
    if (!tagName) {
      pos = 0;
    } else {
      // Find the closest opened tag of the same type
      tagName = tagName.toLowerCase();
      for (pos = stack.length - 1; pos >= 0; pos -= 1) {
        if (stack[pos] === tagName) break;
      }
    }
    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i -= 1) {
        if (handler.end) handler.end(stack[i]);
      }

      // Remove the open elements from the stack
      stack.length = pos;
    }
  }

  function parseStartTag(tag, tagName, rest, unary) {
    tagName = tagName.toLowerCase();

    if (block[tagName]) {
      while (stack.last() && inline[stack.last()]) {
        parseEndTag('', stack.last());
      }
    }

    if (closeSelf[tagName] && stack.last() === tagName) {
      parseEndTag('', tagName);
    }

    unary = empty[tagName] || !!unary;

    if (!unary) stack.push(tagName);

    if (handler.start) {
      var attrs = [];

      rest.replace(attr, function genAttr(matches, name) {
        var value = arguments[2] || arguments[3] || arguments[4] || (fillAttrs[name] ? name : '');

        attrs.push({
          name: name,
          value: value,
          escaped: value.replace(/(^|[^\\])"/g, '$1\\"') // "
        });
      });

      if (handler.start) {
        handler.start(tagName, attrs, unary);
      }
    }
  }

  while (html) {
    chars = true;

    if (html.indexOf('</') === 0) {
      match = html.match(endTag);

      if (match) {
        html = html.substring(match[0].length);
        match[0].replace(endTag, parseEndTag);
        chars = false;
      }

      // start tag
    } else if (html.indexOf('<') === 0) {
      match = html.match(startTag);

      if (match) {
        html = html.substring(match[0].length);
        match[0].replace(startTag, parseStartTag);
        chars = false;
      }
    }

    if (chars) {
      index = html.indexOf('<');
      var text = '';
      while (index === 0) {
        text += '<';
        html = html.substring(1);
        index = html.indexOf('<');
      }
      text += index < 0 ? html : html.substring(0, index);
      html = index < 0 ? '' : html.substring(index);

      if (handler.chars) handler.chars(text);
    }

    if (html === last) throw new Error("Parse Error: ".concat(html));
    last = html;
  }

  // Clean up any remaining tags
  parseEndTag();
}var _default =

HTMLParser;exports.default = _default;

/***/ }),

/***/ 314:
/*!******************************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/components/uni-swipe-action-item/mpwxs.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = {
  data: function data() {
    return {
      position: [],
      button: [] };

  },
  computed: {
    pos: function pos() {
      return JSON.stringify(this.position);
    },
    btn: function btn() {
      return JSON.stringify(this.button);
    } },

  watch: {
    show: function show(newVal) {
      if (this.autoClose) return;
      var valueObj = this.position[0];
      if (!valueObj) {
        this.init();
        return;
      }
      valueObj.show = newVal;
      this.$set(this.position, 0, valueObj);
    } },

  created: function created() {
    if (this.swipeaction.children !== undefined) {
      this.swipeaction.children.push(this);
    }
  },
  mounted: function mounted() {
    this.init();

  },
  beforeDestroy: function beforeDestroy() {var _this = this;
    this.swipeaction.children.forEach(function (item, index) {
      if (item === _this) {
        _this.swipeaction.children.splice(index, 1);
      }
    });
  },
  methods: {
    init: function init() {var _this2 = this;

      setTimeout(function () {
        _this2.getSize();
        _this2.getButtonSize();
      }, 50);
    },
    closeSwipe: function closeSwipe(e) {
      if (!this.autoClose) return;
      this.swipeaction.closeOther(this);
    },

    change: function change(e) {
      this.$emit('change', e.open);
      var valueObj = this.position[0];
      if (valueObj.show !== e.open) {
        valueObj.show = e.open;
        this.$set(this.position, 0, valueObj);
      }
    },
    onClick: function onClick(index, item) {
      this.$emit('click', {
        content: item,
        index: index });

    },
    appTouchStart: function appTouchStart() {},
    appTouchEnd: function appTouchEnd() {},
    getSize: function getSize() {var _this3 = this;
      var views = uni.createSelectorQuery().in(this);
      views.
      selectAll('.selector-query-hock').
      boundingClientRect(function (data) {
        if (_this3.autoClose) {
          data[0].show = false;
        } else {
          data[0].show = _this3.show;
        }
        _this3.position = data;
      }).
      exec();
    },
    getButtonSize: function getButtonSize() {var _this4 = this;
      var views = uni.createSelectorQuery().in(this);
      views.
      selectAll('.button-hock').
      boundingClientRect(function (data) {
        _this4.button = data;
      }).
      exec();
    } } };exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 324:
/*!******************************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/components/region-picker/region-picker.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var zones_tree = [{ "id": "1", "name": "北京市", "code": "110000", "children": [{ "id": "1", "name": "市辖区", "code": "110100", "children": [{ "id": "1", "name": "东城区", "code": "110101" }, { "id": "2", "name": "西城区", "code": "110102" }, { "id": "3", "name": "朝阳区", "code": "110105" }, { "id": "4", "name": "丰台区", "code": "110106" }, { "id": "5", "name": "石景山区", "code": "110107" }, { "id": "6", "name": "海淀区", "code": "110108" }, { "id": "7", "name": "门头沟区", "code": "110109" }, { "id": "8", "name": "房山区", "code": "110111" }, { "id": "9", "name": "通州区", "code": "110112" }, { "id": "10", "name": "顺义区", "code": "110113" }, { "id": "11", "name": "昌平区", "code": "110114" }, { "id": "12", "name": "大兴区", "code": "110115" }, { "id": "13", "name": "怀柔区", "code": "110116" }, { "id": "14", "name": "平谷区", "code": "110117" }, { "id": "15", "name": "密云区", "code": "110118" }, { "id": "16", "name": "延庆区", "code": "110119" }] }] }, { "id": "2", "name": "天津市", "code": "120000", "children": [{ "id": "2", "name": "市辖区", "code": "120100", "children": [{ "id": "17", "name": "和平区", "code": "120101" }, { "id": "18", "name": "河东区", "code": "120102" }, { "id": "19", "name": "河西区", "code": "120103" }, { "id": "20", "name": "南开区", "code": "120104" }, { "id": "21", "name": "河北区", "code": "120105" }, { "id": "22", "name": "红桥区", "code": "120106" }, { "id": "23", "name": "东丽区", "code": "120110" }, { "id": "24", "name": "西青区", "code": "120111" }, { "id": "25", "name": "津南区", "code": "120112" }, { "id": "26", "name": "北辰区", "code": "120113" }, { "id": "27", "name": "武清区", "code": "120114" }, { "id": "28", "name": "宝坻区", "code": "120115" }, { "id": "29", "name": "滨海新区", "code": "120116" }, { "id": "30", "name": "宁河区", "code": "120117" }, { "id": "31", "name": "静海区", "code": "120118" }, { "id": "32", "name": "蓟州区", "code": "120119" }] }] }, { "id": "3", "name": "河北省", "code": "130000", "children": [{ "id": "3", "name": "石家庄市", "code": "130100", "children": [{ "id": "33", "name": "市辖区", "code": "130101" }, { "id": "34", "name": "长安区", "code": "130102" }, { "id": "35", "name": "桥西区", "code": "130104" }, { "id": "36", "name": "新华区", "code": "130105" }, { "id": "37", "name": "井陉矿区", "code": "130107" }, { "id": "38", "name": "裕华区", "code": "130108" }, { "id": "39", "name": "藁城区", "code": "130109" }, { "id": "40", "name": "鹿泉区", "code": "130110" }, { "id": "41", "name": "栾城区", "code": "130111" }, { "id": "42", "name": "井陉县", "code": "130121" }, { "id": "43", "name": "正定县", "code": "130123" }, { "id": "44", "name": "行唐县", "code": "130125" }, { "id": "45", "name": "灵寿县", "code": "130126" }, { "id": "46", "name": "高邑县", "code": "130127" }, { "id": "47", "name": "深泽县", "code": "130128" }, { "id": "48", "name": "赞皇县", "code": "130129" }, { "id": "49", "name": "无极县", "code": "130130" }, { "id": "50", "name": "平山县", "code": "130131" }, { "id": "51", "name": "元氏县", "code": "130132" }, { "id": "52", "name": "赵县", "code": "130133" }, { "id": "53", "name": "晋州市", "code": "130183" }, { "id": "54", "name": "新乐市", "code": "130184" }] }, { "id": "4", "name": "唐山市", "code": "130200", "children": [{ "id": "55", "name": "市辖区", "code": "130201" }, { "id": "56", "name": "路南区", "code": "130202" }, { "id": "57", "name": "路北区", "code": "130203" }, { "id": "58", "name": "古冶区", "code": "130204" }, { "id": "59", "name": "开平区", "code": "130205" }, { "id": "60", "name": "丰南区", "code": "130207" }, { "id": "61", "name": "丰润区", "code": "130208" }, { "id": "62", "name": "曹妃甸区", "code": "130209" }, { "id": "63", "name": "滦县", "code": "130223" }, { "id": "64", "name": "滦南县", "code": "130224" }, { "id": "65", "name": "乐亭县", "code": "130225" }, { "id": "66", "name": "迁西县", "code": "130227" }, { "id": "67", "name": "玉田县", "code": "130229" }, { "id": "68", "name": "遵化市", "code": "130281" }, { "id": "69", "name": "迁安市", "code": "130283" }] }, { "id": "5", "name": "秦皇岛市", "code": "130300", "children": [{ "id": "70", "name": "市辖区", "code": "130301" }, { "id": "71", "name": "海港区", "code": "130302" }, { "id": "72", "name": "山海关区", "code": "130303" }, { "id": "73", "name": "北戴河区", "code": "130304" }, { "id": "74", "name": "抚宁区", "code": "130306" }, { "id": "75", "name": "青龙满族自治县", "code": "130321" }, { "id": "76", "name": "昌黎县", "code": "130322" }, { "id": "77", "name": "卢龙县", "code": "130324" }] }, { "id": "6", "name": "邯郸市", "code": "130400", "children": [{ "id": "78", "name": "市辖区", "code": "130401" }, { "id": "79", "name": "邯山区", "code": "130402" }, { "id": "80", "name": "丛台区", "code": "130403" }, { "id": "81", "name": "复兴区", "code": "130404" }, { "id": "82", "name": "峰峰矿区", "code": "130406" }, { "id": "83", "name": "邯郸县", "code": "130421" }, { "id": "84", "name": "临漳县", "code": "130423" }, { "id": "85", "name": "成安县", "code": "130424" }, { "id": "86", "name": "大名县", "code": "130425" }, { "id": "87", "name": "涉县", "code": "130426" }, { "id": "88", "name": "磁县", "code": "130427" }, { "id": "89", "name": "肥乡县", "code": "130428" }, { "id": "90", "name": "永年县", "code": "130429" }, { "id": "91", "name": "邱县", "code": "130430" }, { "id": "92", "name": "鸡泽县", "code": "130431" }, { "id": "93", "name": "广平县", "code": "130432" }, { "id": "94", "name": "馆陶县", "code": "130433" }, { "id": "95", "name": "魏县", "code": "130434" }, { "id": "96", "name": "曲周县", "code": "130435" }, { "id": "97", "name": "武安市", "code": "130481" }] }, { "id": "7", "name": "邢台市", "code": "130500", "children": [{ "id": "98", "name": "市辖区", "code": "130501" }, { "id": "99", "name": "桥东区", "code": "130502" }, { "id": "100", "name": "桥西区", "code": "130503" }, { "id": "101", "name": "邢台县", "code": "130521" }, { "id": "102", "name": "临城县", "code": "130522" }, { "id": "103", "name": "内丘县", "code": "130523" }, { "id": "104", "name": "柏乡县", "code": "130524" }, { "id": "105", "name": "隆尧县", "code": "130525" }, { "id": "106", "name": "任县", "code": "130526" }, { "id": "107", "name": "南和县", "code": "130527" }, { "id": "108", "name": "宁晋县", "code": "130528" }, { "id": "109", "name": "巨鹿县", "code": "130529" }, { "id": "110", "name": "新河县", "code": "130530" }, { "id": "111", "name": "广宗县", "code": "130531" }, { "id": "112", "name": "平乡县", "code": "130532" }, { "id": "113", "name": "威县", "code": "130533" }, { "id": "114", "name": "清河县", "code": "130534" }, { "id": "115", "name": "临西县", "code": "130535" }, { "id": "116", "name": "南宫市", "code": "130581" }, { "id": "117", "name": "沙河市", "code": "130582" }] }, { "id": "8", "name": "保定市", "code": "130600", "children": [{ "id": "118", "name": "市辖区", "code": "130601" }, { "id": "119", "name": "竞秀区", "code": "130602" }, { "id": "120", "name": "莲池区", "code": "130606" }, { "id": "121", "name": "满城区", "code": "130607" }, { "id": "122", "name": "清苑区", "code": "130608" }, { "id": "123", "name": "徐水区", "code": "130609" }, { "id": "124", "name": "涞水县", "code": "130623" }, { "id": "125", "name": "阜平县", "code": "130624" }, { "id": "126", "name": "定兴县", "code": "130626" }, { "id": "127", "name": "唐县", "code": "130627" }, { "id": "128", "name": "高阳县", "code": "130628" }, { "id": "129", "name": "容城县", "code": "130629" }, { "id": "130", "name": "涞源县", "code": "130630" }, { "id": "131", "name": "望都县", "code": "130631" }, { "id": "132", "name": "安新县", "code": "130632" }, { "id": "133", "name": "易县", "code": "130633" }, { "id": "134", "name": "曲阳县", "code": "130634" }, { "id": "135", "name": "蠡县", "code": "130635" }, { "id": "136", "name": "顺平县", "code": "130636" }, { "id": "137", "name": "博野县", "code": "130637" }, { "id": "138", "name": "雄县", "code": "130638" }, { "id": "139", "name": "涿州市", "code": "130681" }, { "id": "140", "name": "安国市", "code": "130683" }, { "id": "141", "name": "高碑店市", "code": "130684" }] }, { "id": "9", "name": "张家口市", "code": "130700", "children": [{ "id": "142", "name": "市辖区", "code": "130701" }, { "id": "143", "name": "桥东区", "code": "130702" }, { "id": "144", "name": "桥西区", "code": "130703" }, { "id": "145", "name": "宣化区", "code": "130705" }, { "id": "146", "name": "下花园区", "code": "130706" }, { "id": "147", "name": "万全区", "code": "130708" }, { "id": "148", "name": "崇礼区", "code": "130709" }, { "id": "149", "name": "张北县", "code": "130722" }, { "id": "150", "name": "康保县", "code": "130723" }, { "id": "151", "name": "沽源县", "code": "130724" }, { "id": "152", "name": "尚义县", "code": "130725" }, { "id": "153", "name": "蔚县", "code": "130726" }, { "id": "154", "name": "阳原县", "code": "130727" }, { "id": "155", "name": "怀安县", "code": "130728" }, { "id": "156", "name": "怀来县", "code": "130730" }, { "id": "157", "name": "涿鹿县", "code": "130731" }, { "id": "158", "name": "赤城县", "code": "130732" }] }, { "id": "10", "name": "承德市", "code": "130800", "children": [{ "id": "159", "name": "市辖区", "code": "130801" }, { "id": "160", "name": "双桥区", "code": "130802" }, { "id": "161", "name": "双滦区", "code": "130803" }, { "id": "162", "name": "鹰手营子矿区", "code": "130804" }, { "id": "163", "name": "承德县", "code": "130821" }, { "id": "164", "name": "兴隆县", "code": "130822" }, { "id": "165", "name": "平泉县", "code": "130823" }, { "id": "166", "name": "滦平县", "code": "130824" }, { "id": "167", "name": "隆化县", "code": "130825" }, { "id": "168", "name": "丰宁满族自治县", "code": "130826" }, { "id": "169", "name": "宽城满族自治县", "code": "130827" }, { "id": "170", "name": "围场满族蒙古族自治县", "code": "130828" }] }, { "id": "11", "name": "沧州市", "code": "130900", "children": [{ "id": "171", "name": "市辖区", "code": "130901" }, { "id": "172", "name": "新华区", "code": "130902" }, { "id": "173", "name": "运河区", "code": "130903" }, { "id": "174", "name": "沧县", "code": "130921" }, { "id": "175", "name": "青县", "code": "130922" }, { "id": "176", "name": "东光县", "code": "130923" }, { "id": "177", "name": "海兴县", "code": "130924" }, { "id": "178", "name": "盐山县", "code": "130925" }, { "id": "179", "name": "肃宁县", "code": "130926" }, { "id": "180", "name": "南皮县", "code": "130927" }, { "id": "181", "name": "吴桥县", "code": "130928" }, { "id": "182", "name": "献县", "code": "130929" }, { "id": "183", "name": "孟村回族自治县", "code": "130930" }, { "id": "184", "name": "泊头市", "code": "130981" }, { "id": "185", "name": "任丘市", "code": "130982" }, { "id": "186", "name": "黄骅市", "code": "130983" }, { "id": "187", "name": "河间市", "code": "130984" }] }, { "id": "12", "name": "廊坊市", "code": "131000", "children": [{ "id": "188", "name": "市辖区", "code": "131001" }, { "id": "189", "name": "安次区", "code": "131002" }, { "id": "190", "name": "广阳区", "code": "131003" }, { "id": "191", "name": "固安县", "code": "131022" }, { "id": "192", "name": "永清县", "code": "131023" }, { "id": "193", "name": "香河县", "code": "131024" }, { "id": "194", "name": "大城县", "code": "131025" }, { "id": "195", "name": "文安县", "code": "131026" }, { "id": "196", "name": "大厂回族自治县", "code": "131028" }, { "id": "197", "name": "霸州市", "code": "131081" }, { "id": "198", "name": "三河市", "code": "131082" }] }, { "id": "13", "name": "衡水市", "code": "131100", "children": [{ "id": "199", "name": "市辖区", "code": "131101" }, { "id": "200", "name": "桃城区", "code": "131102" }, { "id": "201", "name": "冀州区", "code": "131103" }, { "id": "202", "name": "枣强县", "code": "131121" }, { "id": "203", "name": "武邑县", "code": "131122" }, { "id": "204", "name": "武强县", "code": "131123" }, { "id": "205", "name": "饶阳县", "code": "131124" }, { "id": "206", "name": "安平县", "code": "131125" }, { "id": "207", "name": "故城县", "code": "131126" }, { "id": "208", "name": "景县", "code": "131127" }, { "id": "209", "name": "阜城县", "code": "131128" }, { "id": "210", "name": "深州市", "code": "131182" }] }, { "id": "14", "name": "省直辖县级行政区划", "code": "139000", "children": [{ "id": "211", "name": "定州市", "code": "139001" }, { "id": "212", "name": "辛集市", "code": "139002" }] }] }, { "id": "4", "name": "山西省", "code": "140000", "children": [{ "id": "15", "name": "太原市", "code": "140100", "children": [{ "id": "213", "name": "市辖区", "code": "140101" }, { "id": "214", "name": "小店区", "code": "140105" }, { "id": "215", "name": "迎泽区", "code": "140106" }, { "id": "216", "name": "杏花岭区", "code": "140107" }, { "id": "217", "name": "尖草坪区", "code": "140108" }, { "id": "218", "name": "万柏林区", "code": "140109" }, { "id": "219", "name": "晋源区", "code": "140110" }, { "id": "220", "name": "清徐县", "code": "140121" }, { "id": "221", "name": "阳曲县", "code": "140122" }, { "id": "222", "name": "娄烦县", "code": "140123" }, { "id": "223", "name": "古交市", "code": "140181" }] }, { "id": "16", "name": "大同市", "code": "140200", "children": [{ "id": "224", "name": "市辖区", "code": "140201" }, { "id": "225", "name": "城区", "code": "140202" }, { "id": "226", "name": "矿区", "code": "140203" }, { "id": "227", "name": "南郊区", "code": "140211" }, { "id": "228", "name": "新荣区", "code": "140212" }, { "id": "229", "name": "阳高县", "code": "140221" }, { "id": "230", "name": "天镇县", "code": "140222" }, { "id": "231", "name": "广灵县", "code": "140223" }, { "id": "232", "name": "灵丘县", "code": "140224" }, { "id": "233", "name": "浑源县", "code": "140225" }, { "id": "234", "name": "左云县", "code": "140226" }, { "id": "235", "name": "大同县", "code": "140227" }] }, { "id": "17", "name": "阳泉市", "code": "140300", "children": [{ "id": "236", "name": "市辖区", "code": "140301" }, { "id": "237", "name": "城区", "code": "140302" }, { "id": "238", "name": "矿区", "code": "140303" }, { "id": "239", "name": "郊区", "code": "140311" }, { "id": "240", "name": "平定县", "code": "140321" }, { "id": "241", "name": "盂县", "code": "140322" }] }, { "id": "18", "name": "长治市", "code": "140400", "children": [{ "id": "242", "name": "市辖区", "code": "140401" }, { "id": "243", "name": "城区", "code": "140402" }, { "id": "244", "name": "郊区", "code": "140411" }, { "id": "245", "name": "长治县", "code": "140421" }, { "id": "246", "name": "襄垣县", "code": "140423" }, { "id": "247", "name": "屯留县", "code": "140424" }, { "id": "248", "name": "平顺县", "code": "140425" }, { "id": "249", "name": "黎城县", "code": "140426" }, { "id": "250", "name": "壶关县", "code": "140427" }, { "id": "251", "name": "长子县", "code": "140428" }, { "id": "252", "name": "武乡县", "code": "140429" }, { "id": "253", "name": "沁县", "code": "140430" }, { "id": "254", "name": "沁源县", "code": "140431" }, { "id": "255", "name": "潞城市", "code": "140481" }] }, { "id": "19", "name": "晋城市", "code": "140500", "children": [{ "id": "256", "name": "市辖区", "code": "140501" }, { "id": "257", "name": "城区", "code": "140502" }, { "id": "258", "name": "沁水县", "code": "140521" }, { "id": "259", "name": "阳城县", "code": "140522" }, { "id": "260", "name": "陵川县", "code": "140524" }, { "id": "261", "name": "泽州县", "code": "140525" }, { "id": "262", "name": "高平市", "code": "140581" }] }, { "id": "20", "name": "朔州市", "code": "140600", "children": [{ "id": "263", "name": "市辖区", "code": "140601" }, { "id": "264", "name": "朔城区", "code": "140602" }, { "id": "265", "name": "平鲁区", "code": "140603" }, { "id": "266", "name": "山阴县", "code": "140621" }, { "id": "267", "name": "应县", "code": "140622" }, { "id": "268", "name": "右玉县", "code": "140623" }, { "id": "269", "name": "怀仁县", "code": "140624" }] }, { "id": "21", "name": "晋中市", "code": "140700", "children": [{ "id": "270", "name": "市辖区", "code": "140701" }, { "id": "271", "name": "榆次区", "code": "140702" }, { "id": "272", "name": "榆社县", "code": "140721" }, { "id": "273", "name": "左权县", "code": "140722" }, { "id": "274", "name": "和顺县", "code": "140723" }, { "id": "275", "name": "昔阳县", "code": "140724" }, { "id": "276", "name": "寿阳县", "code": "140725" }, { "id": "277", "name": "太谷县", "code": "140726" }, { "id": "278", "name": "祁县", "code": "140727" }, { "id": "279", "name": "平遥县", "code": "140728" }, { "id": "280", "name": "灵石县", "code": "140729" }, { "id": "281", "name": "介休市", "code": "140781" }] }, { "id": "22", "name": "运城市", "code": "140800", "children": [{ "id": "282", "name": "市辖区", "code": "140801" }, { "id": "283", "name": "盐湖区", "code": "140802" }, { "id": "284", "name": "临猗县", "code": "140821" }, { "id": "285", "name": "万荣县", "code": "140822" }, { "id": "286", "name": "闻喜县", "code": "140823" }, { "id": "287", "name": "稷山县", "code": "140824" }, { "id": "288", "name": "新绛县", "code": "140825" }, { "id": "289", "name": "绛县", "code": "140826" }, { "id": "290", "name": "垣曲县", "code": "140827" }, { "id": "291", "name": "夏县", "code": "140828" }, { "id": "292", "name": "平陆县", "code": "140829" }, { "id": "293", "name": "芮城县", "code": "140830" }, { "id": "294", "name": "永济市", "code": "140881" }, { "id": "295", "name": "河津市", "code": "140882" }] }, { "id": "23", "name": "忻州市", "code": "140900", "children": [{ "id": "296", "name": "市辖区", "code": "140901" }, { "id": "297", "name": "忻府区", "code": "140902" }, { "id": "298", "name": "定襄县", "code": "140921" }, { "id": "299", "name": "五台县", "code": "140922" }, { "id": "300", "name": "代县", "code": "140923" }, { "id": "301", "name": "繁峙县", "code": "140924" }, { "id": "302", "name": "宁武县", "code": "140925" }, { "id": "303", "name": "静乐县", "code": "140926" }, { "id": "304", "name": "神池县", "code": "140927" }, { "id": "305", "name": "五寨县", "code": "140928" }, { "id": "306", "name": "岢岚县", "code": "140929" }, { "id": "307", "name": "河曲县", "code": "140930" }, { "id": "308", "name": "保德县", "code": "140931" }, { "id": "309", "name": "偏关县", "code": "140932" }, { "id": "310", "name": "原平市", "code": "140981" }] }, { "id": "24", "name": "临汾市", "code": "141000", "children": [{ "id": "311", "name": "市辖区", "code": "141001" }, { "id": "312", "name": "尧都区", "code": "141002" }, { "id": "313", "name": "曲沃县", "code": "141021" }, { "id": "314", "name": "翼城县", "code": "141022" }, { "id": "315", "name": "襄汾县", "code": "141023" }, { "id": "316", "name": "洪洞县", "code": "141024" }, { "id": "317", "name": "古县", "code": "141025" }, { "id": "318", "name": "安泽县", "code": "141026" }, { "id": "319", "name": "浮山县", "code": "141027" }, { "id": "320", "name": "吉县", "code": "141028" }, { "id": "321", "name": "乡宁县", "code": "141029" }, { "id": "322", "name": "大宁县", "code": "141030" }, { "id": "323", "name": "隰县", "code": "141031" }, { "id": "324", "name": "永和县", "code": "141032" }, { "id": "325", "name": "蒲县", "code": "141033" }, { "id": "326", "name": "汾西县", "code": "141034" }, { "id": "327", "name": "侯马市", "code": "141081" }, { "id": "328", "name": "霍州市", "code": "141082" }] }, { "id": "25", "name": "吕梁市", "code": "141100", "children": [{ "id": "329", "name": "市辖区", "code": "141101" }, { "id": "330", "name": "离石区", "code": "141102" }, { "id": "331", "name": "文水县", "code": "141121" }, { "id": "332", "name": "交城县", "code": "141122" }, { "id": "333", "name": "兴县", "code": "141123" }, { "id": "334", "name": "临县", "code": "141124" }, { "id": "335", "name": "柳林县", "code": "141125" }, { "id": "336", "name": "石楼县", "code": "141126" }, { "id": "337", "name": "岚县", "code": "141127" }, { "id": "338", "name": "方山县", "code": "141128" }, { "id": "339", "name": "中阳县", "code": "141129" }, { "id": "340", "name": "交口县", "code": "141130" }, { "id": "341", "name": "孝义市", "code": "141181" }, { "id": "342", "name": "汾阳市", "code": "141182" }] }] }, { "id": "5", "name": "内蒙古自治区", "code": "150000", "children": [{ "id": "26", "name": "呼和浩特市", "code": "150100", "children": [{ "id": "343", "name": "市辖区", "code": "150101" }, { "id": "344", "name": "新城区", "code": "150102" }, { "id": "345", "name": "回民区", "code": "150103" }, { "id": "346", "name": "玉泉区", "code": "150104" }, { "id": "347", "name": "赛罕区", "code": "150105" }, { "id": "348", "name": "土默特左旗", "code": "150121" }, { "id": "349", "name": "托克托县", "code": "150122" }, { "id": "350", "name": "和林格尔县", "code": "150123" }, { "id": "351", "name": "清水河县", "code": "150124" }, { "id": "352", "name": "武川县", "code": "150125" }] }, { "id": "27", "name": "包头市", "code": "150200", "children": [{ "id": "353", "name": "市辖区", "code": "150201" }, { "id": "354", "name": "东河区", "code": "150202" }, { "id": "355", "name": "昆都仑区", "code": "150203" }, { "id": "356", "name": "青山区", "code": "150204" }, { "id": "357", "name": "石拐区", "code": "150205" }, { "id": "358", "name": "白云鄂博矿区", "code": "150206" }, { "id": "359", "name": "九原区", "code": "150207" }, { "id": "360", "name": "土默特右旗", "code": "150221" }, { "id": "361", "name": "固阳县", "code": "150222" }, { "id": "362", "name": "达尔罕茂明安联合旗", "code": "150223" }] }, { "id": "28", "name": "乌海市", "code": "150300", "children": [{ "id": "363", "name": "市辖区", "code": "150301" }, { "id": "364", "name": "海勃湾区", "code": "150302" }, { "id": "365", "name": "海南区", "code": "150303" }, { "id": "366", "name": "乌达区", "code": "150304" }] }, { "id": "29", "name": "赤峰市", "code": "150400", "children": [{ "id": "367", "name": "市辖区", "code": "150401" }, { "id": "368", "name": "红山区", "code": "150402" }, { "id": "369", "name": "元宝山区", "code": "150403" }, { "id": "370", "name": "松山区", "code": "150404" }, { "id": "371", "name": "阿鲁科尔沁旗", "code": "150421" }, { "id": "372", "name": "巴林左旗", "code": "150422" }, { "id": "373", "name": "巴林右旗", "code": "150423" }, { "id": "374", "name": "林西县", "code": "150424" }, { "id": "375", "name": "克什克腾旗", "code": "150425" }, { "id": "376", "name": "翁牛特旗", "code": "150426" }, { "id": "377", "name": "喀喇沁旗", "code": "150428" }, { "id": "378", "name": "宁城县", "code": "150429" }, { "id": "379", "name": "敖汉旗", "code": "150430" }] }, { "id": "30", "name": "通辽市", "code": "150500", "children": [{ "id": "380", "name": "市辖区", "code": "150501" }, { "id": "381", "name": "科尔沁区", "code": "150502" }, { "id": "382", "name": "科尔沁左翼中旗", "code": "150521" }, { "id": "383", "name": "科尔沁左翼后旗", "code": "150522" }, { "id": "384", "name": "开鲁县", "code": "150523" }, { "id": "385", "name": "库伦旗", "code": "150524" }, { "id": "386", "name": "奈曼旗", "code": "150525" }, { "id": "387", "name": "扎鲁特旗", "code": "150526" }, { "id": "388", "name": "霍林郭勒市", "code": "150581" }] }, { "id": "31", "name": "鄂尔多斯市", "code": "150600", "children": [{ "id": "389", "name": "市辖区", "code": "150601" }, { "id": "390", "name": "东胜区", "code": "150602" }, { "id": "391", "name": "康巴什区", "code": "150603" }, { "id": "392", "name": "达拉特旗", "code": "150621" }, { "id": "393", "name": "准格尔旗", "code": "150622" }, { "id": "394", "name": "鄂托克前旗", "code": "150623" }, { "id": "395", "name": "鄂托克旗", "code": "150624" }, { "id": "396", "name": "杭锦旗", "code": "150625" }, { "id": "397", "name": "乌审旗", "code": "150626" }, { "id": "398", "name": "伊金霍洛旗", "code": "150627" }] }, { "id": "32", "name": "呼伦贝尔市", "code": "150700", "children": [{ "id": "399", "name": "市辖区", "code": "150701" }, { "id": "400", "name": "海拉尔区", "code": "150702" }, { "id": "401", "name": "扎赉诺尔区", "code": "150703" }, { "id": "402", "name": "阿荣旗", "code": "150721" }, { "id": "403", "name": "莫力达瓦达斡尔族自治旗", "code": "150722" }, { "id": "404", "name": "鄂伦春自治旗", "code": "150723" }, { "id": "405", "name": "鄂温克族自治旗", "code": "150724" }, { "id": "406", "name": "陈巴尔虎旗", "code": "150725" }, { "id": "407", "name": "新巴尔虎左旗", "code": "150726" }, { "id": "408", "name": "新巴尔虎右旗", "code": "150727" }, { "id": "409", "name": "满洲里市", "code": "150781" }, { "id": "410", "name": "牙克石市", "code": "150782" }, { "id": "411", "name": "扎兰屯市", "code": "150783" }, { "id": "412", "name": "额尔古纳市", "code": "150784" }, { "id": "413", "name": "根河市", "code": "150785" }] }, { "id": "33", "name": "巴彦淖尔市", "code": "150800", "children": [{ "id": "414", "name": "市辖区", "code": "150801" }, { "id": "415", "name": "临河区", "code": "150802" }, { "id": "416", "name": "五原县", "code": "150821" }, { "id": "417", "name": "磴口县", "code": "150822" }, { "id": "418", "name": "乌拉特前旗", "code": "150823" }, { "id": "419", "name": "乌拉特中旗", "code": "150824" }, { "id": "420", "name": "乌拉特后旗", "code": "150825" }, { "id": "421", "name": "杭锦后旗", "code": "150826" }] }, { "id": "34", "name": "乌兰察布市", "code": "150900", "children": [{ "id": "422", "name": "市辖区", "code": "150901" }, { "id": "423", "name": "集宁区", "code": "150902" }, { "id": "424", "name": "卓资县", "code": "150921" }, { "id": "425", "name": "化德县", "code": "150922" }, { "id": "426", "name": "商都县", "code": "150923" }, { "id": "427", "name": "兴和县", "code": "150924" }, { "id": "428", "name": "凉城县", "code": "150925" }, { "id": "429", "name": "察哈尔右翼前旗", "code": "150926" }, { "id": "430", "name": "察哈尔右翼中旗", "code": "150927" }, { "id": "431", "name": "察哈尔右翼后旗", "code": "150928" }, { "id": "432", "name": "四子王旗", "code": "150929" }, { "id": "433", "name": "丰镇市", "code": "150981" }] }, { "id": "35", "name": "兴安盟", "code": "152200", "children": [{ "id": "434", "name": "乌兰浩特市", "code": "152201" }, { "id": "435", "name": "阿尔山市", "code": "152202" }, { "id": "436", "name": "科尔沁右翼前旗", "code": "152221" }, { "id": "437", "name": "科尔沁右翼中旗", "code": "152222" }, { "id": "438", "name": "扎赉特旗", "code": "152223" }, { "id": "439", "name": "突泉县", "code": "152224" }] }, { "id": "36", "name": "锡林郭勒盟", "code": "152500", "children": [{ "id": "440", "name": "二连浩特市", "code": "152501" }, { "id": "441", "name": "锡林浩特市", "code": "152502" }, { "id": "442", "name": "阿巴嘎旗", "code": "152522" }, { "id": "443", "name": "苏尼特左旗", "code": "152523" }, { "id": "444", "name": "苏尼特右旗", "code": "152524" }, { "id": "445", "name": "东乌珠穆沁旗", "code": "152525" }, { "id": "446", "name": "西乌珠穆沁旗", "code": "152526" }, { "id": "447", "name": "太仆寺旗", "code": "152527" }, { "id": "448", "name": "镶黄旗", "code": "152528" }, { "id": "449", "name": "正镶白旗", "code": "152529" }, { "id": "450", "name": "正蓝旗", "code": "152530" }, { "id": "451", "name": "多伦县", "code": "152531" }] }, { "id": "37", "name": "阿拉善盟", "code": "152900", "children": [{ "id": "452", "name": "阿拉善左旗", "code": "152921" }, { "id": "453", "name": "阿拉善右旗", "code": "152922" }, { "id": "454", "name": "额济纳旗", "code": "152923" }] }] }, { "id": "6", "name": "辽宁省", "code": "210000", "children": [{ "id": "38", "name": "沈阳市", "code": "210100", "children": [{ "id": "455", "name": "市辖区", "code": "210101" }, { "id": "456", "name": "和平区", "code": "210102" }, { "id": "457", "name": "沈河区", "code": "210103" }, { "id": "458", "name": "大东区", "code": "210104" }, { "id": "459", "name": "皇姑区", "code": "210105" }, { "id": "460", "name": "铁西区", "code": "210106" }, { "id": "461", "name": "苏家屯区", "code": "210111" }, { "id": "462", "name": "浑南区", "code": "210112" }, { "id": "463", "name": "沈北新区", "code": "210113" }, { "id": "464", "name": "于洪区", "code": "210114" }, { "id": "465", "name": "辽中区", "code": "210115" }, { "id": "466", "name": "康平县", "code": "210123" }, { "id": "467", "name": "法库县", "code": "210124" }, { "id": "468", "name": "新民市", "code": "210181" }] }, { "id": "39", "name": "大连市", "code": "210200", "children": [{ "id": "469", "name": "市辖区", "code": "210201" }, { "id": "470", "name": "中山区", "code": "210202" }, { "id": "471", "name": "西岗区", "code": "210203" }, { "id": "472", "name": "沙河口区", "code": "210204" }, { "id": "473", "name": "甘井子区", "code": "210211" }, { "id": "474", "name": "旅顺口区", "code": "210212" }, { "id": "475", "name": "金州区", "code": "210213" }, { "id": "476", "name": "普兰店区", "code": "210214" }, { "id": "477", "name": "长海县", "code": "210224" }, { "id": "478", "name": "瓦房店市", "code": "210281" }, { "id": "479", "name": "庄河市", "code": "210283" }] }, { "id": "40", "name": "鞍山市", "code": "210300", "children": [{ "id": "480", "name": "市辖区", "code": "210301" }, { "id": "481", "name": "铁东区", "code": "210302" }, { "id": "482", "name": "铁西区", "code": "210303" }, { "id": "483", "name": "立山区", "code": "210304" }, { "id": "484", "name": "千山区", "code": "210311" }, { "id": "485", "name": "台安县", "code": "210321" }, { "id": "486", "name": "岫岩满族自治县", "code": "210323" }, { "id": "487", "name": "海城市", "code": "210381" }] }, { "id": "41", "name": "抚顺市", "code": "210400", "children": [{ "id": "488", "name": "市辖区", "code": "210401" }, { "id": "489", "name": "新抚区", "code": "210402" }, { "id": "490", "name": "东洲区", "code": "210403" }, { "id": "491", "name": "望花区", "code": "210404" }, { "id": "492", "name": "顺城区", "code": "210411" }, { "id": "493", "name": "抚顺县", "code": "210421" }, { "id": "494", "name": "新宾满族自治县", "code": "210422" }, { "id": "495", "name": "清原满族自治县", "code": "210423" }] }, { "id": "42", "name": "本溪市", "code": "210500", "children": [{ "id": "496", "name": "市辖区", "code": "210501" }, { "id": "497", "name": "平山区", "code": "210502" }, { "id": "498", "name": "溪湖区", "code": "210503" }, { "id": "499", "name": "明山区", "code": "210504" }, { "id": "500", "name": "南芬区", "code": "210505" }, { "id": "501", "name": "本溪满族自治县", "code": "210521" }, { "id": "502", "name": "桓仁满族自治县", "code": "210522" }] }, { "id": "43", "name": "丹东市", "code": "210600", "children": [{ "id": "503", "name": "市辖区", "code": "210601" }, { "id": "504", "name": "元宝区", "code": "210602" }, { "id": "505", "name": "振兴区", "code": "210603" }, { "id": "506", "name": "振安区", "code": "210604" }, { "id": "507", "name": "宽甸满族自治县", "code": "210624" }, { "id": "508", "name": "东港市", "code": "210681" }, { "id": "509", "name": "凤城市", "code": "210682" }] }, { "id": "44", "name": "锦州市", "code": "210700", "children": [{ "id": "510", "name": "市辖区", "code": "210701" }, { "id": "511", "name": "古塔区", "code": "210702" }, { "id": "512", "name": "凌河区", "code": "210703" }, { "id": "513", "name": "太和区", "code": "210711" }, { "id": "514", "name": "黑山县", "code": "210726" }, { "id": "515", "name": "义县", "code": "210727" }, { "id": "516", "name": "凌海市", "code": "210781" }, { "id": "517", "name": "北镇市", "code": "210782" }] }, { "id": "45", "name": "营口市", "code": "210800", "children": [{ "id": "518", "name": "市辖区", "code": "210801" }, { "id": "519", "name": "站前区", "code": "210802" }, { "id": "520", "name": "西市区", "code": "210803" }, { "id": "521", "name": "鲅鱼圈区", "code": "210804" }, { "id": "522", "name": "老边区", "code": "210811" }, { "id": "523", "name": "盖州市", "code": "210881" }, { "id": "524", "name": "大石桥市", "code": "210882" }] }, { "id": "46", "name": "阜新市", "code": "210900", "children": [{ "id": "525", "name": "市辖区", "code": "210901" }, { "id": "526", "name": "海州区", "code": "210902" }, { "id": "527", "name": "新邱区", "code": "210903" }, { "id": "528", "name": "太平区", "code": "210904" }, { "id": "529", "name": "清河门区", "code": "210905" }, { "id": "530", "name": "细河区", "code": "210911" }, { "id": "531", "name": "阜新蒙古族自治县", "code": "210921" }, { "id": "532", "name": "彰武县", "code": "210922" }] }, { "id": "47", "name": "辽阳市", "code": "211000", "children": [{ "id": "533", "name": "市辖区", "code": "211001" }, { "id": "534", "name": "白塔区", "code": "211002" }, { "id": "535", "name": "文圣区", "code": "211003" }, { "id": "536", "name": "宏伟区", "code": "211004" }, { "id": "537", "name": "弓长岭区", "code": "211005" }, { "id": "538", "name": "太子河区", "code": "211011" }, { "id": "539", "name": "辽阳县", "code": "211021" }, { "id": "540", "name": "灯塔市", "code": "211081" }] }, { "id": "48", "name": "盘锦市", "code": "211100", "children": [{ "id": "541", "name": "市辖区", "code": "211101" }, { "id": "542", "name": "双台子区", "code": "211102" }, { "id": "543", "name": "兴隆台区", "code": "211103" }, { "id": "544", "name": "大洼区", "code": "211104" }, { "id": "545", "name": "盘山县", "code": "211122" }] }, { "id": "49", "name": "铁岭市", "code": "211200", "children": [{ "id": "546", "name": "市辖区", "code": "211201" }, { "id": "547", "name": "银州区", "code": "211202" }, { "id": "548", "name": "清河区", "code": "211204" }, { "id": "549", "name": "铁岭县", "code": "211221" }, { "id": "550", "name": "西丰县", "code": "211223" }, { "id": "551", "name": "昌图县", "code": "211224" }, { "id": "552", "name": "调兵山市", "code": "211281" }, { "id": "553", "name": "开原市", "code": "211282" }] }, { "id": "50", "name": "朝阳市", "code": "211300", "children": [{ "id": "554", "name": "市辖区", "code": "211301" }, { "id": "555", "name": "双塔区", "code": "211302" }, { "id": "556", "name": "龙城区", "code": "211303" }, { "id": "557", "name": "朝阳县", "code": "211321" }, { "id": "558", "name": "建平县", "code": "211322" }, { "id": "559", "name": "喀喇沁左翼蒙古族自治县", "code": "211324" }, { "id": "560", "name": "北票市", "code": "211381" }, { "id": "561", "name": "凌源市", "code": "211382" }] }, { "id": "51", "name": "葫芦岛市", "code": "211400", "children": [{ "id": "562", "name": "市辖区", "code": "211401" }, { "id": "563", "name": "连山区", "code": "211402" }, { "id": "564", "name": "龙港区", "code": "211403" }, { "id": "565", "name": "南票区", "code": "211404" }, { "id": "566", "name": "绥中县", "code": "211421" }, { "id": "567", "name": "建昌县", "code": "211422" }, { "id": "568", "name": "兴城市", "code": "211481" }] }] }, { "id": "7", "name": "吉林省", "code": "220000", "children": [{ "id": "52", "name": "长春市", "code": "220100", "children": [{ "id": "569", "name": "市辖区", "code": "220101" }, { "id": "570", "name": "南关区", "code": "220102" }, { "id": "571", "name": "宽城区", "code": "220103" }, { "id": "572", "name": "朝阳区", "code": "220104" }, { "id": "573", "name": "二道区", "code": "220105" }, { "id": "574", "name": "绿园区", "code": "220106" }, { "id": "575", "name": "双阳区", "code": "220112" }, { "id": "576", "name": "九台区", "code": "220113" }, { "id": "577", "name": "农安县", "code": "220122" }, { "id": "578", "name": "榆树市", "code": "220182" }, { "id": "579", "name": "德惠市", "code": "220183" }] }, { "id": "53", "name": "吉林市", "code": "220200", "children": [{ "id": "580", "name": "市辖区", "code": "220201" }, { "id": "581", "name": "昌邑区", "code": "220202" }, { "id": "582", "name": "龙潭区", "code": "220203" }, { "id": "583", "name": "船营区", "code": "220204" }, { "id": "584", "name": "丰满区", "code": "220211" }, { "id": "585", "name": "永吉县", "code": "220221" }, { "id": "586", "name": "蛟河市", "code": "220281" }, { "id": "587", "name": "桦甸市", "code": "220282" }, { "id": "588", "name": "舒兰市", "code": "220283" }, { "id": "589", "name": "磐石市", "code": "220284" }] }, { "id": "54", "name": "四平市", "code": "220300", "children": [{ "id": "590", "name": "市辖区", "code": "220301" }, { "id": "591", "name": "铁西区", "code": "220302" }, { "id": "592", "name": "铁东区", "code": "220303" }, { "id": "593", "name": "梨树县", "code": "220322" }, { "id": "594", "name": "伊通满族自治县", "code": "220323" }, { "id": "595", "name": "公主岭市", "code": "220381" }, { "id": "596", "name": "双辽市", "code": "220382" }] }, { "id": "55", "name": "辽源市", "code": "220400", "children": [{ "id": "597", "name": "市辖区", "code": "220401" }, { "id": "598", "name": "龙山区", "code": "220402" }, { "id": "599", "name": "西安区", "code": "220403" }, { "id": "600", "name": "东丰县", "code": "220421" }, { "id": "601", "name": "东辽县", "code": "220422" }] }, { "id": "56", "name": "通化市", "code": "220500", "children": [{ "id": "602", "name": "市辖区", "code": "220501" }, { "id": "603", "name": "东昌区", "code": "220502" }, { "id": "604", "name": "二道江区", "code": "220503" }, { "id": "605", "name": "通化县", "code": "220521" }, { "id": "606", "name": "辉南县", "code": "220523" }, { "id": "607", "name": "柳河县", "code": "220524" }, { "id": "608", "name": "梅河口市", "code": "220581" }, { "id": "609", "name": "集安市", "code": "220582" }] }, { "id": "57", "name": "白山市", "code": "220600", "children": [{ "id": "610", "name": "市辖区", "code": "220601" }, { "id": "611", "name": "浑江区", "code": "220602" }, { "id": "612", "name": "江源区", "code": "220605" }, { "id": "613", "name": "抚松县", "code": "220621" }, { "id": "614", "name": "靖宇县", "code": "220622" }, { "id": "615", "name": "长白朝鲜族自治县", "code": "220623" }, { "id": "616", "name": "临江市", "code": "220681" }] }, { "id": "58", "name": "松原市", "code": "220700", "children": [{ "id": "617", "name": "市辖区", "code": "220701" }, { "id": "618", "name": "宁江区", "code": "220702" }, { "id": "619", "name": "前郭尔罗斯蒙古族自治县", "code": "220721" }, { "id": "620", "name": "长岭县", "code": "220722" }, { "id": "621", "name": "乾安县", "code": "220723" }, { "id": "622", "name": "扶余市", "code": "220781" }] }, { "id": "59", "name": "白城市", "code": "220800", "children": [{ "id": "623", "name": "市辖区", "code": "220801" }, { "id": "624", "name": "洮北区", "code": "220802" }, { "id": "625", "name": "镇赉县", "code": "220821" }, { "id": "626", "name": "通榆县", "code": "220822" }, { "id": "627", "name": "洮南市", "code": "220881" }, { "id": "628", "name": "大安市", "code": "220882" }] }, { "id": "60", "name": "延边朝鲜族自治州", "code": "222400", "children": [{ "id": "629", "name": "延吉市", "code": "222401" }, { "id": "630", "name": "图们市", "code": "222402" }, { "id": "631", "name": "敦化市", "code": "222403" }, { "id": "632", "name": "珲春市", "code": "222404" }, { "id": "633", "name": "龙井市", "code": "222405" }, { "id": "634", "name": "和龙市", "code": "222406" }, { "id": "635", "name": "汪清县", "code": "222424" }, { "id": "636", "name": "安图县", "code": "222426" }] }] }, { "id": "8", "name": "黑龙江省", "code": "230000", "children": [{ "id": "61", "name": "哈尔滨市", "code": "230100", "children": [{ "id": "637", "name": "市辖区", "code": "230101" }, { "id": "638", "name": "道里区", "code": "230102" }, { "id": "639", "name": "南岗区", "code": "230103" }, { "id": "640", "name": "道外区", "code": "230104" }, { "id": "641", "name": "平房区", "code": "230108" }, { "id": "642", "name": "松北区", "code": "230109" }, { "id": "643", "name": "香坊区", "code": "230110" }, { "id": "644", "name": "呼兰区", "code": "230111" }, { "id": "645", "name": "阿城区", "code": "230112" }, { "id": "646", "name": "双城区", "code": "230113" }, { "id": "647", "name": "依兰县", "code": "230123" }, { "id": "648", "name": "方正县", "code": "230124" }, { "id": "649", "name": "宾县", "code": "230125" }, { "id": "650", "name": "巴彦县", "code": "230126" }, { "id": "651", "name": "木兰县", "code": "230127" }, { "id": "652", "name": "通河县", "code": "230128" }, { "id": "653", "name": "延寿县", "code": "230129" }, { "id": "654", "name": "尚志市", "code": "230183" }, { "id": "655", "name": "五常市", "code": "230184" }] }, { "id": "62", "name": "齐齐哈尔市", "code": "230200", "children": [{ "id": "656", "name": "市辖区", "code": "230201" }, { "id": "657", "name": "龙沙区", "code": "230202" }, { "id": "658", "name": "建华区", "code": "230203" }, { "id": "659", "name": "铁锋区", "code": "230204" }, { "id": "660", "name": "昂昂溪区", "code": "230205" }, { "id": "661", "name": "富拉尔基区", "code": "230206" }, { "id": "662", "name": "碾子山区", "code": "230207" }, { "id": "663", "name": "梅里斯达斡尔族区", "code": "230208" }, { "id": "664", "name": "龙江县", "code": "230221" }, { "id": "665", "name": "依安县", "code": "230223" }, { "id": "666", "name": "泰来县", "code": "230224" }, { "id": "667", "name": "甘南县", "code": "230225" }, { "id": "668", "name": "富裕县", "code": "230227" }, { "id": "669", "name": "克山县", "code": "230229" }, { "id": "670", "name": "克东县", "code": "230230" }, { "id": "671", "name": "拜泉县", "code": "230231" }, { "id": "672", "name": "讷河市", "code": "230281" }] }, { "id": "63", "name": "鸡西市", "code": "230300", "children": [{ "id": "673", "name": "市辖区", "code": "230301" }, { "id": "674", "name": "鸡冠区", "code": "230302" }, { "id": "675", "name": "恒山区", "code": "230303" }, { "id": "676", "name": "滴道区", "code": "230304" }, { "id": "677", "name": "梨树区", "code": "230305" }, { "id": "678", "name": "城子河区", "code": "230306" }, { "id": "679", "name": "麻山区", "code": "230307" }, { "id": "680", "name": "鸡东县", "code": "230321" }, { "id": "681", "name": "虎林市", "code": "230381" }, { "id": "682", "name": "密山市", "code": "230382" }] }, { "id": "64", "name": "鹤岗市", "code": "230400", "children": [{ "id": "683", "name": "市辖区", "code": "230401" }, { "id": "684", "name": "向阳区", "code": "230402" }, { "id": "685", "name": "工农区", "code": "230403" }, { "id": "686", "name": "南山区", "code": "230404" }, { "id": "687", "name": "兴安区", "code": "230405" }, { "id": "688", "name": "东山区", "code": "230406" }, { "id": "689", "name": "兴山区", "code": "230407" }, { "id": "690", "name": "萝北县", "code": "230421" }, { "id": "691", "name": "绥滨县", "code": "230422" }] }, { "id": "65", "name": "双鸭山市", "code": "230500", "children": [{ "id": "692", "name": "市辖区", "code": "230501" }, { "id": "693", "name": "尖山区", "code": "230502" }, { "id": "694", "name": "岭东区", "code": "230503" }, { "id": "695", "name": "四方台区", "code": "230505" }, { "id": "696", "name": "宝山区", "code": "230506" }, { "id": "697", "name": "集贤县", "code": "230521" }, { "id": "698", "name": "友谊县", "code": "230522" }, { "id": "699", "name": "宝清县", "code": "230523" }, { "id": "700", "name": "饶河县", "code": "230524" }] }, { "id": "66", "name": "大庆市", "code": "230600", "children": [{ "id": "701", "name": "市辖区", "code": "230601" }, { "id": "702", "name": "萨尔图区", "code": "230602" }, { "id": "703", "name": "龙凤区", "code": "230603" }, { "id": "704", "name": "让胡路区", "code": "230604" }, { "id": "705", "name": "红岗区", "code": "230605" }, { "id": "706", "name": "大同区", "code": "230606" }, { "id": "707", "name": "肇州县", "code": "230621" }, { "id": "708", "name": "肇源县", "code": "230622" }, { "id": "709", "name": "林甸县", "code": "230623" }, { "id": "710", "name": "杜尔伯特蒙古族自治县", "code": "230624" }] }, { "id": "67", "name": "伊春市", "code": "230700", "children": [{ "id": "711", "name": "市辖区", "code": "230701" }, { "id": "712", "name": "伊春区", "code": "230702" }, { "id": "713", "name": "南岔区", "code": "230703" }, { "id": "714", "name": "友好区", "code": "230704" }, { "id": "715", "name": "西林区", "code": "230705" }, { "id": "716", "name": "翠峦区", "code": "230706" }, { "id": "717", "name": "新青区", "code": "230707" }, { "id": "718", "name": "美溪区", "code": "230708" }, { "id": "719", "name": "金山屯区", "code": "230709" }, { "id": "720", "name": "五营区", "code": "230710" }, { "id": "721", "name": "乌马河区", "code": "230711" }, { "id": "722", "name": "汤旺河区", "code": "230712" }, { "id": "723", "name": "带岭区", "code": "230713" }, { "id": "724", "name": "乌伊岭区", "code": "230714" }, { "id": "725", "name": "红星区", "code": "230715" }, { "id": "726", "name": "上甘岭区", "code": "230716" }, { "id": "727", "name": "嘉荫县", "code": "230722" }, { "id": "728", "name": "铁力市", "code": "230781" }] }, { "id": "68", "name": "佳木斯市", "code": "230800", "children": [{ "id": "729", "name": "市辖区", "code": "230801" }, { "id": "730", "name": "向阳区", "code": "230803" }, { "id": "731", "name": "前进区", "code": "230804" }, { "id": "732", "name": "东风区", "code": "230805" }, { "id": "733", "name": "郊区", "code": "230811" }, { "id": "734", "name": "桦南县", "code": "230822" }, { "id": "735", "name": "桦川县", "code": "230826" }, { "id": "736", "name": "汤原县", "code": "230828" }, { "id": "737", "name": "同江市", "code": "230881" }, { "id": "738", "name": "富锦市", "code": "230882" }, { "id": "739", "name": "抚远市", "code": "230883" }] }, { "id": "69", "name": "七台河市", "code": "230900", "children": [{ "id": "740", "name": "市辖区", "code": "230901" }, { "id": "741", "name": "新兴区", "code": "230902" }, { "id": "742", "name": "桃山区", "code": "230903" }, { "id": "743", "name": "茄子河区", "code": "230904" }, { "id": "744", "name": "勃利县", "code": "230921" }] }, { "id": "70", "name": "牡丹江市", "code": "231000", "children": [{ "id": "745", "name": "市辖区", "code": "231001" }, { "id": "746", "name": "东安区", "code": "231002" }, { "id": "747", "name": "阳明区", "code": "231003" }, { "id": "748", "name": "爱民区", "code": "231004" }, { "id": "749", "name": "西安区", "code": "231005" }, { "id": "750", "name": "林口县", "code": "231025" }, { "id": "751", "name": "绥芬河市", "code": "231081" }, { "id": "752", "name": "海林市", "code": "231083" }, { "id": "753", "name": "宁安市", "code": "231084" }, { "id": "754", "name": "穆棱市", "code": "231085" }, { "id": "755", "name": "东宁市", "code": "231086" }] }, { "id": "71", "name": "黑河市", "code": "231100", "children": [{ "id": "756", "name": "市辖区", "code": "231101" }, { "id": "757", "name": "爱辉区", "code": "231102" }, { "id": "758", "name": "嫩江县", "code": "231121" }, { "id": "759", "name": "逊克县", "code": "231123" }, { "id": "760", "name": "孙吴县", "code": "231124" }, { "id": "761", "name": "北安市", "code": "231181" }, { "id": "762", "name": "五大连池市", "code": "231182" }] }, { "id": "72", "name": "绥化市", "code": "231200", "children": [{ "id": "763", "name": "市辖区", "code": "231201" }, { "id": "764", "name": "北林区", "code": "231202" }, { "id": "765", "name": "望奎县", "code": "231221" }, { "id": "766", "name": "兰西县", "code": "231222" }, { "id": "767", "name": "青冈县", "code": "231223" }, { "id": "768", "name": "庆安县", "code": "231224" }, { "id": "769", "name": "明水县", "code": "231225" }, { "id": "770", "name": "绥棱县", "code": "231226" }, { "id": "771", "name": "安达市", "code": "231281" }, { "id": "772", "name": "肇东市", "code": "231282" }, { "id": "773", "name": "海伦市", "code": "231283" }] }, { "id": "73", "name": "大兴安岭地区", "code": "232700", "children": [{ "id": "774", "name": "呼玛县", "code": "232721" }, { "id": "775", "name": "塔河县", "code": "232722" }, { "id": "776", "name": "漠河县", "code": "232723" }] }] }, { "id": "9", "name": "上海市", "code": "310000", "children": [{ "id": "74", "name": "市辖区", "code": "310100", "children": [{ "id": "777", "name": "黄浦区", "code": "310101" }, { "id": "778", "name": "徐汇区", "code": "310104" }, { "id": "779", "name": "长宁区", "code": "310105" }, { "id": "780", "name": "静安区", "code": "310106" }, { "id": "781", "name": "普陀区", "code": "310107" }, { "id": "782", "name": "虹口区", "code": "310109" }, { "id": "783", "name": "杨浦区", "code": "310110" }, { "id": "784", "name": "闵行区", "code": "310112" }, { "id": "785", "name": "宝山区", "code": "310113" }, { "id": "786", "name": "嘉定区", "code": "310114" }, { "id": "787", "name": "浦东新区", "code": "310115" }, { "id": "788", "name": "金山区", "code": "310116" }, { "id": "789", "name": "松江区", "code": "310117" }, { "id": "790", "name": "青浦区", "code": "310118" }, { "id": "791", "name": "奉贤区", "code": "310120" }, { "id": "792", "name": "崇明区", "code": "310151" }] }] }, { "id": "10", "name": "江苏省", "code": "320000", "children": [{ "id": "75", "name": "南京市", "code": "320100", "children": [{ "id": "793", "name": "市辖区", "code": "320101" }, { "id": "794", "name": "玄武区", "code": "320102" }, { "id": "795", "name": "秦淮区", "code": "320104" }, { "id": "796", "name": "建邺区", "code": "320105" }, { "id": "797", "name": "鼓楼区", "code": "320106" }, { "id": "798", "name": "浦口区", "code": "320111" }, { "id": "799", "name": "栖霞区", "code": "320113" }, { "id": "800", "name": "雨花台区", "code": "320114" }, { "id": "801", "name": "江宁区", "code": "320115" }, { "id": "802", "name": "六合区", "code": "320116" }, { "id": "803", "name": "溧水区", "code": "320117" }, { "id": "804", "name": "高淳区", "code": "320118" }] }, { "id": "76", "name": "无锡市", "code": "320200", "children": [{ "id": "805", "name": "市辖区", "code": "320201" }, { "id": "806", "name": "锡山区", "code": "320205" }, { "id": "807", "name": "惠山区", "code": "320206" }, { "id": "808", "name": "滨湖区", "code": "320211" }, { "id": "809", "name": "梁溪区", "code": "320213" }, { "id": "810", "name": "新吴区", "code": "320214" }, { "id": "811", "name": "江阴市", "code": "320281" }, { "id": "812", "name": "宜兴市", "code": "320282" }] }, { "id": "77", "name": "徐州市", "code": "320300", "children": [{ "id": "813", "name": "市辖区", "code": "320301" }, { "id": "814", "name": "鼓楼区", "code": "320302" }, { "id": "815", "name": "云龙区", "code": "320303" }, { "id": "816", "name": "贾汪区", "code": "320305" }, { "id": "817", "name": "泉山区", "code": "320311" }, { "id": "818", "name": "铜山区", "code": "320312" }, { "id": "819", "name": "丰县", "code": "320321" }, { "id": "820", "name": "沛县", "code": "320322" }, { "id": "821", "name": "睢宁县", "code": "320324" }, { "id": "822", "name": "新沂市", "code": "320381" }, { "id": "823", "name": "邳州市", "code": "320382" }] }, { "id": "78", "name": "常州市", "code": "320400", "children": [{ "id": "824", "name": "市辖区", "code": "320401" }, { "id": "825", "name": "天宁区", "code": "320402" }, { "id": "826", "name": "钟楼区", "code": "320404" }, { "id": "827", "name": "新北区", "code": "320411" }, { "id": "828", "name": "武进区", "code": "320412" }, { "id": "829", "name": "金坛区", "code": "320413" }, { "id": "830", "name": "溧阳市", "code": "320481" }] }, { "id": "79", "name": "苏州市", "code": "320500", "children": [{ "id": "831", "name": "市辖区", "code": "320501" }, { "id": "832", "name": "虎丘区", "code": "320505" }, { "id": "833", "name": "吴中区", "code": "320506" }, { "id": "834", "name": "相城区", "code": "320507" }, { "id": "835", "name": "姑苏区", "code": "320508" }, { "id": "836", "name": "吴江区", "code": "320509" }, { "id": "837", "name": "常熟市", "code": "320581" }, { "id": "838", "name": "张家港市", "code": "320582" }, { "id": "839", "name": "昆山市", "code": "320583" }, { "id": "840", "name": "太仓市", "code": "320585" }] }, { "id": "80", "name": "南通市", "code": "320600", "children": [{ "id": "841", "name": "市辖区", "code": "320601" }, { "id": "842", "name": "崇川区", "code": "320602" }, { "id": "843", "name": "港闸区", "code": "320611" }, { "id": "844", "name": "通州区", "code": "320612" }, { "id": "845", "name": "海安县", "code": "320621" }, { "id": "846", "name": "如东县", "code": "320623" }, { "id": "847", "name": "启东市", "code": "320681" }, { "id": "848", "name": "如皋市", "code": "320682" }, { "id": "849", "name": "海门市", "code": "320684" }] }, { "id": "81", "name": "连云港市", "code": "320700", "children": [{ "id": "850", "name": "市辖区", "code": "320701" }, { "id": "851", "name": "连云区", "code": "320703" }, { "id": "852", "name": "海州区", "code": "320706" }, { "id": "853", "name": "赣榆区", "code": "320707" }, { "id": "854", "name": "东海县", "code": "320722" }, { "id": "855", "name": "灌云县", "code": "320723" }, { "id": "856", "name": "灌南县", "code": "320724" }] }, { "id": "82", "name": "淮安市", "code": "320800", "children": [{ "id": "857", "name": "市辖区", "code": "320801" }, { "id": "858", "name": "淮安区", "code": "320803" }, { "id": "859", "name": "淮阴区", "code": "320804" }, { "id": "860", "name": "清江浦区", "code": "320812" }, { "id": "861", "name": "洪泽区", "code": "320813" }, { "id": "862", "name": "涟水县", "code": "320826" }, { "id": "863", "name": "盱眙县", "code": "320830" }, { "id": "864", "name": "金湖县", "code": "320831" }] }, { "id": "83", "name": "盐城市", "code": "320900", "children": [{ "id": "865", "name": "市辖区", "code": "320901" }, { "id": "866", "name": "亭湖区", "code": "320902" }, { "id": "867", "name": "盐都区", "code": "320903" }, { "id": "868", "name": "大丰区", "code": "320904" }, { "id": "869", "name": "响水县", "code": "320921" }, { "id": "870", "name": "滨海县", "code": "320922" }, { "id": "871", "name": "阜宁县", "code": "320923" }, { "id": "872", "name": "射阳县", "code": "320924" }, { "id": "873", "name": "建湖县", "code": "320925" }, { "id": "874", "name": "东台市", "code": "320981" }] }, { "id": "84", "name": "扬州市", "code": "321000", "children": [{ "id": "875", "name": "市辖区", "code": "321001" }, { "id": "876", "name": "广陵区", "code": "321002" }, { "id": "877", "name": "邗江区", "code": "321003" }, { "id": "878", "name": "江都区", "code": "321012" }, { "id": "879", "name": "宝应县", "code": "321023" }, { "id": "880", "name": "仪征市", "code": "321081" }, { "id": "881", "name": "高邮市", "code": "321084" }] }, { "id": "85", "name": "镇江市", "code": "321100", "children": [{ "id": "882", "name": "市辖区", "code": "321101" }, { "id": "883", "name": "京口区", "code": "321102" }, { "id": "884", "name": "润州区", "code": "321111" }, { "id": "885", "name": "丹徒区", "code": "321112" }, { "id": "886", "name": "丹阳市", "code": "321181" }, { "id": "887", "name": "扬中市", "code": "321182" }, { "id": "888", "name": "句容市", "code": "321183" }] }, { "id": "86", "name": "泰州市", "code": "321200", "children": [{ "id": "889", "name": "市辖区", "code": "321201" }, { "id": "890", "name": "海陵区", "code": "321202" }, { "id": "891", "name": "高港区", "code": "321203" }, { "id": "892", "name": "姜堰区", "code": "321204" }, { "id": "893", "name": "兴化市", "code": "321281" }, { "id": "894", "name": "靖江市", "code": "321282" }, { "id": "895", "name": "泰兴市", "code": "321283" }] }, { "id": "87", "name": "宿迁市", "code": "321300", "children": [{ "id": "896", "name": "市辖区", "code": "321301" }, { "id": "897", "name": "宿城区", "code": "321302" }, { "id": "898", "name": "宿豫区", "code": "321311" }, { "id": "899", "name": "沭阳县", "code": "321322" }, { "id": "900", "name": "泗阳县", "code": "321323" }, { "id": "901", "name": "泗洪县", "code": "321324" }] }] }, { "id": "11", "name": "浙江省", "code": "330000", "children": [{ "id": "88", "name": "杭州市", "code": "330100", "children": [{ "id": "902", "name": "市辖区", "code": "330101" }, { "id": "903", "name": "上城区", "code": "330102" }, { "id": "904", "name": "下城区", "code": "330103" }, { "id": "905", "name": "江干区", "code": "330104" }, { "id": "906", "name": "拱墅区", "code": "330105" }, { "id": "907", "name": "西湖区", "code": "330106" }, { "id": "908", "name": "滨江区", "code": "330108" }, { "id": "909", "name": "萧山区", "code": "330109" }, { "id": "910", "name": "余杭区", "code": "330110" }, { "id": "911", "name": "富阳区", "code": "330111" }, { "id": "912", "name": "桐庐县", "code": "330122" }, { "id": "913", "name": "淳安县", "code": "330127" }, { "id": "914", "name": "建德市", "code": "330182" }, { "id": "915", "name": "临安市", "code": "330185" }] }, { "id": "89", "name": "宁波市", "code": "330200", "children": [{ "id": "916", "name": "市辖区", "code": "330201" }, { "id": "917", "name": "海曙区", "code": "330203" }, { "id": "918", "name": "江东区", "code": "330204" }, { "id": "919", "name": "江北区", "code": "330205" }, { "id": "920", "name": "北仑区", "code": "330206" }, { "id": "921", "name": "镇海区", "code": "330211" }, { "id": "922", "name": "鄞州区", "code": "330212" }, { "id": "923", "name": "象山县", "code": "330225" }, { "id": "924", "name": "宁海县", "code": "330226" }, { "id": "925", "name": "余姚市", "code": "330281" }, { "id": "926", "name": "慈溪市", "code": "330282" }, { "id": "927", "name": "奉化市", "code": "330283" }] }, { "id": "90", "name": "温州市", "code": "330300", "children": [{ "id": "928", "name": "市辖区", "code": "330301" }, { "id": "929", "name": "鹿城区", "code": "330302" }, { "id": "930", "name": "龙湾区", "code": "330303" }, { "id": "931", "name": "瓯海区", "code": "330304" }, { "id": "932", "name": "洞头区", "code": "330305" }, { "id": "933", "name": "永嘉县", "code": "330324" }, { "id": "934", "name": "平阳县", "code": "330326" }, { "id": "935", "name": "苍南县", "code": "330327" }, { "id": "936", "name": "文成县", "code": "330328" }, { "id": "937", "name": "泰顺县", "code": "330329" }, { "id": "938", "name": "瑞安市", "code": "330381" }, { "id": "939", "name": "乐清市", "code": "330382" }] }, { "id": "91", "name": "嘉兴市", "code": "330400", "children": [{ "id": "940", "name": "市辖区", "code": "330401" }, { "id": "941", "name": "南湖区", "code": "330402" }, { "id": "942", "name": "秀洲区", "code": "330411" }, { "id": "943", "name": "嘉善县", "code": "330421" }, { "id": "944", "name": "海盐县", "code": "330424" }, { "id": "945", "name": "海宁市", "code": "330481" }, { "id": "946", "name": "平湖市", "code": "330482" }, { "id": "947", "name": "桐乡市", "code": "330483" }] }, { "id": "92", "name": "湖州市", "code": "330500", "children": [{ "id": "948", "name": "市辖区", "code": "330501" }, { "id": "949", "name": "吴兴区", "code": "330502" }, { "id": "950", "name": "南浔区", "code": "330503" }, { "id": "951", "name": "德清县", "code": "330521" }, { "id": "952", "name": "长兴县", "code": "330522" }, { "id": "953", "name": "安吉县", "code": "330523" }] }, { "id": "93", "name": "绍兴市", "code": "330600", "children": [{ "id": "954", "name": "市辖区", "code": "330601" }, { "id": "955", "name": "越城区", "code": "330602" }, { "id": "956", "name": "柯桥区", "code": "330603" }, { "id": "957", "name": "上虞区", "code": "330604" }, { "id": "958", "name": "新昌县", "code": "330624" }, { "id": "959", "name": "诸暨市", "code": "330681" }, { "id": "960", "name": "嵊州市", "code": "330683" }] }, { "id": "94", "name": "金华市", "code": "330700", "children": [{ "id": "961", "name": "市辖区", "code": "330701" }, { "id": "962", "name": "婺城区", "code": "330702" }, { "id": "963", "name": "金东区", "code": "330703" }, { "id": "964", "name": "武义县", "code": "330723" }, { "id": "965", "name": "浦江县", "code": "330726" }, { "id": "966", "name": "磐安县", "code": "330727" }, { "id": "967", "name": "兰溪市", "code": "330781" }, { "id": "968", "name": "义乌市", "code": "330782" }, { "id": "969", "name": "东阳市", "code": "330783" }, { "id": "970", "name": "永康市", "code": "330784" }] }, { "id": "95", "name": "衢州市", "code": "330800", "children": [{ "id": "971", "name": "市辖区", "code": "330801" }, { "id": "972", "name": "柯城区", "code": "330802" }, { "id": "973", "name": "衢江区", "code": "330803" }, { "id": "974", "name": "常山县", "code": "330822" }, { "id": "975", "name": "开化县", "code": "330824" }, { "id": "976", "name": "龙游县", "code": "330825" }, { "id": "977", "name": "江山市", "code": "330881" }] }, { "id": "96", "name": "舟山市", "code": "330900", "children": [{ "id": "978", "name": "市辖区", "code": "330901" }, { "id": "979", "name": "定海区", "code": "330902" }, { "id": "980", "name": "普陀区", "code": "330903" }, { "id": "981", "name": "岱山县", "code": "330921" }, { "id": "982", "name": "嵊泗县", "code": "330922" }] }, { "id": "97", "name": "台州市", "code": "331000", "children": [{ "id": "983", "name": "市辖区", "code": "331001" }, { "id": "984", "name": "椒江区", "code": "331002" }, { "id": "985", "name": "黄岩区", "code": "331003" }, { "id": "986", "name": "路桥区", "code": "331004" }, { "id": "987", "name": "玉环县", "code": "331021" }, { "id": "988", "name": "三门县", "code": "331022" }, { "id": "989", "name": "天台县", "code": "331023" }, { "id": "990", "name": "仙居县", "code": "331024" }, { "id": "991", "name": "温岭市", "code": "331081" }, { "id": "992", "name": "临海市", "code": "331082" }] }, { "id": "98", "name": "丽水市", "code": "331100", "children": [{ "id": "993", "name": "市辖区", "code": "331101" }, { "id": "994", "name": "莲都区", "code": "331102" }, { "id": "995", "name": "青田县", "code": "331121" }, { "id": "996", "name": "缙云县", "code": "331122" }, { "id": "997", "name": "遂昌县", "code": "331123" }, { "id": "998", "name": "松阳县", "code": "331124" }, { "id": "999", "name": "云和县", "code": "331125" }, { "id": "1000", "name": "庆元县", "code": "331126" }, { "id": "1001", "name": "景宁畲族自治县", "code": "331127" }, { "id": "1002", "name": "龙泉市", "code": "331181" }] }] }, { "id": "12", "name": "安徽省", "code": "340000", "children": [{ "id": "99", "name": "合肥市", "code": "340100", "children": [{ "id": "1003", "name": "市辖区", "code": "340101" }, { "id": "1004", "name": "瑶海区", "code": "340102" }, { "id": "1005", "name": "庐阳区", "code": "340103" }, { "id": "1006", "name": "蜀山区", "code": "340104" }, { "id": "1007", "name": "包河区", "code": "340111" }, { "id": "1008", "name": "长丰县", "code": "340121" }, { "id": "1009", "name": "肥东县", "code": "340122" }, { "id": "1010", "name": "肥西县", "code": "340123" }, { "id": "1011", "name": "庐江县", "code": "340124" }, { "id": "1012", "name": "巢湖市", "code": "340181" }] }, { "id": "100", "name": "芜湖市", "code": "340200", "children": [{ "id": "1013", "name": "市辖区", "code": "340201" }, { "id": "1014", "name": "镜湖区", "code": "340202" }, { "id": "1015", "name": "弋江区", "code": "340203" }, { "id": "1016", "name": "鸠江区", "code": "340207" }, { "id": "1017", "name": "三山区", "code": "340208" }, { "id": "1018", "name": "芜湖县", "code": "340221" }, { "id": "1019", "name": "繁昌县", "code": "340222" }, { "id": "1020", "name": "南陵县", "code": "340223" }, { "id": "1021", "name": "无为县", "code": "340225" }] }, { "id": "101", "name": "蚌埠市", "code": "340300", "children": [{ "id": "1022", "name": "市辖区", "code": "340301" }, { "id": "1023", "name": "龙子湖区", "code": "340302" }, { "id": "1024", "name": "蚌山区", "code": "340303" }, { "id": "1025", "name": "禹会区", "code": "340304" }, { "id": "1026", "name": "淮上区", "code": "340311" }, { "id": "1027", "name": "怀远县", "code": "340321" }, { "id": "1028", "name": "五河县", "code": "340322" }, { "id": "1029", "name": "固镇县", "code": "340323" }] }, { "id": "102", "name": "淮南市", "code": "340400", "children": [{ "id": "1030", "name": "市辖区", "code": "340401" }, { "id": "1031", "name": "大通区", "code": "340402" }, { "id": "1032", "name": "田家庵区", "code": "340403" }, { "id": "1033", "name": "谢家集区", "code": "340404" }, { "id": "1034", "name": "八公山区", "code": "340405" }, { "id": "1035", "name": "潘集区", "code": "340406" }, { "id": "1036", "name": "凤台县", "code": "340421" }, { "id": "1037", "name": "寿县", "code": "340422" }] }, { "id": "103", "name": "马鞍山市", "code": "340500", "children": [{ "id": "1038", "name": "市辖区", "code": "340501" }, { "id": "1039", "name": "花山区", "code": "340503" }, { "id": "1040", "name": "雨山区", "code": "340504" }, { "id": "1041", "name": "博望区", "code": "340506" }, { "id": "1042", "name": "当涂县", "code": "340521" }, { "id": "1043", "name": "含山县", "code": "340522" }, { "id": "1044", "name": "和县", "code": "340523" }] }, { "id": "104", "name": "淮北市", "code": "340600", "children": [{ "id": "1045", "name": "市辖区", "code": "340601" }, { "id": "1046", "name": "杜集区", "code": "340602" }, { "id": "1047", "name": "相山区", "code": "340603" }, { "id": "1048", "name": "烈山区", "code": "340604" }, { "id": "1049", "name": "濉溪县", "code": "340621" }] }, { "id": "105", "name": "铜陵市", "code": "340700", "children": [{ "id": "1050", "name": "市辖区", "code": "340701" }, { "id": "1051", "name": "铜官区", "code": "340705" }, { "id": "1052", "name": "义安区", "code": "340706" }, { "id": "1053", "name": "郊区", "code": "340711" }, { "id": "1054", "name": "枞阳县", "code": "340722" }] }, { "id": "106", "name": "安庆市", "code": "340800", "children": [{ "id": "1055", "name": "市辖区", "code": "340801" }, { "id": "1056", "name": "迎江区", "code": "340802" }, { "id": "1057", "name": "大观区", "code": "340803" }, { "id": "1058", "name": "宜秀区", "code": "340811" }, { "id": "1059", "name": "怀宁县", "code": "340822" }, { "id": "1060", "name": "潜山县", "code": "340824" }, { "id": "1061", "name": "太湖县", "code": "340825" }, { "id": "1062", "name": "宿松县", "code": "340826" }, { "id": "1063", "name": "望江县", "code": "340827" }, { "id": "1064", "name": "岳西县", "code": "340828" }, { "id": "1065", "name": "桐城市", "code": "340881" }] }, { "id": "107", "name": "黄山市", "code": "341000", "children": [{ "id": "1066", "name": "市辖区", "code": "341001" }, { "id": "1067", "name": "屯溪区", "code": "341002" }, { "id": "1068", "name": "黄山区", "code": "341003" }, { "id": "1069", "name": "徽州区", "code": "341004" }, { "id": "1070", "name": "歙县", "code": "341021" }, { "id": "1071", "name": "休宁县", "code": "341022" }, { "id": "1072", "name": "黟县", "code": "341023" }, { "id": "1073", "name": "祁门县", "code": "341024" }] }, { "id": "108", "name": "滁州市", "code": "341100", "children": [{ "id": "1074", "name": "市辖区", "code": "341101" }, { "id": "1075", "name": "琅琊区", "code": "341102" }, { "id": "1076", "name": "南谯区", "code": "341103" }, { "id": "1077", "name": "来安县", "code": "341122" }, { "id": "1078", "name": "全椒县", "code": "341124" }, { "id": "1079", "name": "定远县", "code": "341125" }, { "id": "1080", "name": "凤阳县", "code": "341126" }, { "id": "1081", "name": "天长市", "code": "341181" }, { "id": "1082", "name": "明光市", "code": "341182" }] }, { "id": "109", "name": "阜阳市", "code": "341200", "children": [{ "id": "1083", "name": "市辖区", "code": "341201" }, { "id": "1084", "name": "颍州区", "code": "341202" }, { "id": "1085", "name": "颍东区", "code": "341203" }, { "id": "1086", "name": "颍泉区", "code": "341204" }, { "id": "1087", "name": "临泉县", "code": "341221" }, { "id": "1088", "name": "太和县", "code": "341222" }, { "id": "1089", "name": "阜南县", "code": "341225" }, { "id": "1090", "name": "颍上县", "code": "341226" }, { "id": "1091", "name": "界首市", "code": "341282" }] }, { "id": "110", "name": "宿州市", "code": "341300", "children": [{ "id": "1092", "name": "市辖区", "code": "341301" }, { "id": "1093", "name": "埇桥区", "code": "341302" }, { "id": "1094", "name": "砀山县", "code": "341321" }, { "id": "1095", "name": "萧县", "code": "341322" }, { "id": "1096", "name": "灵璧县", "code": "341323" }, { "id": "1097", "name": "泗县", "code": "341324" }] }, { "id": "111", "name": "六安市", "code": "341500", "children": [{ "id": "1098", "name": "市辖区", "code": "341501" }, { "id": "1099", "name": "金安区", "code": "341502" }, { "id": "1100", "name": "裕安区", "code": "341503" }, { "id": "1101", "name": "叶集区", "code": "341504" }, { "id": "1102", "name": "霍邱县", "code": "341522" }, { "id": "1103", "name": "舒城县", "code": "341523" }, { "id": "1104", "name": "金寨县", "code": "341524" }, { "id": "1105", "name": "霍山县", "code": "341525" }] }, { "id": "112", "name": "亳州市", "code": "341600", "children": [{ "id": "1106", "name": "市辖区", "code": "341601" }, { "id": "1107", "name": "谯城区", "code": "341602" }, { "id": "1108", "name": "涡阳县", "code": "341621" }, { "id": "1109", "name": "蒙城县", "code": "341622" }, { "id": "1110", "name": "利辛县", "code": "341623" }] }, { "id": "113", "name": "池州市", "code": "341700", "children": [{ "id": "1111", "name": "市辖区", "code": "341701" }, { "id": "1112", "name": "贵池区", "code": "341702" }, { "id": "1113", "name": "东至县", "code": "341721" }, { "id": "1114", "name": "石台县", "code": "341722" }, { "id": "1115", "name": "青阳县", "code": "341723" }] }, { "id": "114", "name": "宣城市", "code": "341800", "children": [{ "id": "1116", "name": "市辖区", "code": "341801" }, { "id": "1117", "name": "宣州区", "code": "341802" }, { "id": "1118", "name": "郎溪县", "code": "341821" }, { "id": "1119", "name": "广德县", "code": "341822" }, { "id": "1120", "name": "泾县", "code": "341823" }, { "id": "1121", "name": "绩溪县", "code": "341824" }, { "id": "1122", "name": "旌德县", "code": "341825" }, { "id": "1123", "name": "宁国市", "code": "341881" }] }] }, { "id": "13", "name": "福建省", "code": "350000", "children": [{ "id": "115", "name": "福州市", "code": "350100", "children": [{ "id": "1124", "name": "市辖区", "code": "350101" }, { "id": "1125", "name": "鼓楼区", "code": "350102" }, { "id": "1126", "name": "台江区", "code": "350103" }, { "id": "1127", "name": "仓山区", "code": "350104" }, { "id": "1128", "name": "马尾区", "code": "350105" }, { "id": "1129", "name": "晋安区", "code": "350111" }, { "id": "1130", "name": "闽侯县", "code": "350121" }, { "id": "1131", "name": "连江县", "code": "350122" }, { "id": "1132", "name": "罗源县", "code": "350123" }, { "id": "1133", "name": "闽清县", "code": "350124" }, { "id": "1134", "name": "永泰县", "code": "350125" }, { "id": "1135", "name": "平潭县", "code": "350128" }, { "id": "1136", "name": "福清市", "code": "350181" }, { "id": "1137", "name": "长乐市", "code": "350182" }] }, { "id": "116", "name": "厦门市", "code": "350200", "children": [{ "id": "1138", "name": "市辖区", "code": "350201" }, { "id": "1139", "name": "思明区", "code": "350203" }, { "id": "1140", "name": "海沧区", "code": "350205" }, { "id": "1141", "name": "湖里区", "code": "350206" }, { "id": "1142", "name": "集美区", "code": "350211" }, { "id": "1143", "name": "同安区", "code": "350212" }, { "id": "1144", "name": "翔安区", "code": "350213" }] }, { "id": "117", "name": "莆田市", "code": "350300", "children": [{ "id": "1145", "name": "市辖区", "code": "350301" }, { "id": "1146", "name": "城厢区", "code": "350302" }, { "id": "1147", "name": "涵江区", "code": "350303" }, { "id": "1148", "name": "荔城区", "code": "350304" }, { "id": "1149", "name": "秀屿区", "code": "350305" }, { "id": "1150", "name": "仙游县", "code": "350322" }] }, { "id": "118", "name": "三明市", "code": "350400", "children": [{ "id": "1151", "name": "市辖区", "code": "350401" }, { "id": "1152", "name": "梅列区", "code": "350402" }, { "id": "1153", "name": "三元区", "code": "350403" }, { "id": "1154", "name": "明溪县", "code": "350421" }, { "id": "1155", "name": "清流县", "code": "350423" }, { "id": "1156", "name": "宁化县", "code": "350424" }, { "id": "1157", "name": "大田县", "code": "350425" }, { "id": "1158", "name": "尤溪县", "code": "350426" }, { "id": "1159", "name": "沙县", "code": "350427" }, { "id": "1160", "name": "将乐县", "code": "350428" }, { "id": "1161", "name": "泰宁县", "code": "350429" }, { "id": "1162", "name": "建宁县", "code": "350430" }, { "id": "1163", "name": "永安市", "code": "350481" }] }, { "id": "119", "name": "泉州市", "code": "350500", "children": [{ "id": "1164", "name": "市辖区", "code": "350501" }, { "id": "1165", "name": "鲤城区", "code": "350502" }, { "id": "1166", "name": "丰泽区", "code": "350503" }, { "id": "1167", "name": "洛江区", "code": "350504" }, { "id": "1168", "name": "泉港区", "code": "350505" }, { "id": "1169", "name": "惠安县", "code": "350521" }, { "id": "1170", "name": "安溪县", "code": "350524" }, { "id": "1171", "name": "永春县", "code": "350525" }, { "id": "1172", "name": "德化县", "code": "350526" }, { "id": "1173", "name": "金门县", "code": "350527" }, { "id": "1174", "name": "石狮市", "code": "350581" }, { "id": "1175", "name": "晋江市", "code": "350582" }, { "id": "1176", "name": "南安市", "code": "350583" }] }, { "id": "120", "name": "漳州市", "code": "350600", "children": [{ "id": "1177", "name": "市辖区", "code": "350601" }, { "id": "1178", "name": "芗城区", "code": "350602" }, { "id": "1179", "name": "龙文区", "code": "350603" }, { "id": "1180", "name": "云霄县", "code": "350622" }, { "id": "1181", "name": "漳浦县", "code": "350623" }, { "id": "1182", "name": "诏安县", "code": "350624" }, { "id": "1183", "name": "长泰县", "code": "350625" }, { "id": "1184", "name": "东山县", "code": "350626" }, { "id": "1185", "name": "南靖县", "code": "350627" }, { "id": "1186", "name": "平和县", "code": "350628" }, { "id": "1187", "name": "华安县", "code": "350629" }, { "id": "1188", "name": "龙海市", "code": "350681" }] }, { "id": "121", "name": "南平市", "code": "350700", "children": [{ "id": "1189", "name": "市辖区", "code": "350701" }, { "id": "1190", "name": "延平区", "code": "350702" }, { "id": "1191", "name": "建阳区", "code": "350703" }, { "id": "1192", "name": "顺昌县", "code": "350721" }, { "id": "1193", "name": "浦城县", "code": "350722" }, { "id": "1194", "name": "光泽县", "code": "350723" }, { "id": "1195", "name": "松溪县", "code": "350724" }, { "id": "1196", "name": "政和县", "code": "350725" }, { "id": "1197", "name": "邵武市", "code": "350781" }, { "id": "1198", "name": "武夷山市", "code": "350782" }, { "id": "1199", "name": "建瓯市", "code": "350783" }] }, { "id": "122", "name": "龙岩市", "code": "350800", "children": [{ "id": "1200", "name": "市辖区", "code": "350801" }, { "id": "1201", "name": "新罗区", "code": "350802" }, { "id": "1202", "name": "永定区", "code": "350803" }, { "id": "1203", "name": "长汀县", "code": "350821" }, { "id": "1204", "name": "上杭县", "code": "350823" }, { "id": "1205", "name": "武平县", "code": "350824" }, { "id": "1206", "name": "连城县", "code": "350825" }, { "id": "1207", "name": "漳平市", "code": "350881" }] }, { "id": "123", "name": "宁德市", "code": "350900", "children": [{ "id": "1208", "name": "市辖区", "code": "350901" }, { "id": "1209", "name": "蕉城区", "code": "350902" }, { "id": "1210", "name": "霞浦县", "code": "350921" }, { "id": "1211", "name": "古田县", "code": "350922" }, { "id": "1212", "name": "屏南县", "code": "350923" }, { "id": "1213", "name": "寿宁县", "code": "350924" }, { "id": "1214", "name": "周宁县", "code": "350925" }, { "id": "1215", "name": "柘荣县", "code": "350926" }, { "id": "1216", "name": "福安市", "code": "350981" }, { "id": "1217", "name": "福鼎市", "code": "350982" }] }] }, { "id": "14", "name": "江西省", "code": "360000", "children": [{ "id": "124", "name": "南昌市", "code": "360100", "children": [{ "id": "1218", "name": "市辖区", "code": "360101" }, { "id": "1219", "name": "东湖区", "code": "360102" }, { "id": "1220", "name": "西湖区", "code": "360103" }, { "id": "1221", "name": "青云谱区", "code": "360104" }, { "id": "1222", "name": "湾里区", "code": "360105" }, { "id": "1223", "name": "青山湖区", "code": "360111" }, { "id": "1224", "name": "新建区", "code": "360112" }, { "id": "1225", "name": "南昌县", "code": "360121" }, { "id": "1226", "name": "安义县", "code": "360123" }, { "id": "1227", "name": "进贤县", "code": "360124" }] }, { "id": "125", "name": "景德镇市", "code": "360200", "children": [{ "id": "1228", "name": "市辖区", "code": "360201" }, { "id": "1229", "name": "昌江区", "code": "360202" }, { "id": "1230", "name": "珠山区", "code": "360203" }, { "id": "1231", "name": "浮梁县", "code": "360222" }, { "id": "1232", "name": "乐平市", "code": "360281" }] }, { "id": "126", "name": "萍乡市", "code": "360300", "children": [{ "id": "1233", "name": "市辖区", "code": "360301" }, { "id": "1234", "name": "安源区", "code": "360302" }, { "id": "1235", "name": "湘东区", "code": "360313" }, { "id": "1236", "name": "莲花县", "code": "360321" }, { "id": "1237", "name": "上栗县", "code": "360322" }, { "id": "1238", "name": "芦溪县", "code": "360323" }] }, { "id": "127", "name": "九江市", "code": "360400", "children": [{ "id": "1239", "name": "市辖区", "code": "360401" }, { "id": "1240", "name": "濂溪区", "code": "360402" }, { "id": "1241", "name": "浔阳区", "code": "360403" }, { "id": "1242", "name": "九江县", "code": "360421" }, { "id": "1243", "name": "武宁县", "code": "360423" }, { "id": "1244", "name": "修水县", "code": "360424" }, { "id": "1245", "name": "永修县", "code": "360425" }, { "id": "1246", "name": "德安县", "code": "360426" }, { "id": "1247", "name": "都昌县", "code": "360428" }, { "id": "1248", "name": "湖口县", "code": "360429" }, { "id": "1249", "name": "彭泽县", "code": "360430" }, { "id": "1250", "name": "瑞昌市", "code": "360481" }, { "id": "1251", "name": "共青城市", "code": "360482" }, { "id": "1252", "name": "庐山市", "code": "360483" }] }, { "id": "128", "name": "新余市", "code": "360500", "children": [{ "id": "1253", "name": "市辖区", "code": "360501" }, { "id": "1254", "name": "渝水区", "code": "360502" }, { "id": "1255", "name": "分宜县", "code": "360521" }] }, { "id": "129", "name": "鹰潭市", "code": "360600", "children": [{ "id": "1256", "name": "市辖区", "code": "360601" }, { "id": "1257", "name": "月湖区", "code": "360602" }, { "id": "1258", "name": "余江县", "code": "360622" }, { "id": "1259", "name": "贵溪市", "code": "360681" }] }, { "id": "130", "name": "赣州市", "code": "360700", "children": [{ "id": "1260", "name": "市辖区", "code": "360701" }, { "id": "1261", "name": "章贡区", "code": "360702" }, { "id": "1262", "name": "南康区", "code": "360703" }, { "id": "1263", "name": "赣县", "code": "360721" }, { "id": "1264", "name": "信丰县", "code": "360722" }, { "id": "1265", "name": "大余县", "code": "360723" }, { "id": "1266", "name": "上犹县", "code": "360724" }, { "id": "1267", "name": "崇义县", "code": "360725" }, { "id": "1268", "name": "安远县", "code": "360726" }, { "id": "1269", "name": "龙南县", "code": "360727" }, { "id": "1270", "name": "定南县", "code": "360728" }, { "id": "1271", "name": "全南县", "code": "360729" }, { "id": "1272", "name": "宁都县", "code": "360730" }, { "id": "1273", "name": "于都县", "code": "360731" }, { "id": "1274", "name": "兴国县", "code": "360732" }, { "id": "1275", "name": "会昌县", "code": "360733" }, { "id": "1276", "name": "寻乌县", "code": "360734" }, { "id": "1277", "name": "石城县", "code": "360735" }, { "id": "1278", "name": "瑞金市", "code": "360781" }] }, { "id": "131", "name": "吉安市", "code": "360800", "children": [{ "id": "1279", "name": "市辖区", "code": "360801" }, { "id": "1280", "name": "吉州区", "code": "360802" }, { "id": "1281", "name": "青原区", "code": "360803" }, { "id": "1282", "name": "吉安县", "code": "360821" }, { "id": "1283", "name": "吉水县", "code": "360822" }, { "id": "1284", "name": "峡江县", "code": "360823" }, { "id": "1285", "name": "新干县", "code": "360824" }, { "id": "1286", "name": "永丰县", "code": "360825" }, { "id": "1287", "name": "泰和县", "code": "360826" }, { "id": "1288", "name": "遂川县", "code": "360827" }, { "id": "1289", "name": "万安县", "code": "360828" }, { "id": "1290", "name": "安福县", "code": "360829" }, { "id": "1291", "name": "永新县", "code": "360830" }, { "id": "1292", "name": "井冈山市", "code": "360881" }] }, { "id": "132", "name": "宜春市", "code": "360900", "children": [{ "id": "1293", "name": "市辖区", "code": "360901" }, { "id": "1294", "name": "袁州区", "code": "360902" }, { "id": "1295", "name": "奉新县", "code": "360921" }, { "id": "1296", "name": "万载县", "code": "360922" }, { "id": "1297", "name": "上高县", "code": "360923" }, { "id": "1298", "name": "宜丰县", "code": "360924" }, { "id": "1299", "name": "靖安县", "code": "360925" }, { "id": "1300", "name": "铜鼓县", "code": "360926" }, { "id": "1301", "name": "丰城市", "code": "360981" }, { "id": "1302", "name": "樟树市", "code": "360982" }, { "id": "1303", "name": "高安市", "code": "360983" }] }, { "id": "133", "name": "抚州市", "code": "361000", "children": [{ "id": "1304", "name": "市辖区", "code": "361001" }, { "id": "1305", "name": "临川区", "code": "361002" }, { "id": "1306", "name": "南城县", "code": "361021" }, { "id": "1307", "name": "黎川县", "code": "361022" }, { "id": "1308", "name": "南丰县", "code": "361023" }, { "id": "1309", "name": "崇仁县", "code": "361024" }, { "id": "1310", "name": "乐安县", "code": "361025" }, { "id": "1311", "name": "宜黄县", "code": "361026" }, { "id": "1312", "name": "金溪县", "code": "361027" }, { "id": "1313", "name": "资溪县", "code": "361028" }, { "id": "1314", "name": "东乡县", "code": "361029" }, { "id": "1315", "name": "广昌县", "code": "361030" }] }, { "id": "134", "name": "上饶市", "code": "361100", "children": [{ "id": "1316", "name": "市辖区", "code": "361101" }, { "id": "1317", "name": "信州区", "code": "361102" }, { "id": "1318", "name": "广丰区", "code": "361103" }, { "id": "1319", "name": "上饶县", "code": "361121" }, { "id": "1320", "name": "玉山县", "code": "361123" }, { "id": "1321", "name": "铅山县", "code": "361124" }, { "id": "1322", "name": "横峰县", "code": "361125" }, { "id": "1323", "name": "弋阳县", "code": "361126" }, { "id": "1324", "name": "余干县", "code": "361127" }, { "id": "1325", "name": "鄱阳县", "code": "361128" }, { "id": "1326", "name": "万年县", "code": "361129" }, { "id": "1327", "name": "婺源县", "code": "361130" }, { "id": "1328", "name": "德兴市", "code": "361181" }] }] }, { "id": "15", "name": "山东省", "code": "370000", "children": [{ "id": "135", "name": "济南市", "code": "370100", "children": [{ "id": "1329", "name": "市辖区", "code": "370101" }, { "id": "1330", "name": "历下区", "code": "370102" }, { "id": "1331", "name": "市中区", "code": "370103" }, { "id": "1332", "name": "槐荫区", "code": "370104" }, { "id": "1333", "name": "天桥区", "code": "370105" }, { "id": "1334", "name": "历城区", "code": "370112" }, { "id": "1335", "name": "长清区", "code": "370113" }, { "id": "1336", "name": "平阴县", "code": "370124" }, { "id": "1337", "name": "济阳县", "code": "370125" }, { "id": "1338", "name": "商河县", "code": "370126" }, { "id": "1339", "name": "章丘市", "code": "370181" }] }, { "id": "136", "name": "青岛市", "code": "370200", "children": [{ "id": "1340", "name": "市辖区", "code": "370201" }, { "id": "1341", "name": "市南区", "code": "370202" }, { "id": "1342", "name": "市北区", "code": "370203" }, { "id": "1343", "name": "黄岛区", "code": "370211" }, { "id": "1344", "name": "崂山区", "code": "370212" }, { "id": "1345", "name": "李沧区", "code": "370213" }, { "id": "1346", "name": "城阳区", "code": "370214" }, { "id": "1347", "name": "胶州市", "code": "370281" }, { "id": "1348", "name": "即墨市", "code": "370282" }, { "id": "1349", "name": "平度市", "code": "370283" }, { "id": "1350", "name": "莱西市", "code": "370285" }] }, { "id": "137", "name": "淄博市", "code": "370300", "children": [{ "id": "1351", "name": "市辖区", "code": "370301" }, { "id": "1352", "name": "淄川区", "code": "370302" }, { "id": "1353", "name": "张店区", "code": "370303" }, { "id": "1354", "name": "博山区", "code": "370304" }, { "id": "1355", "name": "临淄区", "code": "370305" }, { "id": "1356", "name": "周村区", "code": "370306" }, { "id": "1357", "name": "桓台县", "code": "370321" }, { "id": "1358", "name": "高青县", "code": "370322" }, { "id": "1359", "name": "沂源县", "code": "370323" }] }, { "id": "138", "name": "枣庄市", "code": "370400", "children": [{ "id": "1360", "name": "市辖区", "code": "370401" }, { "id": "1361", "name": "市中区", "code": "370402" }, { "id": "1362", "name": "薛城区", "code": "370403" }, { "id": "1363", "name": "峄城区", "code": "370404" }, { "id": "1364", "name": "台儿庄区", "code": "370405" }, { "id": "1365", "name": "山亭区", "code": "370406" }, { "id": "1366", "name": "滕州市", "code": "370481" }] }, { "id": "139", "name": "东营市", "code": "370500", "children": [{ "id": "1367", "name": "市辖区", "code": "370501" }, { "id": "1368", "name": "东营区", "code": "370502" }, { "id": "1369", "name": "河口区", "code": "370503" }, { "id": "1370", "name": "垦利区", "code": "370505" }, { "id": "1371", "name": "利津县", "code": "370522" }, { "id": "1372", "name": "广饶县", "code": "370523" }] }, { "id": "140", "name": "烟台市", "code": "370600", "children": [{ "id": "1373", "name": "市辖区", "code": "370601" }, { "id": "1374", "name": "芝罘区", "code": "370602" }, { "id": "1375", "name": "福山区", "code": "370611" }, { "id": "1376", "name": "牟平区", "code": "370612" }, { "id": "1377", "name": "莱山区", "code": "370613" }, { "id": "1378", "name": "长岛县", "code": "370634" }, { "id": "1379", "name": "龙口市", "code": "370681" }, { "id": "1380", "name": "莱阳市", "code": "370682" }, { "id": "1381", "name": "莱州市", "code": "370683" }, { "id": "1382", "name": "蓬莱市", "code": "370684" }, { "id": "1383", "name": "招远市", "code": "370685" }, { "id": "1384", "name": "栖霞市", "code": "370686" }, { "id": "1385", "name": "海阳市", "code": "370687" }] }, { "id": "141", "name": "潍坊市", "code": "370700", "children": [{ "id": "1386", "name": "市辖区", "code": "370701" }, { "id": "1387", "name": "潍城区", "code": "370702" }, { "id": "1388", "name": "寒亭区", "code": "370703" }, { "id": "1389", "name": "坊子区", "code": "370704" }, { "id": "1390", "name": "奎文区", "code": "370705" }, { "id": "1391", "name": "临朐县", "code": "370724" }, { "id": "1392", "name": "昌乐县", "code": "370725" }, { "id": "1393", "name": "青州市", "code": "370781" }, { "id": "1394", "name": "诸城市", "code": "370782" }, { "id": "1395", "name": "寿光市", "code": "370783" }, { "id": "1396", "name": "安丘市", "code": "370784" }, { "id": "1397", "name": "高密市", "code": "370785" }, { "id": "1398", "name": "昌邑市", "code": "370786" }] }, { "id": "142", "name": "济宁市", "code": "370800", "children": [{ "id": "1399", "name": "市辖区", "code": "370801" }, { "id": "1400", "name": "任城区", "code": "370811" }, { "id": "1401", "name": "兖州区", "code": "370812" }, { "id": "1402", "name": "微山县", "code": "370826" }, { "id": "1403", "name": "鱼台县", "code": "370827" }, { "id": "1404", "name": "金乡县", "code": "370828" }, { "id": "1405", "name": "嘉祥县", "code": "370829" }, { "id": "1406", "name": "汶上县", "code": "370830" }, { "id": "1407", "name": "泗水县", "code": "370831" }, { "id": "1408", "name": "梁山县", "code": "370832" }, { "id": "1409", "name": "曲阜市", "code": "370881" }, { "id": "1410", "name": "邹城市", "code": "370883" }] }, { "id": "143", "name": "泰安市", "code": "370900", "children": [{ "id": "1411", "name": "市辖区", "code": "370901" }, { "id": "1412", "name": "泰山区", "code": "370902" }, { "id": "1413", "name": "岱岳区", "code": "370911" }, { "id": "1414", "name": "宁阳县", "code": "370921" }, { "id": "1415", "name": "东平县", "code": "370923" }, { "id": "1416", "name": "新泰市", "code": "370982" }, { "id": "1417", "name": "肥城市", "code": "370983" }] }, { "id": "144", "name": "威海市", "code": "371000", "children": [{ "id": "1418", "name": "市辖区", "code": "371001" }, { "id": "1419", "name": "环翠区", "code": "371002" }, { "id": "1420", "name": "文登区", "code": "371003" }, { "id": "1421", "name": "荣成市", "code": "371082" }, { "id": "1422", "name": "乳山市", "code": "371083" }] }, { "id": "145", "name": "日照市", "code": "371100", "children": [{ "id": "1423", "name": "市辖区", "code": "371101" }, { "id": "1424", "name": "东港区", "code": "371102" }, { "id": "1425", "name": "岚山区", "code": "371103" }, { "id": "1426", "name": "五莲县", "code": "371121" }, { "id": "1427", "name": "莒县", "code": "371122" }] }, { "id": "146", "name": "莱芜市", "code": "371200", "children": [{ "id": "1428", "name": "市辖区", "code": "371201" }, { "id": "1429", "name": "莱城区", "code": "371202" }, { "id": "1430", "name": "钢城区", "code": "371203" }] }, { "id": "147", "name": "临沂市", "code": "371300", "children": [{ "id": "1431", "name": "市辖区", "code": "371301" }, { "id": "1432", "name": "兰山区", "code": "371302" }, { "id": "1433", "name": "罗庄区", "code": "371311" }, { "id": "1434", "name": "河东区", "code": "371312" }, { "id": "1435", "name": "沂南县", "code": "371321" }, { "id": "1436", "name": "郯城县", "code": "371322" }, { "id": "1437", "name": "沂水县", "code": "371323" }, { "id": "1438", "name": "兰陵县", "code": "371324" }, { "id": "1439", "name": "费县", "code": "371325" }, { "id": "1440", "name": "平邑县", "code": "371326" }, { "id": "1441", "name": "莒南县", "code": "371327" }, { "id": "1442", "name": "蒙阴县", "code": "371328" }, { "id": "1443", "name": "临沭县", "code": "371329" }] }, { "id": "148", "name": "德州市", "code": "371400", "children": [{ "id": "1444", "name": "市辖区", "code": "371401" }, { "id": "1445", "name": "德城区", "code": "371402" }, { "id": "1446", "name": "陵城区", "code": "371403" }, { "id": "1447", "name": "宁津县", "code": "371422" }, { "id": "1448", "name": "庆云县", "code": "371423" }, { "id": "1449", "name": "临邑县", "code": "371424" }, { "id": "1450", "name": "齐河县", "code": "371425" }, { "id": "1451", "name": "平原县", "code": "371426" }, { "id": "1452", "name": "夏津县", "code": "371427" }, { "id": "1453", "name": "武城县", "code": "371428" }, { "id": "1454", "name": "乐陵市", "code": "371481" }, { "id": "1455", "name": "禹城市", "code": "371482" }] }, { "id": "149", "name": "聊城市", "code": "371500", "children": [{ "id": "1456", "name": "市辖区", "code": "371501" }, { "id": "1457", "name": "东昌府区", "code": "371502" }, { "id": "1458", "name": "阳谷县", "code": "371521" }, { "id": "1459", "name": "莘县", "code": "371522" }, { "id": "1460", "name": "茌平县", "code": "371523" }, { "id": "1461", "name": "东阿县", "code": "371524" }, { "id": "1462", "name": "冠县", "code": "371525" }, { "id": "1463", "name": "高唐县", "code": "371526" }, { "id": "1464", "name": "临清市", "code": "371581" }] }, { "id": "150", "name": "滨州市", "code": "371600", "children": [{ "id": "1465", "name": "市辖区", "code": "371601" }, { "id": "1466", "name": "滨城区", "code": "371602" }, { "id": "1467", "name": "沾化区", "code": "371603" }, { "id": "1468", "name": "惠民县", "code": "371621" }, { "id": "1469", "name": "阳信县", "code": "371622" }, { "id": "1470", "name": "无棣县", "code": "371623" }, { "id": "1471", "name": "博兴县", "code": "371625" }, { "id": "1472", "name": "邹平县", "code": "371626" }] }, { "id": "151", "name": "菏泽市", "code": "371700", "children": [{ "id": "1473", "name": "市辖区", "code": "371701" }, { "id": "1474", "name": "牡丹区", "code": "371702" }, { "id": "1475", "name": "定陶区", "code": "371703" }, { "id": "1476", "name": "曹县", "code": "371721" }, { "id": "1477", "name": "单县", "code": "371722" }, { "id": "1478", "name": "成武县", "code": "371723" }, { "id": "1479", "name": "巨野县", "code": "371724" }, { "id": "1480", "name": "郓城县", "code": "371725" }, { "id": "1481", "name": "鄄城县", "code": "371726" }, { "id": "1482", "name": "东明县", "code": "371728" }] }] }, { "id": "16", "name": "河南省", "code": "410000", "children": [{ "id": "152", "name": "郑州市", "code": "410100", "children": [{ "id": "1483", "name": "市辖区", "code": "410101" }, { "id": "1484", "name": "中原区", "code": "410102" }, { "id": "1485", "name": "二七区", "code": "410103" }, { "id": "1486", "name": "管城回族区", "code": "410104" }, { "id": "1487", "name": "金水区", "code": "410105" }, { "id": "1488", "name": "上街区", "code": "410106" }, { "id": "1489", "name": "惠济区", "code": "410108" }, { "id": "1490", "name": "中牟县", "code": "410122" }, { "id": "1491", "name": "巩义市", "code": "410181" }, { "id": "1492", "name": "荥阳市", "code": "410182" }, { "id": "1493", "name": "新密市", "code": "410183" }, { "id": "1494", "name": "新郑市", "code": "410184" }, { "id": "1495", "name": "登封市", "code": "410185" }] }, { "id": "153", "name": "开封市", "code": "410200", "children": [{ "id": "1496", "name": "市辖区", "code": "410201" }, { "id": "1497", "name": "龙亭区", "code": "410202" }, { "id": "1498", "name": "顺河回族区", "code": "410203" }, { "id": "1499", "name": "鼓楼区", "code": "410204" }, { "id": "1500", "name": "禹王台区", "code": "410205" }, { "id": "1501", "name": "金明区", "code": "410211" }, { "id": "1502", "name": "祥符区", "code": "410212" }, { "id": "1503", "name": "杞县", "code": "410221" }, { "id": "1504", "name": "通许县", "code": "410222" }, { "id": "1505", "name": "尉氏县", "code": "410223" }, { "id": "1506", "name": "兰考县", "code": "410225" }] }, { "id": "154", "name": "洛阳市", "code": "410300", "children": [{ "id": "1507", "name": "市辖区", "code": "410301" }, { "id": "1508", "name": "老城区", "code": "410302" }, { "id": "1509", "name": "西工区", "code": "410303" }, { "id": "1510", "name": "瀍河回族区", "code": "410304" }, { "id": "1511", "name": "涧西区", "code": "410305" }, { "id": "1512", "name": "吉利区", "code": "410306" }, { "id": "1513", "name": "洛龙区", "code": "410311" }, { "id": "1514", "name": "孟津县", "code": "410322" }, { "id": "1515", "name": "新安县", "code": "410323" }, { "id": "1516", "name": "栾川县", "code": "410324" }, { "id": "1517", "name": "嵩县", "code": "410325" }, { "id": "1518", "name": "汝阳县", "code": "410326" }, { "id": "1519", "name": "宜阳县", "code": "410327" }, { "id": "1520", "name": "洛宁县", "code": "410328" }, { "id": "1521", "name": "伊川县", "code": "410329" }, { "id": "1522", "name": "偃师市", "code": "410381" }] }, { "id": "155", "name": "平顶山市", "code": "410400", "children": [{ "id": "1523", "name": "市辖区", "code": "410401" }, { "id": "1524", "name": "新华区", "code": "410402" }, { "id": "1525", "name": "卫东区", "code": "410403" }, { "id": "1526", "name": "石龙区", "code": "410404" }, { "id": "1527", "name": "湛河区", "code": "410411" }, { "id": "1528", "name": "宝丰县", "code": "410421" }, { "id": "1529", "name": "叶县", "code": "410422" }, { "id": "1530", "name": "鲁山县", "code": "410423" }, { "id": "1531", "name": "郏县", "code": "410425" }, { "id": "1532", "name": "舞钢市", "code": "410481" }, { "id": "1533", "name": "汝州市", "code": "410482" }] }, { "id": "156", "name": "安阳市", "code": "410500", "children": [{ "id": "1534", "name": "市辖区", "code": "410501" }, { "id": "1535", "name": "文峰区", "code": "410502" }, { "id": "1536", "name": "北关区", "code": "410503" }, { "id": "1537", "name": "殷都区", "code": "410505" }, { "id": "1538", "name": "龙安区", "code": "410506" }, { "id": "1539", "name": "安阳县", "code": "410522" }, { "id": "1540", "name": "汤阴县", "code": "410523" }, { "id": "1541", "name": "滑县", "code": "410526" }, { "id": "1542", "name": "内黄县", "code": "410527" }, { "id": "1543", "name": "林州市", "code": "410581" }] }, { "id": "157", "name": "鹤壁市", "code": "410600", "children": [{ "id": "1544", "name": "市辖区", "code": "410601" }, { "id": "1545", "name": "鹤山区", "code": "410602" }, { "id": "1546", "name": "山城区", "code": "410603" }, { "id": "1547", "name": "淇滨区", "code": "410611" }, { "id": "1548", "name": "浚县", "code": "410621" }, { "id": "1549", "name": "淇县", "code": "410622" }] }, { "id": "158", "name": "新乡市", "code": "410700", "children": [{ "id": "1550", "name": "市辖区", "code": "410701" }, { "id": "1551", "name": "红旗区", "code": "410702" }, { "id": "1552", "name": "卫滨区", "code": "410703" }, { "id": "1553", "name": "凤泉区", "code": "410704" }, { "id": "1554", "name": "牧野区", "code": "410711" }, { "id": "1555", "name": "新乡县", "code": "410721" }, { "id": "1556", "name": "获嘉县", "code": "410724" }, { "id": "1557", "name": "原阳县", "code": "410725" }, { "id": "1558", "name": "延津县", "code": "410726" }, { "id": "1559", "name": "封丘县", "code": "410727" }, { "id": "1560", "name": "长垣县", "code": "410728" }, { "id": "1561", "name": "卫辉市", "code": "410781" }, { "id": "1562", "name": "辉县市", "code": "410782" }] }, { "id": "159", "name": "焦作市", "code": "410800", "children": [{ "id": "1563", "name": "市辖区", "code": "410801" }, { "id": "1564", "name": "解放区", "code": "410802" }, { "id": "1565", "name": "中站区", "code": "410803" }, { "id": "1566", "name": "马村区", "code": "410804" }, { "id": "1567", "name": "山阳区", "code": "410811" }, { "id": "1568", "name": "修武县", "code": "410821" }, { "id": "1569", "name": "博爱县", "code": "410822" }, { "id": "1570", "name": "武陟县", "code": "410823" }, { "id": "1571", "name": "温县", "code": "410825" }, { "id": "1572", "name": "沁阳市", "code": "410882" }, { "id": "1573", "name": "孟州市", "code": "410883" }] }, { "id": "160", "name": "濮阳市", "code": "410900", "children": [{ "id": "1574", "name": "市辖区", "code": "410901" }, { "id": "1575", "name": "华龙区", "code": "410902" }, { "id": "1576", "name": "清丰县", "code": "410922" }, { "id": "1577", "name": "南乐县", "code": "410923" }, { "id": "1578", "name": "范县", "code": "410926" }, { "id": "1579", "name": "台前县", "code": "410927" }, { "id": "1580", "name": "濮阳县", "code": "410928" }] }, { "id": "161", "name": "许昌市", "code": "411000", "children": [{ "id": "1581", "name": "市辖区", "code": "411001" }, { "id": "1582", "name": "魏都区", "code": "411002" }, { "id": "1583", "name": "许昌县", "code": "411023" }, { "id": "1584", "name": "鄢陵县", "code": "411024" }, { "id": "1585", "name": "襄城县", "code": "411025" }, { "id": "1586", "name": "禹州市", "code": "411081" }, { "id": "1587", "name": "长葛市", "code": "411082" }] }, { "id": "162", "name": "漯河市", "code": "411100", "children": [{ "id": "1588", "name": "市辖区", "code": "411101" }, { "id": "1589", "name": "源汇区", "code": "411102" }, { "id": "1590", "name": "郾城区", "code": "411103" }, { "id": "1591", "name": "召陵区", "code": "411104" }, { "id": "1592", "name": "舞阳县", "code": "411121" }, { "id": "1593", "name": "临颍县", "code": "411122" }] }, { "id": "163", "name": "三门峡市", "code": "411200", "children": [{ "id": "1594", "name": "市辖区", "code": "411201" }, { "id": "1595", "name": "湖滨区", "code": "411202" }, { "id": "1596", "name": "陕州区", "code": "411203" }, { "id": "1597", "name": "渑池县", "code": "411221" }, { "id": "1598", "name": "卢氏县", "code": "411224" }, { "id": "1599", "name": "义马市", "code": "411281" }, { "id": "1600", "name": "灵宝市", "code": "411282" }] }, { "id": "164", "name": "南阳市", "code": "411300", "children": [{ "id": "1601", "name": "市辖区", "code": "411301" }, { "id": "1602", "name": "宛城区", "code": "411302" }, { "id": "1603", "name": "卧龙区", "code": "411303" }, { "id": "1604", "name": "南召县", "code": "411321" }, { "id": "1605", "name": "方城县", "code": "411322" }, { "id": "1606", "name": "西峡县", "code": "411323" }, { "id": "1607", "name": "镇平县", "code": "411324" }, { "id": "1608", "name": "内乡县", "code": "411325" }, { "id": "1609", "name": "淅川县", "code": "411326" }, { "id": "1610", "name": "社旗县", "code": "411327" }, { "id": "1611", "name": "唐河县", "code": "411328" }, { "id": "1612", "name": "新野县", "code": "411329" }, { "id": "1613", "name": "桐柏县", "code": "411330" }, { "id": "1614", "name": "邓州市", "code": "411381" }] }, { "id": "165", "name": "商丘市", "code": "411400", "children": [{ "id": "1615", "name": "市辖区", "code": "411401" }, { "id": "1616", "name": "梁园区", "code": "411402" }, { "id": "1617", "name": "睢阳区", "code": "411403" }, { "id": "1618", "name": "民权县", "code": "411421" }, { "id": "1619", "name": "睢县", "code": "411422" }, { "id": "1620", "name": "宁陵县", "code": "411423" }, { "id": "1621", "name": "柘城县", "code": "411424" }, { "id": "1622", "name": "虞城县", "code": "411425" }, { "id": "1623", "name": "夏邑县", "code": "411426" }, { "id": "1624", "name": "永城市", "code": "411481" }] }, { "id": "166", "name": "信阳市", "code": "411500", "children": [{ "id": "1625", "name": "市辖区", "code": "411501" }, { "id": "1626", "name": "浉河区", "code": "411502" }, { "id": "1627", "name": "平桥区", "code": "411503" }, { "id": "1628", "name": "罗山县", "code": "411521" }, { "id": "1629", "name": "光山县", "code": "411522" }, { "id": "1630", "name": "新县", "code": "411523" }, { "id": "1631", "name": "商城县", "code": "411524" }, { "id": "1632", "name": "固始县", "code": "411525" }, { "id": "1633", "name": "潢川县", "code": "411526" }, { "id": "1634", "name": "淮滨县", "code": "411527" }, { "id": "1635", "name": "息县", "code": "411528" }] }, { "id": "167", "name": "周口市", "code": "411600", "children": [{ "id": "1636", "name": "市辖区", "code": "411601" }, { "id": "1637", "name": "川汇区", "code": "411602" }, { "id": "1638", "name": "扶沟县", "code": "411621" }, { "id": "1639", "name": "西华县", "code": "411622" }, { "id": "1640", "name": "商水县", "code": "411623" }, { "id": "1641", "name": "沈丘县", "code": "411624" }, { "id": "1642", "name": "郸城县", "code": "411625" }, { "id": "1643", "name": "淮阳县", "code": "411626" }, { "id": "1644", "name": "太康县", "code": "411627" }, { "id": "1645", "name": "鹿邑县", "code": "411628" }, { "id": "1646", "name": "项城市", "code": "411681" }] }, { "id": "168", "name": "驻马店市", "code": "411700", "children": [{ "id": "1647", "name": "市辖区", "code": "411701" }, { "id": "1648", "name": "驿城区", "code": "411702" }, { "id": "1649", "name": "西平县", "code": "411721" }, { "id": "1650", "name": "上蔡县", "code": "411722" }, { "id": "1651", "name": "平舆县", "code": "411723" }, { "id": "1652", "name": "正阳县", "code": "411724" }, { "id": "1653", "name": "确山县", "code": "411725" }, { "id": "1654", "name": "泌阳县", "code": "411726" }, { "id": "1655", "name": "汝南县", "code": "411727" }, { "id": "1656", "name": "遂平县", "code": "411728" }, { "id": "1657", "name": "新蔡县", "code": "411729" }] }, { "id": "169", "name": "省直辖县级行政区划", "code": "419000", "children": [{ "id": "1658", "name": "济源市", "code": "419001" }] }] }, { "id": "17", "name": "湖北省", "code": "420000", "children": [{ "id": "170", "name": "武汉市", "code": "420100", "children": [{ "id": "1659", "name": "市辖区", "code": "420101" }, { "id": "1660", "name": "江岸区", "code": "420102" }, { "id": "1661", "name": "江汉区", "code": "420103" }, { "id": "1662", "name": "硚口区", "code": "420104" }, { "id": "1663", "name": "汉阳区", "code": "420105" }, { "id": "1664", "name": "武昌区", "code": "420106" }, { "id": "1665", "name": "青山区", "code": "420107" }, { "id": "1666", "name": "洪山区", "code": "420111" }, { "id": "1667", "name": "东西湖区", "code": "420112" }, { "id": "1668", "name": "汉南区", "code": "420113" }, { "id": "1669", "name": "蔡甸区", "code": "420114" }, { "id": "1670", "name": "江夏区", "code": "420115" }, { "id": "1671", "name": "黄陂区", "code": "420116" }, { "id": "1672", "name": "新洲区", "code": "420117" }] }, { "id": "171", "name": "黄石市", "code": "420200", "children": [{ "id": "1673", "name": "市辖区", "code": "420201" }, { "id": "1674", "name": "黄石港区", "code": "420202" }, { "id": "1675", "name": "西塞山区", "code": "420203" }, { "id": "1676", "name": "下陆区", "code": "420204" }, { "id": "1677", "name": "铁山区", "code": "420205" }, { "id": "1678", "name": "阳新县", "code": "420222" }, { "id": "1679", "name": "大冶市", "code": "420281" }] }, { "id": "172", "name": "十堰市", "code": "420300", "children": [{ "id": "1680", "name": "市辖区", "code": "420301" }, { "id": "1681", "name": "茅箭区", "code": "420302" }, { "id": "1682", "name": "张湾区", "code": "420303" }, { "id": "1683", "name": "郧阳区", "code": "420304" }, { "id": "1684", "name": "郧西县", "code": "420322" }, { "id": "1685", "name": "竹山县", "code": "420323" }, { "id": "1686", "name": "竹溪县", "code": "420324" }, { "id": "1687", "name": "房县", "code": "420325" }, { "id": "1688", "name": "丹江口市", "code": "420381" }] }, { "id": "173", "name": "宜昌市", "code": "420500", "children": [{ "id": "1689", "name": "市辖区", "code": "420501" }, { "id": "1690", "name": "西陵区", "code": "420502" }, { "id": "1691", "name": "伍家岗区", "code": "420503" }, { "id": "1692", "name": "点军区", "code": "420504" }, { "id": "1693", "name": "猇亭区", "code": "420505" }, { "id": "1694", "name": "夷陵区", "code": "420506" }, { "id": "1695", "name": "远安县", "code": "420525" }, { "id": "1696", "name": "兴山县", "code": "420526" }, { "id": "1697", "name": "秭归县", "code": "420527" }, { "id": "1698", "name": "长阳土家族自治县", "code": "420528" }, { "id": "1699", "name": "五峰土家族自治县", "code": "420529" }, { "id": "1700", "name": "宜都市", "code": "420581" }, { "id": "1701", "name": "当阳市", "code": "420582" }, { "id": "1702", "name": "枝江市", "code": "420583" }] }, { "id": "174", "name": "襄阳市", "code": "420600", "children": [{ "id": "1703", "name": "市辖区", "code": "420601" }, { "id": "1704", "name": "襄城区", "code": "420602" }, { "id": "1705", "name": "樊城区", "code": "420606" }, { "id": "1706", "name": "襄州区", "code": "420607" }, { "id": "1707", "name": "南漳县", "code": "420624" }, { "id": "1708", "name": "谷城县", "code": "420625" }, { "id": "1709", "name": "保康县", "code": "420626" }, { "id": "1710", "name": "老河口市", "code": "420682" }, { "id": "1711", "name": "枣阳市", "code": "420683" }, { "id": "1712", "name": "宜城市", "code": "420684" }] }, { "id": "175", "name": "鄂州市", "code": "420700", "children": [{ "id": "1713", "name": "市辖区", "code": "420701" }, { "id": "1714", "name": "梁子湖区", "code": "420702" }, { "id": "1715", "name": "华容区", "code": "420703" }, { "id": "1716", "name": "鄂城区", "code": "420704" }] }, { "id": "176", "name": "荆门市", "code": "420800", "children": [{ "id": "1717", "name": "市辖区", "code": "420801" }, { "id": "1718", "name": "东宝区", "code": "420802" }, { "id": "1719", "name": "掇刀区", "code": "420804" }, { "id": "1720", "name": "京山县", "code": "420821" }, { "id": "1721", "name": "沙洋县", "code": "420822" }, { "id": "1722", "name": "钟祥市", "code": "420881" }] }, { "id": "177", "name": "孝感市", "code": "420900", "children": [{ "id": "1723", "name": "市辖区", "code": "420901" }, { "id": "1724", "name": "孝南区", "code": "420902" }, { "id": "1725", "name": "孝昌县", "code": "420921" }, { "id": "1726", "name": "大悟县", "code": "420922" }, { "id": "1727", "name": "云梦县", "code": "420923" }, { "id": "1728", "name": "应城市", "code": "420981" }, { "id": "1729", "name": "安陆市", "code": "420982" }, { "id": "1730", "name": "汉川市", "code": "420984" }] }, { "id": "178", "name": "荆州市", "code": "421000", "children": [{ "id": "1731", "name": "市辖区", "code": "421001" }, { "id": "1732", "name": "沙市区", "code": "421002" }, { "id": "1733", "name": "荆州区", "code": "421003" }, { "id": "1734", "name": "公安县", "code": "421022" }, { "id": "1735", "name": "监利县", "code": "421023" }, { "id": "1736", "name": "江陵县", "code": "421024" }, { "id": "1737", "name": "石首市", "code": "421081" }, { "id": "1738", "name": "洪湖市", "code": "421083" }, { "id": "1739", "name": "松滋市", "code": "421087" }] }, { "id": "179", "name": "黄冈市", "code": "421100", "children": [{ "id": "1740", "name": "市辖区", "code": "421101" }, { "id": "1741", "name": "黄州区", "code": "421102" }, { "id": "1742", "name": "团风县", "code": "421121" }, { "id": "1743", "name": "红安县", "code": "421122" }, { "id": "1744", "name": "罗田县", "code": "421123" }, { "id": "1745", "name": "英山县", "code": "421124" }, { "id": "1746", "name": "浠水县", "code": "421125" }, { "id": "1747", "name": "蕲春县", "code": "421126" }, { "id": "1748", "name": "黄梅县", "code": "421127" }, { "id": "1749", "name": "麻城市", "code": "421181" }, { "id": "1750", "name": "武穴市", "code": "421182" }] }, { "id": "180", "name": "咸宁市", "code": "421200", "children": [{ "id": "1751", "name": "市辖区", "code": "421201" }, { "id": "1752", "name": "咸安区", "code": "421202" }, { "id": "1753", "name": "嘉鱼县", "code": "421221" }, { "id": "1754", "name": "通城县", "code": "421222" }, { "id": "1755", "name": "崇阳县", "code": "421223" }, { "id": "1756", "name": "通山县", "code": "421224" }, { "id": "1757", "name": "赤壁市", "code": "421281" }] }, { "id": "181", "name": "随州市", "code": "421300", "children": [{ "id": "1758", "name": "市辖区", "code": "421301" }, { "id": "1759", "name": "曾都区", "code": "421303" }, { "id": "1760", "name": "随县", "code": "421321" }, { "id": "1761", "name": "广水市", "code": "421381" }] }, { "id": "182", "name": "恩施土家族苗族自治州", "code": "422800", "children": [{ "id": "1762", "name": "恩施市", "code": "422801" }, { "id": "1763", "name": "利川市", "code": "422802" }, { "id": "1764", "name": "建始县", "code": "422822" }, { "id": "1765", "name": "巴东县", "code": "422823" }, { "id": "1766", "name": "宣恩县", "code": "422825" }, { "id": "1767", "name": "咸丰县", "code": "422826" }, { "id": "1768", "name": "来凤县", "code": "422827" }, { "id": "1769", "name": "鹤峰县", "code": "422828" }] }, { "id": "183", "name": "省直辖县级行政区划", "code": "429000", "children": [{ "id": "1770", "name": "仙桃市", "code": "429004" }, { "id": "1771", "name": "潜江市", "code": "429005" }, { "id": "1772", "name": "天门市", "code": "429006" }, { "id": "1773", "name": "神农架林区", "code": "429021" }] }] }, { "id": "18", "name": "湖南省", "code": "430000", "children": [{ "id": "184", "name": "长沙市", "code": "430100", "children": [{ "id": "1774", "name": "市辖区", "code": "430101" }, { "id": "1775", "name": "芙蓉区", "code": "430102" }, { "id": "1776", "name": "天心区", "code": "430103" }, { "id": "1777", "name": "岳麓区", "code": "430104" }, { "id": "1778", "name": "开福区", "code": "430105" }, { "id": "1779", "name": "雨花区", "code": "430111" }, { "id": "1780", "name": "望城区", "code": "430112" }, { "id": "1781", "name": "长沙县", "code": "430121" }, { "id": "1782", "name": "宁乡县", "code": "430124" }, { "id": "1783", "name": "浏阳市", "code": "430181" }] }, { "id": "185", "name": "株洲市", "code": "430200", "children": [{ "id": "1784", "name": "市辖区", "code": "430201" }, { "id": "1785", "name": "荷塘区", "code": "430202" }, { "id": "1786", "name": "芦淞区", "code": "430203" }, { "id": "1787", "name": "石峰区", "code": "430204" }, { "id": "1788", "name": "天元区", "code": "430211" }, { "id": "1789", "name": "株洲县", "code": "430221" }, { "id": "1790", "name": "攸县", "code": "430223" }, { "id": "1791", "name": "茶陵县", "code": "430224" }, { "id": "1792", "name": "炎陵县", "code": "430225" }, { "id": "1793", "name": "醴陵市", "code": "430281" }] }, { "id": "186", "name": "湘潭市", "code": "430300", "children": [{ "id": "1794", "name": "市辖区", "code": "430301" }, { "id": "1795", "name": "雨湖区", "code": "430302" }, { "id": "1796", "name": "岳塘区", "code": "430304" }, { "id": "1797", "name": "湘潭县", "code": "430321" }, { "id": "1798", "name": "湘乡市", "code": "430381" }, { "id": "1799", "name": "韶山市", "code": "430382" }] }, { "id": "187", "name": "衡阳市", "code": "430400", "children": [{ "id": "1800", "name": "市辖区", "code": "430401" }, { "id": "1801", "name": "珠晖区", "code": "430405" }, { "id": "1802", "name": "雁峰区", "code": "430406" }, { "id": "1803", "name": "石鼓区", "code": "430407" }, { "id": "1804", "name": "蒸湘区", "code": "430408" }, { "id": "1805", "name": "南岳区", "code": "430412" }, { "id": "1806", "name": "衡阳县", "code": "430421" }, { "id": "1807", "name": "衡南县", "code": "430422" }, { "id": "1808", "name": "衡山县", "code": "430423" }, { "id": "1809", "name": "衡东县", "code": "430424" }, { "id": "1810", "name": "祁东县", "code": "430426" }, { "id": "1811", "name": "耒阳市", "code": "430481" }, { "id": "1812", "name": "常宁市", "code": "430482" }] }, { "id": "188", "name": "邵阳市", "code": "430500", "children": [{ "id": "1813", "name": "市辖区", "code": "430501" }, { "id": "1814", "name": "双清区", "code": "430502" }, { "id": "1815", "name": "大祥区", "code": "430503" }, { "id": "1816", "name": "北塔区", "code": "430511" }, { "id": "1817", "name": "邵东县", "code": "430521" }, { "id": "1818", "name": "新邵县", "code": "430522" }, { "id": "1819", "name": "邵阳县", "code": "430523" }, { "id": "1820", "name": "隆回县", "code": "430524" }, { "id": "1821", "name": "洞口县", "code": "430525" }, { "id": "1822", "name": "绥宁县", "code": "430527" }, { "id": "1823", "name": "新宁县", "code": "430528" }, { "id": "1824", "name": "城步苗族自治县", "code": "430529" }, { "id": "1825", "name": "武冈市", "code": "430581" }] }, { "id": "189", "name": "岳阳市", "code": "430600", "children": [{ "id": "1826", "name": "市辖区", "code": "430601" }, { "id": "1827", "name": "岳阳楼区", "code": "430602" }, { "id": "1828", "name": "云溪区", "code": "430603" }, { "id": "1829", "name": "君山区", "code": "430611" }, { "id": "1830", "name": "岳阳县", "code": "430621" }, { "id": "1831", "name": "华容县", "code": "430623" }, { "id": "1832", "name": "湘阴县", "code": "430624" }, { "id": "1833", "name": "平江县", "code": "430626" }, { "id": "1834", "name": "汨罗市", "code": "430681" }, { "id": "1835", "name": "临湘市", "code": "430682" }] }, { "id": "190", "name": "常德市", "code": "430700", "children": [{ "id": "1836", "name": "市辖区", "code": "430701" }, { "id": "1837", "name": "武陵区", "code": "430702" }, { "id": "1838", "name": "鼎城区", "code": "430703" }, { "id": "1839", "name": "安乡县", "code": "430721" }, { "id": "1840", "name": "汉寿县", "code": "430722" }, { "id": "1841", "name": "澧县", "code": "430723" }, { "id": "1842", "name": "临澧县", "code": "430724" }, { "id": "1843", "name": "桃源县", "code": "430725" }, { "id": "1844", "name": "石门县", "code": "430726" }, { "id": "1845", "name": "津市市", "code": "430781" }] }, { "id": "191", "name": "张家界市", "code": "430800", "children": [{ "id": "1846", "name": "市辖区", "code": "430801" }, { "id": "1847", "name": "永定区", "code": "430802" }, { "id": "1848", "name": "武陵源区", "code": "430811" }, { "id": "1849", "name": "慈利县", "code": "430821" }, { "id": "1850", "name": "桑植县", "code": "430822" }] }, { "id": "192", "name": "益阳市", "code": "430900", "children": [{ "id": "1851", "name": "市辖区", "code": "430901" }, { "id": "1852", "name": "资阳区", "code": "430902" }, { "id": "1853", "name": "赫山区", "code": "430903" }, { "id": "1854", "name": "南县", "code": "430921" }, { "id": "1855", "name": "桃江县", "code": "430922" }, { "id": "1856", "name": "安化县", "code": "430923" }, { "id": "1857", "name": "沅江市", "code": "430981" }] }, { "id": "193", "name": "郴州市", "code": "431000", "children": [{ "id": "1858", "name": "市辖区", "code": "431001" }, { "id": "1859", "name": "北湖区", "code": "431002" }, { "id": "1860", "name": "苏仙区", "code": "431003" }, { "id": "1861", "name": "桂阳县", "code": "431021" }, { "id": "1862", "name": "宜章县", "code": "431022" }, { "id": "1863", "name": "永兴县", "code": "431023" }, { "id": "1864", "name": "嘉禾县", "code": "431024" }, { "id": "1865", "name": "临武县", "code": "431025" }, { "id": "1866", "name": "汝城县", "code": "431026" }, { "id": "1867", "name": "桂东县", "code": "431027" }, { "id": "1868", "name": "安仁县", "code": "431028" }, { "id": "1869", "name": "资兴市", "code": "431081" }] }, { "id": "194", "name": "永州市", "code": "431100", "children": [{ "id": "1870", "name": "市辖区", "code": "431101" }, { "id": "1871", "name": "零陵区", "code": "431102" }, { "id": "1872", "name": "冷水滩区", "code": "431103" }, { "id": "1873", "name": "祁阳县", "code": "431121" }, { "id": "1874", "name": "东安县", "code": "431122" }, { "id": "1875", "name": "双牌县", "code": "431123" }, { "id": "1876", "name": "道县", "code": "431124" }, { "id": "1877", "name": "江永县", "code": "431125" }, { "id": "1878", "name": "宁远县", "code": "431126" }, { "id": "1879", "name": "蓝山县", "code": "431127" }, { "id": "1880", "name": "新田县", "code": "431128" }, { "id": "1881", "name": "江华瑶族自治县", "code": "431129" }] }, { "id": "195", "name": "怀化市", "code": "431200", "children": [{ "id": "1882", "name": "市辖区", "code": "431201" }, { "id": "1883", "name": "鹤城区", "code": "431202" }, { "id": "1884", "name": "中方县", "code": "431221" }, { "id": "1885", "name": "沅陵县", "code": "431222" }, { "id": "1886", "name": "辰溪县", "code": "431223" }, { "id": "1887", "name": "溆浦县", "code": "431224" }, { "id": "1888", "name": "会同县", "code": "431225" }, { "id": "1889", "name": "麻阳苗族自治县", "code": "431226" }, { "id": "1890", "name": "新晃侗族自治县", "code": "431227" }, { "id": "1891", "name": "芷江侗族自治县", "code": "431228" }, { "id": "1892", "name": "靖州苗族侗族自治县", "code": "431229" }, { "id": "1893", "name": "通道侗族自治县", "code": "431230" }, { "id": "1894", "name": "洪江市", "code": "431281" }] }, { "id": "196", "name": "娄底市", "code": "431300", "children": [{ "id": "1895", "name": "市辖区", "code": "431301" }, { "id": "1896", "name": "娄星区", "code": "431302" }, { "id": "1897", "name": "双峰县", "code": "431321" }, { "id": "1898", "name": "新化县", "code": "431322" }, { "id": "1899", "name": "冷水江市", "code": "431381" }, { "id": "1900", "name": "涟源市", "code": "431382" }] }, { "id": "197", "name": "湘西土家族苗族自治州", "code": "433100", "children": [{ "id": "1901", "name": "吉首市", "code": "433101" }, { "id": "1902", "name": "泸溪县", "code": "433122" }, { "id": "1903", "name": "凤凰县", "code": "433123" }, { "id": "1904", "name": "花垣县", "code": "433124" }, { "id": "1905", "name": "保靖县", "code": "433125" }, { "id": "1906", "name": "古丈县", "code": "433126" }, { "id": "1907", "name": "永顺县", "code": "433127" }, { "id": "1908", "name": "龙山县", "code": "433130" }] }] }, { "id": "19", "name": "广东省", "code": "440000", "children": [{ "id": "198", "name": "广州市", "code": "440100", "children": [{ "id": "1909", "name": "市辖区", "code": "440101" }, { "id": "1910", "name": "荔湾区", "code": "440103" }, { "id": "1911", "name": "越秀区", "code": "440104" }, { "id": "1912", "name": "海珠区", "code": "440105" }, { "id": "1913", "name": "天河区", "code": "440106" }, { "id": "1914", "name": "白云区", "code": "440111" }, { "id": "1915", "name": "黄埔区", "code": "440112" }, { "id": "1916", "name": "番禺区", "code": "440113" }, { "id": "1917", "name": "花都区", "code": "440114" }, { "id": "1918", "name": "南沙区", "code": "440115" }, { "id": "1919", "name": "从化区", "code": "440117" }, { "id": "1920", "name": "增城区", "code": "440118" }] }, { "id": "199", "name": "韶关市", "code": "440200", "children": [{ "id": "1921", "name": "市辖区", "code": "440201" }, { "id": "1922", "name": "武江区", "code": "440203" }, { "id": "1923", "name": "浈江区", "code": "440204" }, { "id": "1924", "name": "曲江区", "code": "440205" }, { "id": "1925", "name": "始兴县", "code": "440222" }, { "id": "1926", "name": "仁化县", "code": "440224" }, { "id": "1927", "name": "翁源县", "code": "440229" }, { "id": "1928", "name": "乳源瑶族自治县", "code": "440232" }, { "id": "1929", "name": "新丰县", "code": "440233" }, { "id": "1930", "name": "乐昌市", "code": "440281" }, { "id": "1931", "name": "南雄市", "code": "440282" }] }, { "id": "200", "name": "深圳市", "code": "440300", "children": [{ "id": "1932", "name": "市辖区", "code": "440301" }, { "id": "1933", "name": "罗湖区", "code": "440303" }, { "id": "1934", "name": "福田区", "code": "440304" }, { "id": "1935", "name": "南山区", "code": "440305" }, { "id": "1936", "name": "宝安区", "code": "440306" }, { "id": "1937", "name": "龙岗区", "code": "440307" }, { "id": "1938", "name": "盐田区", "code": "440308" }] }, { "id": "201", "name": "珠海市", "code": "440400", "children": [{ "id": "1939", "name": "市辖区", "code": "440401" }, { "id": "1940", "name": "香洲区", "code": "440402" }, { "id": "1941", "name": "斗门区", "code": "440403" }, { "id": "1942", "name": "金湾区", "code": "440404" }] }, { "id": "202", "name": "汕头市", "code": "440500", "children": [{ "id": "1943", "name": "市辖区", "code": "440501" }, { "id": "1944", "name": "龙湖区", "code": "440507" }, { "id": "1945", "name": "金平区", "code": "440511" }, { "id": "1946", "name": "濠江区", "code": "440512" }, { "id": "1947", "name": "潮阳区", "code": "440513" }, { "id": "1948", "name": "潮南区", "code": "440514" }, { "id": "1949", "name": "澄海区", "code": "440515" }, { "id": "1950", "name": "南澳县", "code": "440523" }] }, { "id": "203", "name": "佛山市", "code": "440600", "children": [{ "id": "1951", "name": "市辖区", "code": "440601" }, { "id": "1952", "name": "禅城区", "code": "440604" }, { "id": "1953", "name": "南海区", "code": "440605" }, { "id": "1954", "name": "顺德区", "code": "440606" }, { "id": "1955", "name": "三水区", "code": "440607" }, { "id": "1956", "name": "高明区", "code": "440608" }] }, { "id": "204", "name": "江门市", "code": "440700", "children": [{ "id": "1957", "name": "市辖区", "code": "440701" }, { "id": "1958", "name": "蓬江区", "code": "440703" }, { "id": "1959", "name": "江海区", "code": "440704" }, { "id": "1960", "name": "新会区", "code": "440705" }, { "id": "1961", "name": "台山市", "code": "440781" }, { "id": "1962", "name": "开平市", "code": "440783" }, { "id": "1963", "name": "鹤山市", "code": "440784" }, { "id": "1964", "name": "恩平市", "code": "440785" }] }, { "id": "205", "name": "湛江市", "code": "440800", "children": [{ "id": "1965", "name": "市辖区", "code": "440801" }, { "id": "1966", "name": "赤坎区", "code": "440802" }, { "id": "1967", "name": "霞山区", "code": "440803" }, { "id": "1968", "name": "坡头区", "code": "440804" }, { "id": "1969", "name": "麻章区", "code": "440811" }, { "id": "1970", "name": "遂溪县", "code": "440823" }, { "id": "1971", "name": "徐闻县", "code": "440825" }, { "id": "1972", "name": "廉江市", "code": "440881" }, { "id": "1973", "name": "雷州市", "code": "440882" }, { "id": "1974", "name": "吴川市", "code": "440883" }] }, { "id": "206", "name": "茂名市", "code": "440900", "children": [{ "id": "1975", "name": "市辖区", "code": "440901" }, { "id": "1976", "name": "茂南区", "code": "440902" }, { "id": "1977", "name": "电白区", "code": "440904" }, { "id": "1978", "name": "高州市", "code": "440981" }, { "id": "1979", "name": "化州市", "code": "440982" }, { "id": "1980", "name": "信宜市", "code": "440983" }] }, { "id": "207", "name": "肇庆市", "code": "441200", "children": [{ "id": "1981", "name": "市辖区", "code": "441201" }, { "id": "1982", "name": "端州区", "code": "441202" }, { "id": "1983", "name": "鼎湖区", "code": "441203" }, { "id": "1984", "name": "高要区", "code": "441204" }, { "id": "1985", "name": "广宁县", "code": "441223" }, { "id": "1986", "name": "怀集县", "code": "441224" }, { "id": "1987", "name": "封开县", "code": "441225" }, { "id": "1988", "name": "德庆县", "code": "441226" }, { "id": "1989", "name": "四会市", "code": "441284" }] }, { "id": "208", "name": "惠州市", "code": "441300", "children": [{ "id": "1990", "name": "市辖区", "code": "441301" }, { "id": "1991", "name": "惠城区", "code": "441302" }, { "id": "1992", "name": "惠阳区", "code": "441303" }, { "id": "1993", "name": "博罗县", "code": "441322" }, { "id": "1994", "name": "惠东县", "code": "441323" }, { "id": "1995", "name": "龙门县", "code": "441324" }] }, { "id": "209", "name": "梅州市", "code": "441400", "children": [{ "id": "1996", "name": "市辖区", "code": "441401" }, { "id": "1997", "name": "梅江区", "code": "441402" }, { "id": "1998", "name": "梅县区", "code": "441403" }, { "id": "1999", "name": "大埔县", "code": "441422" }, { "id": "2000", "name": "丰顺县", "code": "441423" }, { "id": "2001", "name": "五华县", "code": "441424" }, { "id": "2002", "name": "平远县", "code": "441426" }, { "id": "2003", "name": "蕉岭县", "code": "441427" }, { "id": "2004", "name": "兴宁市", "code": "441481" }] }, { "id": "210", "name": "汕尾市", "code": "441500", "children": [{ "id": "2005", "name": "市辖区", "code": "441501" }, { "id": "2006", "name": "城区", "code": "441502" }, { "id": "2007", "name": "海丰县", "code": "441521" }, { "id": "2008", "name": "陆河县", "code": "441523" }, { "id": "2009", "name": "陆丰市", "code": "441581" }] }, { "id": "211", "name": "河源市", "code": "441600", "children": [{ "id": "2010", "name": "市辖区", "code": "441601" }, { "id": "2011", "name": "源城区", "code": "441602" }, { "id": "2012", "name": "紫金县", "code": "441621" }, { "id": "2013", "name": "龙川县", "code": "441622" }, { "id": "2014", "name": "连平县", "code": "441623" }, { "id": "2015", "name": "和平县", "code": "441624" }, { "id": "2016", "name": "东源县", "code": "441625" }] }, { "id": "212", "name": "阳江市", "code": "441700", "children": [{ "id": "2017", "name": "市辖区", "code": "441701" }, { "id": "2018", "name": "江城区", "code": "441702" }, { "id": "2019", "name": "阳东区", "code": "441704" }, { "id": "2020", "name": "阳西县", "code": "441721" }, { "id": "2021", "name": "阳春市", "code": "441781" }] }, { "id": "213", "name": "清远市", "code": "441800", "children": [{ "id": "2022", "name": "市辖区", "code": "441801" }, { "id": "2023", "name": "清城区", "code": "441802" }, { "id": "2024", "name": "清新区", "code": "441803" }, { "id": "2025", "name": "佛冈县", "code": "441821" }, { "id": "2026", "name": "阳山县", "code": "441823" }, { "id": "2027", "name": "连山壮族瑶族自治县", "code": "441825" }, { "id": "2028", "name": "连南瑶族自治县", "code": "441826" }, { "id": "2029", "name": "英德市", "code": "441881" }, { "id": "2030", "name": "连州市", "code": "441882" }] }, { "id": "214", "name": "东莞市", "code": "441900", "children": [{ "id": "9004", "name": "莞城街道", "code": "441900006" }, { "id": "9003", "name": "万江街道", "code": "441900005" }, { "id": "9002", "name": "南城街道", "code": "441900004" }, { "id": "9001", "name": "东城街道", "code": "441900003" }, { "id": "9005", "name": "石碣镇", "code": "441900101" }, { "id": "9006", "name": "石龙镇", "code": "441900102" }, { "id": "9007", "name": "茶山镇", "code": "441900103" }, { "id": "9008", "name": "石排镇", "code": "441900104" }, { "id": "9009", "name": "企石镇", "code": "441900105" }, { "id": "9010", "name": "横沥镇", "code": "441900106" }, { "id": "9011", "name": "桥头镇", "code": "441900107" }, { "id": "9012", "name": "谢岗镇", "code": "441900108" }, { "id": "9013", "name": "东坑镇", "code": "441900109" }, { "id": "9014", "name": "常平镇", "code": "441900110" }, { "id": "9015", "name": "寮步镇", "code": "441900111" }, { "id": "9016", "name": "樟木头镇", "code": "441900112" }, { "id": "9017", "name": "大朗镇", "code": "441900113" }, { "id": "9018", "name": "黄江镇", "code": "441900114" }, { "id": "9019", "name": "清溪镇", "code": "441900115" }, { "id": "9020", "name": "塘厦镇", "code": "441900116" }, { "id": "9021", "name": "凤岗镇", "code": "441900117" }, { "id": "9022", "name": "大岭山镇", "code": "441900118" }, { "id": "9023", "name": "长安镇", "code": "441900119" }, { "id": "9024", "name": "虎门镇", "code": "441900121" }, { "id": "9025", "name": "厚街镇", "code": "441900122" }, { "id": "9026", "name": "沙田镇", "code": "441900123" }, { "id": "9027", "name": "道滘镇", "code": "441900124" }, { "id": "9028", "name": "洪梅镇", "code": "441900125" }, { "id": "9029", "name": "麻涌镇", "code": "441900126" }, { "id": "9030", "name": "望牛墩镇", "code": "441900127" }, { "id": "9031", "name": "中堂镇", "code": "441900128" }, { "id": "9032", "name": "高埗镇", "code": "441900129" }, { "id": "9033", "name": "松山湖管委会", "code": "441900401" }, { "id": "9034", "name": "东莞港", "code": "441900402" }, { "id": "9035", "name": "东莞生态园", "code": "441900403" }] }, { "id": "215", "name": "中山市", "code": "442000", "children": [{ "id": "9101", "name": "石岐区街道", "code": "442000001" }, { "id": "9102", "name": "东区街道", "code": "442000002" }, { "id": "9103", "name": "火炬开发区街道", "code": "442000003" }, { "id": "9104", "name": "西区街道", "code": "442000004" }, { "id": "9105", "name": "南区街道", "code": "442000005" }, { "id": "9106", "name": "五桂山街道", "code": "442000006" }, { "id": "9107", "name": "小榄镇", "code": "442000100" }, { "id": "9108", "name": "黄圃镇", "code": "442000101" }, { "id": "9109", "name": "民众镇", "code": "442000102" }, { "id": "9110", "name": "东凤镇", "code": "442000103" }, { "id": "9111", "name": "东升镇", "code": "442000104" }, { "id": "9112", "name": "古镇镇", "code": "442000105" }, { "id": "9113", "name": "沙溪镇", "code": "442000106" }, { "id": "9114", "name": "坦洲镇", "code": "442000107" }, { "id": "9115", "name": "港口镇", "code": "442000108" }, { "id": "9116", "name": "三角镇", "code": "442000109" }, { "id": "9117", "name": "横栏镇", "code": "442000110" }, { "id": "9118", "name": "南头镇", "code": "442000111" }, { "id": "9119", "name": "阜沙镇", "code": "442000112" }, { "id": "9120", "name": "南朗镇", "code": "442000113" }, { "id": "9121", "name": "三乡镇", "code": "442000114" }, { "id": "9122", "name": "板芙镇", "code": "442000115" }, { "id": "9123", "name": "大涌镇", "code": "442000116" }, { "id": "9124", "name": "神湾镇", "code": "442000117" }] }, { "id": "216", "name": "潮州市", "code": "445100", "children": [{ "id": "2031", "name": "市辖区", "code": "445101" }, { "id": "2032", "name": "湘桥区", "code": "445102" }, { "id": "2033", "name": "潮安区", "code": "445103" }, { "id": "2034", "name": "饶平县", "code": "445122" }] }, { "id": "217", "name": "揭阳市", "code": "445200", "children": [{ "id": "2035", "name": "市辖区", "code": "445201" }, { "id": "2036", "name": "榕城区", "code": "445202" }, { "id": "2037", "name": "揭东区", "code": "445203" }, { "id": "2038", "name": "揭西县", "code": "445222" }, { "id": "2039", "name": "惠来县", "code": "445224" }, { "id": "2040", "name": "普宁市", "code": "445281" }] }, { "id": "218", "name": "云浮市", "code": "445300", "children": [{ "id": "2041", "name": "市辖区", "code": "445301" }, { "id": "2042", "name": "云城区", "code": "445302" }, { "id": "2043", "name": "云安区", "code": "445303" }, { "id": "2044", "name": "新兴县", "code": "445321" }, { "id": "2045", "name": "郁南县", "code": "445322" }, { "id": "2046", "name": "罗定市", "code": "445381" }] }] }, { "id": "20", "name": "广西壮族自治区", "code": "450000", "children": [{ "id": "219", "name": "南宁市", "code": "450100", "children": [{ "id": "2047", "name": "市辖区", "code": "450101" }, { "id": "2048", "name": "兴宁区", "code": "450102" }, { "id": "2049", "name": "青秀区", "code": "450103" }, { "id": "2050", "name": "江南区", "code": "450105" }, { "id": "2051", "name": "西乡塘区", "code": "450107" }, { "id": "2052", "name": "良庆区", "code": "450108" }, { "id": "2053", "name": "邕宁区", "code": "450109" }, { "id": "2054", "name": "武鸣区", "code": "450110" }, { "id": "2055", "name": "隆安县", "code": "450123" }, { "id": "2056", "name": "马山县", "code": "450124" }, { "id": "2057", "name": "上林县", "code": "450125" }, { "id": "2058", "name": "宾阳县", "code": "450126" }, { "id": "2059", "name": "横县", "code": "450127" }] }, { "id": "220", "name": "柳州市", "code": "450200", "children": [{ "id": "2060", "name": "市辖区", "code": "450201" }, { "id": "2061", "name": "城中区", "code": "450202" }, { "id": "2062", "name": "鱼峰区", "code": "450203" }, { "id": "2063", "name": "柳南区", "code": "450204" }, { "id": "2064", "name": "柳北区", "code": "450205" }, { "id": "2065", "name": "柳江区", "code": "450206" }, { "id": "2066", "name": "柳城县", "code": "450222" }, { "id": "2067", "name": "鹿寨县", "code": "450223" }, { "id": "2068", "name": "融安县", "code": "450224" }, { "id": "2069", "name": "融水苗族自治县", "code": "450225" }, { "id": "2070", "name": "三江侗族自治县", "code": "450226" }] }, { "id": "221", "name": "桂林市", "code": "450300", "children": [{ "id": "2071", "name": "市辖区", "code": "450301" }, { "id": "2072", "name": "秀峰区", "code": "450302" }, { "id": "2073", "name": "叠彩区", "code": "450303" }, { "id": "2074", "name": "象山区", "code": "450304" }, { "id": "2075", "name": "七星区", "code": "450305" }, { "id": "2076", "name": "雁山区", "code": "450311" }, { "id": "2077", "name": "临桂区", "code": "450312" }, { "id": "2078", "name": "阳朔县", "code": "450321" }, { "id": "2079", "name": "灵川县", "code": "450323" }, { "id": "2080", "name": "全州县", "code": "450324" }, { "id": "2081", "name": "兴安县", "code": "450325" }, { "id": "2082", "name": "永福县", "code": "450326" }, { "id": "2083", "name": "灌阳县", "code": "450327" }, { "id": "2084", "name": "龙胜各族自治县", "code": "450328" }, { "id": "2085", "name": "资源县", "code": "450329" }, { "id": "2086", "name": "平乐县", "code": "450330" }, { "id": "2087", "name": "荔浦县", "code": "450331" }, { "id": "2088", "name": "恭城瑶族自治县", "code": "450332" }] }, { "id": "222", "name": "梧州市", "code": "450400", "children": [{ "id": "2089", "name": "市辖区", "code": "450401" }, { "id": "2090", "name": "万秀区", "code": "450403" }, { "id": "2091", "name": "长洲区", "code": "450405" }, { "id": "2092", "name": "龙圩区", "code": "450406" }, { "id": "2093", "name": "苍梧县", "code": "450421" }, { "id": "2094", "name": "藤县", "code": "450422" }, { "id": "2095", "name": "蒙山县", "code": "450423" }, { "id": "2096", "name": "岑溪市", "code": "450481" }] }, { "id": "223", "name": "北海市", "code": "450500", "children": [{ "id": "2097", "name": "市辖区", "code": "450501" }, { "id": "2098", "name": "海城区", "code": "450502" }, { "id": "2099", "name": "银海区", "code": "450503" }, { "id": "2100", "name": "铁山港区", "code": "450512" }, { "id": "2101", "name": "合浦县", "code": "450521" }] }, { "id": "224", "name": "防城港市", "code": "450600", "children": [{ "id": "2102", "name": "市辖区", "code": "450601" }, { "id": "2103", "name": "港口区", "code": "450602" }, { "id": "2104", "name": "防城区", "code": "450603" }, { "id": "2105", "name": "上思县", "code": "450621" }, { "id": "2106", "name": "东兴市", "code": "450681" }] }, { "id": "225", "name": "钦州市", "code": "450700", "children": [{ "id": "2107", "name": "市辖区", "code": "450701" }, { "id": "2108", "name": "钦南区", "code": "450702" }, { "id": "2109", "name": "钦北区", "code": "450703" }, { "id": "2110", "name": "灵山县", "code": "450721" }, { "id": "2111", "name": "浦北县", "code": "450722" }] }, { "id": "226", "name": "贵港市", "code": "450800", "children": [{ "id": "2112", "name": "市辖区", "code": "450801" }, { "id": "2113", "name": "港北区", "code": "450802" }, { "id": "2114", "name": "港南区", "code": "450803" }, { "id": "2115", "name": "覃塘区", "code": "450804" }, { "id": "2116", "name": "平南县", "code": "450821" }, { "id": "2117", "name": "桂平市", "code": "450881" }] }, { "id": "227", "name": "玉林市", "code": "450900", "children": [{ "id": "2118", "name": "市辖区", "code": "450901" }, { "id": "2119", "name": "玉州区", "code": "450902" }, { "id": "2120", "name": "福绵区", "code": "450903" }, { "id": "2121", "name": "容县", "code": "450921" }, { "id": "2122", "name": "陆川县", "code": "450922" }, { "id": "2123", "name": "博白县", "code": "450923" }, { "id": "2124", "name": "兴业县", "code": "450924" }, { "id": "2125", "name": "北流市", "code": "450981" }] }, { "id": "228", "name": "百色市", "code": "451000", "children": [{ "id": "2126", "name": "市辖区", "code": "451001" }, { "id": "2127", "name": "右江区", "code": "451002" }, { "id": "2128", "name": "田阳县", "code": "451021" }, { "id": "2129", "name": "田东县", "code": "451022" }, { "id": "2130", "name": "平果县", "code": "451023" }, { "id": "2131", "name": "德保县", "code": "451024" }, { "id": "2132", "name": "那坡县", "code": "451026" }, { "id": "2133", "name": "凌云县", "code": "451027" }, { "id": "2134", "name": "乐业县", "code": "451028" }, { "id": "2135", "name": "田林县", "code": "451029" }, { "id": "2136", "name": "西林县", "code": "451030" }, { "id": "2137", "name": "隆林各族自治县", "code": "451031" }, { "id": "2138", "name": "靖西市", "code": "451081" }] }, { "id": "229", "name": "贺州市", "code": "451100", "children": [{ "id": "2139", "name": "市辖区", "code": "451101" }, { "id": "2140", "name": "八步区", "code": "451102" }, { "id": "2141", "name": "平桂区", "code": "451103" }, { "id": "2142", "name": "昭平县", "code": "451121" }, { "id": "2143", "name": "钟山县", "code": "451122" }, { "id": "2144", "name": "富川瑶族自治县", "code": "451123" }] }, { "id": "230", "name": "河池市", "code": "451200", "children": [{ "id": "2145", "name": "市辖区", "code": "451201" }, { "id": "2146", "name": "金城江区", "code": "451202" }, { "id": "2147", "name": "南丹县", "code": "451221" }, { "id": "2148", "name": "天峨县", "code": "451222" }, { "id": "2149", "name": "凤山县", "code": "451223" }, { "id": "2150", "name": "东兰县", "code": "451224" }, { "id": "2151", "name": "罗城仫佬族自治县", "code": "451225" }, { "id": "2152", "name": "环江毛南族自治县", "code": "451226" }, { "id": "2153", "name": "巴马瑶族自治县", "code": "451227" }, { "id": "2154", "name": "都安瑶族自治县", "code": "451228" }, { "id": "2155", "name": "大化瑶族自治县", "code": "451229" }, { "id": "2156", "name": "宜州市", "code": "451281" }] }, { "id": "231", "name": "来宾市", "code": "451300", "children": [{ "id": "2157", "name": "市辖区", "code": "451301" }, { "id": "2158", "name": "兴宾区", "code": "451302" }, { "id": "2159", "name": "忻城县", "code": "451321" }, { "id": "2160", "name": "象州县", "code": "451322" }, { "id": "2161", "name": "武宣县", "code": "451323" }, { "id": "2162", "name": "金秀瑶族自治县", "code": "451324" }, { "id": "2163", "name": "合山市", "code": "451381" }] }, { "id": "232", "name": "崇左市", "code": "451400", "children": [{ "id": "2164", "name": "市辖区", "code": "451401" }, { "id": "2165", "name": "江州区", "code": "451402" }, { "id": "2166", "name": "扶绥县", "code": "451421" }, { "id": "2167", "name": "宁明县", "code": "451422" }, { "id": "2168", "name": "龙州县", "code": "451423" }, { "id": "2169", "name": "大新县", "code": "451424" }, { "id": "2170", "name": "天等县", "code": "451425" }, { "id": "2171", "name": "凭祥市", "code": "451481" }] }] }, { "id": "21", "name": "海南省", "code": "460000", "children": [{ "id": "233", "name": "海口市", "code": "460100", "children": [{ "id": "2172", "name": "市辖区", "code": "460101" }, { "id": "2173", "name": "秀英区", "code": "460105" }, { "id": "2174", "name": "龙华区", "code": "460106" }, { "id": "2175", "name": "琼山区", "code": "460107" }, { "id": "2176", "name": "美兰区", "code": "460108" }] }, { "id": "234", "name": "三亚市", "code": "460200", "children": [{ "id": "2177", "name": "市辖区", "code": "460201" }, { "id": "2178", "name": "海棠区", "code": "460202" }, { "id": "2179", "name": "吉阳区", "code": "460203" }, { "id": "2180", "name": "天涯区", "code": "460204" }, { "id": "2181", "name": "崖州区", "code": "460205" }] }, { "id": "235", "name": "三沙市", "code": "460300", "children": [{ "id": "9201", "name": "西沙群岛", "code": "460321" }, { "id": "9202", "name": "南沙群岛", "code": "460322" }, { "id": "9203", "name": "中沙群岛的岛礁及其海域", "code": "460323" }] }, { "id": "236", "name": "儋州市", "code": "460400", "children": [{ "id": "9301", "name": "那大镇", "code": "460400100" }, { "id": "9302", "name": "和庆镇", "code": "460400101" }, { "id": "9303", "name": "南丰镇", "code": "460400102" }, { "id": "9304", "name": "大成镇", "code": "460400103" }, { "id": "9305", "name": "雅星镇", "code": "460400104" }, { "id": "9306", "name": "兰洋镇", "code": "460400105" }, { "id": "9307", "name": "光村镇", "code": "460400106" }, { "id": "9308", "name": "木棠镇", "code": "460400107" }, { "id": "9309", "name": "海头镇", "code": "460400108" }, { "id": "9310", "name": "峨蔓镇", "code": "460400109" }, { "id": "9311", "name": "王五镇", "code": "460400111" }, { "id": "9312", "name": "白马井镇", "code": "460400112" }, { "id": "9313", "name": "中和镇", "code": "460400113" }, { "id": "9314", "name": "排浦镇", "code": "460400114" }, { "id": "9315", "name": "东成镇", "code": "460400115" }, { "id": "9316", "name": "新州镇", "code": "460400116" }, { "id": "9317", "name": "洋浦经济开发区", "code": "460400499" }, { "id": "9318", "name": "华南热作学院", "code": "460400500" }] }, { "id": "237", "name": "省直辖县级行政区划", "code": "469000", "children": [{ "id": "2182", "name": "五指山市", "code": "469001" }, { "id": "2183", "name": "琼海市", "code": "469002" }, { "id": "2184", "name": "文昌市", "code": "469005" }, { "id": "2185", "name": "万宁市", "code": "469006" }, { "id": "2186", "name": "东方市", "code": "469007" }, { "id": "2187", "name": "定安县", "code": "469021" }, { "id": "2188", "name": "屯昌县", "code": "469022" }, { "id": "2189", "name": "澄迈县", "code": "469023" }, { "id": "2190", "name": "临高县", "code": "469024" }, { "id": "2191", "name": "白沙黎族自治县", "code": "469025" }, { "id": "2192", "name": "昌江黎族自治县", "code": "469026" }, { "id": "2193", "name": "乐东黎族自治县", "code": "469027" }, { "id": "2194", "name": "陵水黎族自治县", "code": "469028" }, { "id": "2195", "name": "保亭黎族苗族自治县", "code": "469029" }, { "id": "2196", "name": "琼中黎族苗族自治县", "code": "469030" }] }] }, { "id": "22", "name": "重庆市", "code": "500000", "children": [{ "id": "238", "name": "市辖区", "code": "500100", "children": [{ "id": "2197", "name": "万州区", "code": "500101" }, { "id": "2198", "name": "涪陵区", "code": "500102" }, { "id": "2199", "name": "渝中区", "code": "500103" }, { "id": "2200", "name": "大渡口区", "code": "500104" }, { "id": "2201", "name": "江北区", "code": "500105" }, { "id": "2202", "name": "沙坪坝区", "code": "500106" }, { "id": "2203", "name": "九龙坡区", "code": "500107" }, { "id": "2204", "name": "南岸区", "code": "500108" }, { "id": "2205", "name": "北碚区", "code": "500109" }, { "id": "2206", "name": "綦江区", "code": "500110" }, { "id": "2207", "name": "大足区", "code": "500111" }, { "id": "2208", "name": "渝北区", "code": "500112" }, { "id": "2209", "name": "巴南区", "code": "500113" }, { "id": "2210", "name": "黔江区", "code": "500114" }, { "id": "2211", "name": "长寿区", "code": "500115" }, { "id": "2212", "name": "江津区", "code": "500116" }, { "id": "2213", "name": "合川区", "code": "500117" }, { "id": "2214", "name": "永川区", "code": "500118" }, { "id": "2215", "name": "南川区", "code": "500119" }, { "id": "2216", "name": "璧山区", "code": "500120" }, { "id": "2217", "name": "铜梁区", "code": "500151" }, { "id": "2218", "name": "潼南区", "code": "500152" }, { "id": "2219", "name": "荣昌区", "code": "500153" }, { "id": "2220", "name": "开州区", "code": "500154" }] }, { "id": "239", "name": "县", "code": "500200", "children": [{ "id": "2221", "name": "梁平县", "code": "500228" }, { "id": "2222", "name": "城口县", "code": "500229" }, { "id": "2223", "name": "丰都县", "code": "500230" }, { "id": "2224", "name": "垫江县", "code": "500231" }, { "id": "2225", "name": "武隆县", "code": "500232" }, { "id": "2226", "name": "忠县", "code": "500233" }, { "id": "2227", "name": "云阳县", "code": "500235" }, { "id": "2228", "name": "奉节县", "code": "500236" }, { "id": "2229", "name": "巫山县", "code": "500237" }, { "id": "2230", "name": "巫溪县", "code": "500238" }, { "id": "2231", "name": "石柱土家族自治县", "code": "500240" }, { "id": "2232", "name": "秀山土家族苗族自治县", "code": "500241" }, { "id": "2233", "name": "酉阳土家族苗族自治县", "code": "500242" }, { "id": "2234", "name": "彭水苗族土家族自治县", "code": "500243" }] }] }, { "id": "23", "name": "四川省", "code": "510000", "children": [{ "id": "240", "name": "成都市", "code": "510100", "children": [{ "id": "2235", "name": "市辖区", "code": "510101" }, { "id": "2236", "name": "锦江区", "code": "510104" }, { "id": "2237", "name": "青羊区", "code": "510105" }, { "id": "2238", "name": "金牛区", "code": "510106" }, { "id": "2239", "name": "武侯区", "code": "510107" }, { "id": "2240", "name": "成华区", "code": "510108" }, { "id": "2241", "name": "龙泉驿区", "code": "510112" }, { "id": "2242", "name": "青白江区", "code": "510113" }, { "id": "2243", "name": "新都区", "code": "510114" }, { "id": "2244", "name": "温江区", "code": "510115" }, { "id": "2245", "name": "双流区", "code": "510116" }, { "id": "2246", "name": "金堂县", "code": "510121" }, { "id": "2247", "name": "郫县", "code": "510124" }, { "id": "2248", "name": "大邑县", "code": "510129" }, { "id": "2249", "name": "蒲江县", "code": "510131" }, { "id": "2250", "name": "新津县", "code": "510132" }, { "id": "2251", "name": "都江堰市", "code": "510181" }, { "id": "2252", "name": "彭州市", "code": "510182" }, { "id": "2253", "name": "邛崃市", "code": "510183" }, { "id": "2254", "name": "崇州市", "code": "510184" }, { "id": "2255", "name": "简阳市", "code": "510185" }] }, { "id": "241", "name": "自贡市", "code": "510300", "children": [{ "id": "2256", "name": "市辖区", "code": "510301" }, { "id": "2257", "name": "自流井区", "code": "510302" }, { "id": "2258", "name": "贡井区", "code": "510303" }, { "id": "2259", "name": "大安区", "code": "510304" }, { "id": "2260", "name": "沿滩区", "code": "510311" }, { "id": "2261", "name": "荣县", "code": "510321" }, { "id": "2262", "name": "富顺县", "code": "510322" }] }, { "id": "242", "name": "攀枝花市", "code": "510400", "children": [{ "id": "2263", "name": "市辖区", "code": "510401" }, { "id": "2264", "name": "东区", "code": "510402" }, { "id": "2265", "name": "西区", "code": "510403" }, { "id": "2266", "name": "仁和区", "code": "510411" }, { "id": "2267", "name": "米易县", "code": "510421" }, { "id": "2268", "name": "盐边县", "code": "510422" }] }, { "id": "243", "name": "泸州市", "code": "510500", "children": [{ "id": "2269", "name": "市辖区", "code": "510501" }, { "id": "2270", "name": "江阳区", "code": "510502" }, { "id": "2271", "name": "纳溪区", "code": "510503" }, { "id": "2272", "name": "龙马潭区", "code": "510504" }, { "id": "2273", "name": "泸县", "code": "510521" }, { "id": "2274", "name": "合江县", "code": "510522" }, { "id": "2275", "name": "叙永县", "code": "510524" }, { "id": "2276", "name": "古蔺县", "code": "510525" }] }, { "id": "244", "name": "德阳市", "code": "510600", "children": [{ "id": "2277", "name": "市辖区", "code": "510601" }, { "id": "2278", "name": "旌阳区", "code": "510603" }, { "id": "2279", "name": "中江县", "code": "510623" }, { "id": "2280", "name": "罗江县", "code": "510626" }, { "id": "2281", "name": "广汉市", "code": "510681" }, { "id": "2282", "name": "什邡市", "code": "510682" }, { "id": "2283", "name": "绵竹市", "code": "510683" }] }, { "id": "245", "name": "绵阳市", "code": "510700", "children": [{ "id": "2284", "name": "市辖区", "code": "510701" }, { "id": "2285", "name": "涪城区", "code": "510703" }, { "id": "2286", "name": "游仙区", "code": "510704" }, { "id": "2287", "name": "安州区", "code": "510705" }, { "id": "2288", "name": "三台县", "code": "510722" }, { "id": "2289", "name": "盐亭县", "code": "510723" }, { "id": "2290", "name": "梓潼县", "code": "510725" }, { "id": "2291", "name": "北川羌族自治县", "code": "510726" }, { "id": "2292", "name": "平武县", "code": "510727" }, { "id": "2293", "name": "江油市", "code": "510781" }] }, { "id": "246", "name": "广元市", "code": "510800", "children": [{ "id": "2294", "name": "市辖区", "code": "510801" }, { "id": "2295", "name": "利州区", "code": "510802" }, { "id": "2296", "name": "昭化区", "code": "510811" }, { "id": "2297", "name": "朝天区", "code": "510812" }, { "id": "2298", "name": "旺苍县", "code": "510821" }, { "id": "2299", "name": "青川县", "code": "510822" }, { "id": "2300", "name": "剑阁县", "code": "510823" }, { "id": "2301", "name": "苍溪县", "code": "510824" }] }, { "id": "247", "name": "遂宁市", "code": "510900", "children": [{ "id": "2302", "name": "市辖区", "code": "510901" }, { "id": "2303", "name": "船山区", "code": "510903" }, { "id": "2304", "name": "安居区", "code": "510904" }, { "id": "2305", "name": "蓬溪县", "code": "510921" }, { "id": "2306", "name": "射洪县", "code": "510922" }, { "id": "2307", "name": "大英县", "code": "510923" }] }, { "id": "248", "name": "内江市", "code": "511000", "children": [{ "id": "2308", "name": "市辖区", "code": "511001" }, { "id": "2309", "name": "市中区", "code": "511002" }, { "id": "2310", "name": "东兴区", "code": "511011" }, { "id": "2311", "name": "威远县", "code": "511024" }, { "id": "2312", "name": "资中县", "code": "511025" }, { "id": "2313", "name": "隆昌县", "code": "511028" }] }, { "id": "249", "name": "乐山市", "code": "511100", "children": [{ "id": "2314", "name": "市辖区", "code": "511101" }, { "id": "2315", "name": "市中区", "code": "511102" }, { "id": "2316", "name": "沙湾区", "code": "511111" }, { "id": "2317", "name": "五通桥区", "code": "511112" }, { "id": "2318", "name": "金口河区", "code": "511113" }, { "id": "2319", "name": "犍为县", "code": "511123" }, { "id": "2320", "name": "井研县", "code": "511124" }, { "id": "2321", "name": "夹江县", "code": "511126" }, { "id": "2322", "name": "沐川县", "code": "511129" }, { "id": "2323", "name": "峨边彝族自治县", "code": "511132" }, { "id": "2324", "name": "马边彝族自治县", "code": "511133" }, { "id": "2325", "name": "峨眉山市", "code": "511181" }] }, { "id": "250", "name": "南充市", "code": "511300", "children": [{ "id": "2326", "name": "市辖区", "code": "511301" }, { "id": "2327", "name": "顺庆区", "code": "511302" }, { "id": "2328", "name": "高坪区", "code": "511303" }, { "id": "2329", "name": "嘉陵区", "code": "511304" }, { "id": "2330", "name": "南部县", "code": "511321" }, { "id": "2331", "name": "营山县", "code": "511322" }, { "id": "2332", "name": "蓬安县", "code": "511323" }, { "id": "2333", "name": "仪陇县", "code": "511324" }, { "id": "2334", "name": "西充县", "code": "511325" }, { "id": "2335", "name": "阆中市", "code": "511381" }] }, { "id": "251", "name": "眉山市", "code": "511400", "children": [{ "id": "2336", "name": "市辖区", "code": "511401" }, { "id": "2337", "name": "东坡区", "code": "511402" }, { "id": "2338", "name": "彭山区", "code": "511403" }, { "id": "2339", "name": "仁寿县", "code": "511421" }, { "id": "2340", "name": "洪雅县", "code": "511423" }, { "id": "2341", "name": "丹棱县", "code": "511424" }, { "id": "2342", "name": "青神县", "code": "511425" }] }, { "id": "252", "name": "宜宾市", "code": "511500", "children": [{ "id": "2343", "name": "市辖区", "code": "511501" }, { "id": "2344", "name": "翠屏区", "code": "511502" }, { "id": "2345", "name": "南溪区", "code": "511503" }, { "id": "2346", "name": "宜宾县", "code": "511521" }, { "id": "2347", "name": "江安县", "code": "511523" }, { "id": "2348", "name": "长宁县", "code": "511524" }, { "id": "2349", "name": "高县", "code": "511525" }, { "id": "2350", "name": "珙县", "code": "511526" }, { "id": "2351", "name": "筠连县", "code": "511527" }, { "id": "2352", "name": "兴文县", "code": "511528" }, { "id": "2353", "name": "屏山县", "code": "511529" }] }, { "id": "253", "name": "广安市", "code": "511600", "children": [{ "id": "2354", "name": "市辖区", "code": "511601" }, { "id": "2355", "name": "广安区", "code": "511602" }, { "id": "2356", "name": "前锋区", "code": "511603" }, { "id": "2357", "name": "岳池县", "code": "511621" }, { "id": "2358", "name": "武胜县", "code": "511622" }, { "id": "2359", "name": "邻水县", "code": "511623" }, { "id": "2360", "name": "华蓥市", "code": "511681" }] }, { "id": "254", "name": "达州市", "code": "511700", "children": [{ "id": "2361", "name": "市辖区", "code": "511701" }, { "id": "2362", "name": "通川区", "code": "511702" }, { "id": "2363", "name": "达川区", "code": "511703" }, { "id": "2364", "name": "宣汉县", "code": "511722" }, { "id": "2365", "name": "开江县", "code": "511723" }, { "id": "2366", "name": "大竹县", "code": "511724" }, { "id": "2367", "name": "渠县", "code": "511725" }, { "id": "2368", "name": "万源市", "code": "511781" }] }, { "id": "255", "name": "雅安市", "code": "511800", "children": [{ "id": "2369", "name": "市辖区", "code": "511801" }, { "id": "2370", "name": "雨城区", "code": "511802" }, { "id": "2371", "name": "名山区", "code": "511803" }, { "id": "2372", "name": "荥经县", "code": "511822" }, { "id": "2373", "name": "汉源县", "code": "511823" }, { "id": "2374", "name": "石棉县", "code": "511824" }, { "id": "2375", "name": "天全县", "code": "511825" }, { "id": "2376", "name": "芦山县", "code": "511826" }, { "id": "2377", "name": "宝兴县", "code": "511827" }] }, { "id": "256", "name": "巴中市", "code": "511900", "children": [{ "id": "2378", "name": "市辖区", "code": "511901" }, { "id": "2379", "name": "巴州区", "code": "511902" }, { "id": "2380", "name": "恩阳区", "code": "511903" }, { "id": "2381", "name": "通江县", "code": "511921" }, { "id": "2382", "name": "南江县", "code": "511922" }, { "id": "2383", "name": "平昌县", "code": "511923" }] }, { "id": "257", "name": "资阳市", "code": "512000", "children": [{ "id": "2384", "name": "市辖区", "code": "512001" }, { "id": "2385", "name": "雁江区", "code": "512002" }, { "id": "2386", "name": "安岳县", "code": "512021" }, { "id": "2387", "name": "乐至县", "code": "512022" }] }, { "id": "258", "name": "阿坝藏族羌族自治州", "code": "513200", "children": [{ "id": "2388", "name": "马尔康市", "code": "513201" }, { "id": "2389", "name": "汶川县", "code": "513221" }, { "id": "2390", "name": "理县", "code": "513222" }, { "id": "2391", "name": "茂县", "code": "513223" }, { "id": "2392", "name": "松潘县", "code": "513224" }, { "id": "2393", "name": "九寨沟县", "code": "513225" }, { "id": "2394", "name": "金川县", "code": "513226" }, { "id": "2395", "name": "小金县", "code": "513227" }, { "id": "2396", "name": "黑水县", "code": "513228" }, { "id": "2397", "name": "壤塘县", "code": "513230" }, { "id": "2398", "name": "阿坝县", "code": "513231" }, { "id": "2399", "name": "若尔盖县", "code": "513232" }, { "id": "2400", "name": "红原县", "code": "513233" }] }, { "id": "259", "name": "甘孜藏族自治州", "code": "513300", "children": [{ "id": "2401", "name": "康定市", "code": "513301" }, { "id": "2402", "name": "泸定县", "code": "513322" }, { "id": "2403", "name": "丹巴县", "code": "513323" }, { "id": "2404", "name": "九龙县", "code": "513324" }, { "id": "2405", "name": "雅江县", "code": "513325" }, { "id": "2406", "name": "道孚县", "code": "513326" }, { "id": "2407", "name": "炉霍县", "code": "513327" }, { "id": "2408", "name": "甘孜县", "code": "513328" }, { "id": "2409", "name": "新龙县", "code": "513329" }, { "id": "2410", "name": "德格县", "code": "513330" }, { "id": "2411", "name": "白玉县", "code": "513331" }, { "id": "2412", "name": "石渠县", "code": "513332" }, { "id": "2413", "name": "色达县", "code": "513333" }, { "id": "2414", "name": "理塘县", "code": "513334" }, { "id": "2415", "name": "巴塘县", "code": "513335" }, { "id": "2416", "name": "乡城县", "code": "513336" }, { "id": "2417", "name": "稻城县", "code": "513337" }, { "id": "2418", "name": "得荣县", "code": "513338" }] }, { "id": "260", "name": "凉山彝族自治州", "code": "513400", "children": [{ "id": "2419", "name": "西昌市", "code": "513401" }, { "id": "2420", "name": "木里藏族自治县", "code": "513422" }, { "id": "2421", "name": "盐源县", "code": "513423" }, { "id": "2422", "name": "德昌县", "code": "513424" }, { "id": "2423", "name": "会理县", "code": "513425" }, { "id": "2424", "name": "会东县", "code": "513426" }, { "id": "2425", "name": "宁南县", "code": "513427" }, { "id": "2426", "name": "普格县", "code": "513428" }, { "id": "2427", "name": "布拖县", "code": "513429" }, { "id": "2428", "name": "金阳县", "code": "513430" }, { "id": "2429", "name": "昭觉县", "code": "513431" }, { "id": "2430", "name": "喜德县", "code": "513432" }, { "id": "2431", "name": "冕宁县", "code": "513433" }, { "id": "2432", "name": "越西县", "code": "513434" }, { "id": "2433", "name": "甘洛县", "code": "513435" }, { "id": "2434", "name": "美姑县", "code": "513436" }, { "id": "2435", "name": "雷波县", "code": "513437" }] }] }, { "id": "24", "name": "贵州省", "code": "520000", "children": [{ "id": "261", "name": "贵阳市", "code": "520100", "children": [{ "id": "2436", "name": "市辖区", "code": "520101" }, { "id": "2437", "name": "南明区", "code": "520102" }, { "id": "2438", "name": "云岩区", "code": "520103" }, { "id": "2439", "name": "花溪区", "code": "520111" }, { "id": "2440", "name": "乌当区", "code": "520112" }, { "id": "2441", "name": "白云区", "code": "520113" }, { "id": "2442", "name": "观山湖区", "code": "520115" }, { "id": "2443", "name": "开阳县", "code": "520121" }, { "id": "2444", "name": "息烽县", "code": "520122" }, { "id": "2445", "name": "修文县", "code": "520123" }, { "id": "2446", "name": "清镇市", "code": "520181" }] }, { "id": "262", "name": "六盘水市", "code": "520200", "children": [{ "id": "2447", "name": "钟山区", "code": "520201" }, { "id": "2448", "name": "六枝特区", "code": "520203" }, { "id": "2449", "name": "水城县", "code": "520221" }, { "id": "2450", "name": "盘县", "code": "520222" }] }, { "id": "263", "name": "遵义市", "code": "520300", "children": [{ "id": "2451", "name": "市辖区", "code": "520301" }, { "id": "2452", "name": "红花岗区", "code": "520302" }, { "id": "2453", "name": "汇川区", "code": "520303" }, { "id": "2454", "name": "播州区", "code": "520304" }, { "id": "2455", "name": "桐梓县", "code": "520322" }, { "id": "2456", "name": "绥阳县", "code": "520323" }, { "id": "2457", "name": "正安县", "code": "520324" }, { "id": "2458", "name": "道真仡佬族苗族自治县", "code": "520325" }, { "id": "2459", "name": "务川仡佬族苗族自治县", "code": "520326" }, { "id": "2460", "name": "凤冈县", "code": "520327" }, { "id": "2461", "name": "湄潭县", "code": "520328" }, { "id": "2462", "name": "余庆县", "code": "520329" }, { "id": "2463", "name": "习水县", "code": "520330" }, { "id": "2464", "name": "赤水市", "code": "520381" }, { "id": "2465", "name": "仁怀市", "code": "520382" }] }, { "id": "264", "name": "安顺市", "code": "520400", "children": [{ "id": "2466", "name": "市辖区", "code": "520401" }, { "id": "2467", "name": "西秀区", "code": "520402" }, { "id": "2468", "name": "平坝区", "code": "520403" }, { "id": "2469", "name": "普定县", "code": "520422" }, { "id": "2470", "name": "镇宁布依族苗族自治县", "code": "520423" }, { "id": "2471", "name": "关岭布依族苗族自治县", "code": "520424" }, { "id": "2472", "name": "紫云苗族布依族自治县", "code": "520425" }] }, { "id": "265", "name": "毕节市", "code": "520500", "children": [{ "id": "2473", "name": "市辖区", "code": "520501" }, { "id": "2474", "name": "七星关区", "code": "520502" }, { "id": "2475", "name": "大方县", "code": "520521" }, { "id": "2476", "name": "黔西县", "code": "520522" }, { "id": "2477", "name": "金沙县", "code": "520523" }, { "id": "2478", "name": "织金县", "code": "520524" }, { "id": "2479", "name": "纳雍县", "code": "520525" }, { "id": "2480", "name": "威宁彝族回族苗族自治县", "code": "520526" }, { "id": "2481", "name": "赫章县", "code": "520527" }] }, { "id": "266", "name": "铜仁市", "code": "520600", "children": [{ "id": "2482", "name": "市辖区", "code": "520601" }, { "id": "2483", "name": "碧江区", "code": "520602" }, { "id": "2484", "name": "万山区", "code": "520603" }, { "id": "2485", "name": "江口县", "code": "520621" }, { "id": "2486", "name": "玉屏侗族自治县", "code": "520622" }, { "id": "2487", "name": "石阡县", "code": "520623" }, { "id": "2488", "name": "思南县", "code": "520624" }, { "id": "2489", "name": "印江土家族苗族自治县", "code": "520625" }, { "id": "2490", "name": "德江县", "code": "520626" }, { "id": "2491", "name": "沿河土家族自治县", "code": "520627" }, { "id": "2492", "name": "松桃苗族自治县", "code": "520628" }] }, { "id": "267", "name": "黔西南布依族苗族自治州", "code": "522300", "children": [{ "id": "2493", "name": "兴义市", "code": "522301" }, { "id": "2494", "name": "兴仁县", "code": "522322" }, { "id": "2495", "name": "普安县", "code": "522323" }, { "id": "2496", "name": "晴隆县", "code": "522324" }, { "id": "2497", "name": "贞丰县", "code": "522325" }, { "id": "2498", "name": "望谟县", "code": "522326" }, { "id": "2499", "name": "册亨县", "code": "522327" }, { "id": "2500", "name": "安龙县", "code": "522328" }] }, { "id": "268", "name": "黔东南苗族侗族自治州", "code": "522600", "children": [{ "id": "2501", "name": "凯里市", "code": "522601" }, { "id": "2502", "name": "黄平县", "code": "522622" }, { "id": "2503", "name": "施秉县", "code": "522623" }, { "id": "2504", "name": "三穗县", "code": "522624" }, { "id": "2505", "name": "镇远县", "code": "522625" }, { "id": "2506", "name": "岑巩县", "code": "522626" }, { "id": "2507", "name": "天柱县", "code": "522627" }, { "id": "2508", "name": "锦屏县", "code": "522628" }, { "id": "2509", "name": "剑河县", "code": "522629" }, { "id": "2510", "name": "台江县", "code": "522630" }, { "id": "2511", "name": "黎平县", "code": "522631" }, { "id": "2512", "name": "榕江县", "code": "522632" }, { "id": "2513", "name": "从江县", "code": "522633" }, { "id": "2514", "name": "雷山县", "code": "522634" }, { "id": "2515", "name": "麻江县", "code": "522635" }, { "id": "2516", "name": "丹寨县", "code": "522636" }] }, { "id": "269", "name": "黔南布依族苗族自治州", "code": "522700", "children": [{ "id": "2517", "name": "都匀市", "code": "522701" }, { "id": "2518", "name": "福泉市", "code": "522702" }, { "id": "2519", "name": "荔波县", "code": "522722" }, { "id": "2520", "name": "贵定县", "code": "522723" }, { "id": "2521", "name": "瓮安县", "code": "522725" }, { "id": "2522", "name": "独山县", "code": "522726" }, { "id": "2523", "name": "平塘县", "code": "522727" }, { "id": "2524", "name": "罗甸县", "code": "522728" }, { "id": "2525", "name": "长顺县", "code": "522729" }, { "id": "2526", "name": "龙里县", "code": "522730" }, { "id": "2527", "name": "惠水县", "code": "522731" }, { "id": "2528", "name": "三都水族自治县", "code": "522732" }] }] }, { "id": "25", "name": "云南省", "code": "530000", "children": [{ "id": "270", "name": "昆明市", "code": "530100", "children": [{ "id": "2529", "name": "市辖区", "code": "530101" }, { "id": "2530", "name": "五华区", "code": "530102" }, { "id": "2531", "name": "盘龙区", "code": "530103" }, { "id": "2532", "name": "官渡区", "code": "530111" }, { "id": "2533", "name": "西山区", "code": "530112" }, { "id": "2534", "name": "东川区", "code": "530113" }, { "id": "2535", "name": "呈贡区", "code": "530114" }, { "id": "2536", "name": "晋宁县", "code": "530122" }, { "id": "2537", "name": "富民县", "code": "530124" }, { "id": "2538", "name": "宜良县", "code": "530125" }, { "id": "2539", "name": "石林彝族自治县", "code": "530126" }, { "id": "2540", "name": "嵩明县", "code": "530127" }, { "id": "2541", "name": "禄劝彝族苗族自治县", "code": "530128" }, { "id": "2542", "name": "寻甸回族彝族自治县", "code": "530129" }, { "id": "2543", "name": "安宁市", "code": "530181" }] }, { "id": "271", "name": "曲靖市", "code": "530300", "children": [{ "id": "2544", "name": "市辖区", "code": "530301" }, { "id": "2545", "name": "麒麟区", "code": "530302" }, { "id": "2546", "name": "沾益区", "code": "530303" }, { "id": "2547", "name": "马龙县", "code": "530321" }, { "id": "2548", "name": "陆良县", "code": "530322" }, { "id": "2549", "name": "师宗县", "code": "530323" }, { "id": "2550", "name": "罗平县", "code": "530324" }, { "id": "2551", "name": "富源县", "code": "530325" }, { "id": "2552", "name": "会泽县", "code": "530326" }, { "id": "2553", "name": "宣威市", "code": "530381" }] }, { "id": "272", "name": "玉溪市", "code": "530400", "children": [{ "id": "2554", "name": "市辖区", "code": "530401" }, { "id": "2555", "name": "红塔区", "code": "530402" }, { "id": "2556", "name": "江川区", "code": "530403" }, { "id": "2557", "name": "澄江县", "code": "530422" }, { "id": "2558", "name": "通海县", "code": "530423" }, { "id": "2559", "name": "华宁县", "code": "530424" }, { "id": "2560", "name": "易门县", "code": "530425" }, { "id": "2561", "name": "峨山彝族自治县", "code": "530426" }, { "id": "2562", "name": "新平彝族傣族自治县", "code": "530427" }, { "id": "2563", "name": "元江哈尼族彝族傣族自治县", "code": "530428" }] }, { "id": "273", "name": "保山市", "code": "530500", "children": [{ "id": "2564", "name": "市辖区", "code": "530501" }, { "id": "2565", "name": "隆阳区", "code": "530502" }, { "id": "2566", "name": "施甸县", "code": "530521" }, { "id": "2567", "name": "龙陵县", "code": "530523" }, { "id": "2568", "name": "昌宁县", "code": "530524" }, { "id": "2569", "name": "腾冲市", "code": "530581" }] }, { "id": "274", "name": "昭通市", "code": "530600", "children": [{ "id": "2570", "name": "市辖区", "code": "530601" }, { "id": "2571", "name": "昭阳区", "code": "530602" }, { "id": "2572", "name": "鲁甸县", "code": "530621" }, { "id": "2573", "name": "巧家县", "code": "530622" }, { "id": "2574", "name": "盐津县", "code": "530623" }, { "id": "2575", "name": "大关县", "code": "530624" }, { "id": "2576", "name": "永善县", "code": "530625" }, { "id": "2577", "name": "绥江县", "code": "530626" }, { "id": "2578", "name": "镇雄县", "code": "530627" }, { "id": "2579", "name": "彝良县", "code": "530628" }, { "id": "2580", "name": "威信县", "code": "530629" }, { "id": "2581", "name": "水富县", "code": "530630" }] }, { "id": "275", "name": "丽江市", "code": "530700", "children": [{ "id": "2582", "name": "市辖区", "code": "530701" }, { "id": "2583", "name": "古城区", "code": "530702" }, { "id": "2584", "name": "玉龙纳西族自治县", "code": "530721" }, { "id": "2585", "name": "永胜县", "code": "530722" }, { "id": "2586", "name": "华坪县", "code": "530723" }, { "id": "2587", "name": "宁蒗彝族自治县", "code": "530724" }] }, { "id": "276", "name": "普洱市", "code": "530800", "children": [{ "id": "2588", "name": "市辖区", "code": "530801" }, { "id": "2589", "name": "思茅区", "code": "530802" }, { "id": "2590", "name": "宁洱哈尼族彝族自治县", "code": "530821" }, { "id": "2591", "name": "墨江哈尼族自治县", "code": "530822" }, { "id": "2592", "name": "景东彝族自治县", "code": "530823" }, { "id": "2593", "name": "景谷傣族彝族自治县", "code": "530824" }, { "id": "2594", "name": "镇沅彝族哈尼族拉祜族自治县", "code": "530825" }, { "id": "2595", "name": "江城哈尼族彝族自治县", "code": "530826" }, { "id": "2596", "name": "孟连傣族拉祜族佤族自治县", "code": "530827" }, { "id": "2597", "name": "澜沧拉祜族自治县", "code": "530828" }, { "id": "2598", "name": "西盟佤族自治县", "code": "530829" }] }, { "id": "277", "name": "临沧市", "code": "530900", "children": [{ "id": "2599", "name": "市辖区", "code": "530901" }, { "id": "2600", "name": "临翔区", "code": "530902" }, { "id": "2601", "name": "凤庆县", "code": "530921" }, { "id": "2602", "name": "云县", "code": "530922" }, { "id": "2603", "name": "永德县", "code": "530923" }, { "id": "2604", "name": "镇康县", "code": "530924" }, { "id": "2605", "name": "双江拉祜族佤族布朗族傣族自治县", "code": "530925" }, { "id": "2606", "name": "耿马傣族佤族自治县", "code": "530926" }, { "id": "2607", "name": "沧源佤族自治县", "code": "530927" }] }, { "id": "278", "name": "楚雄彝族自治州", "code": "532300", "children": [{ "id": "2608", "name": "楚雄市", "code": "532301" }, { "id": "2609", "name": "双柏县", "code": "532322" }, { "id": "2610", "name": "牟定县", "code": "532323" }, { "id": "2611", "name": "南华县", "code": "532324" }, { "id": "2612", "name": "姚安县", "code": "532325" }, { "id": "2613", "name": "大姚县", "code": "532326" }, { "id": "2614", "name": "永仁县", "code": "532327" }, { "id": "2615", "name": "元谋县", "code": "532328" }, { "id": "2616", "name": "武定县", "code": "532329" }, { "id": "2617", "name": "禄丰县", "code": "532331" }] }, { "id": "279", "name": "红河哈尼族彝族自治州", "code": "532500", "children": [{ "id": "2618", "name": "个旧市", "code": "532501" }, { "id": "2619", "name": "开远市", "code": "532502" }, { "id": "2620", "name": "蒙自市", "code": "532503" }, { "id": "2621", "name": "弥勒市", "code": "532504" }, { "id": "2622", "name": "屏边苗族自治县", "code": "532523" }, { "id": "2623", "name": "建水县", "code": "532524" }, { "id": "2624", "name": "石屏县", "code": "532525" }, { "id": "2625", "name": "泸西县", "code": "532527" }, { "id": "2626", "name": "元阳县", "code": "532528" }, { "id": "2627", "name": "红河县", "code": "532529" }, { "id": "2628", "name": "金平苗族瑶族傣族自治县", "code": "532530" }, { "id": "2629", "name": "绿春县", "code": "532531" }, { "id": "2630", "name": "河口瑶族自治县", "code": "532532" }] }, { "id": "280", "name": "文山壮族苗族自治州", "code": "532600", "children": [{ "id": "2631", "name": "文山市", "code": "532601" }, { "id": "2632", "name": "砚山县", "code": "532622" }, { "id": "2633", "name": "西畴县", "code": "532623" }, { "id": "2634", "name": "麻栗坡县", "code": "532624" }, { "id": "2635", "name": "马关县", "code": "532625" }, { "id": "2636", "name": "丘北县", "code": "532626" }, { "id": "2637", "name": "广南县", "code": "532627" }, { "id": "2638", "name": "富宁县", "code": "532628" }] }, { "id": "281", "name": "西双版纳傣族自治州", "code": "532800", "children": [{ "id": "2639", "name": "景洪市", "code": "532801" }, { "id": "2640", "name": "勐海县", "code": "532822" }, { "id": "2641", "name": "勐腊县", "code": "532823" }] }, { "id": "282", "name": "大理白族自治州", "code": "532900", "children": [{ "id": "2642", "name": "大理市", "code": "532901" }, { "id": "2643", "name": "漾濞彝族自治县", "code": "532922" }, { "id": "2644", "name": "祥云县", "code": "532923" }, { "id": "2645", "name": "宾川县", "code": "532924" }, { "id": "2646", "name": "弥渡县", "code": "532925" }, { "id": "2647", "name": "南涧彝族自治县", "code": "532926" }, { "id": "2648", "name": "巍山彝族回族自治县", "code": "532927" }, { "id": "2649", "name": "永平县", "code": "532928" }, { "id": "2650", "name": "云龙县", "code": "532929" }, { "id": "2651", "name": "洱源县", "code": "532930" }, { "id": "2652", "name": "剑川县", "code": "532931" }, { "id": "2653", "name": "鹤庆县", "code": "532932" }] }, { "id": "283", "name": "德宏傣族景颇族自治州", "code": "533100", "children": [{ "id": "2654", "name": "瑞丽市", "code": "533102" }, { "id": "2655", "name": "芒市", "code": "533103" }, { "id": "2656", "name": "梁河县", "code": "533122" }, { "id": "2657", "name": "盈江县", "code": "533123" }, { "id": "2658", "name": "陇川县", "code": "533124" }] }, { "id": "284", "name": "怒江傈僳族自治州", "code": "533300", "children": [{ "id": "2659", "name": "泸水市", "code": "533301" }, { "id": "2660", "name": "福贡县", "code": "533323" }, { "id": "2661", "name": "贡山独龙族怒族自治县", "code": "533324" }, { "id": "2662", "name": "兰坪白族普米族自治县", "code": "533325" }] }, { "id": "285", "name": "迪庆藏族自治州", "code": "533400", "children": [{ "id": "2663", "name": "香格里拉市", "code": "533401" }, { "id": "2664", "name": "德钦县", "code": "533422" }, { "id": "2665", "name": "维西傈僳族自治县", "code": "533423" }] }] }, { "id": "26", "name": "西藏自治区", "code": "540000", "children": [{ "id": "286", "name": "拉萨市", "code": "540100", "children": [{ "id": "2666", "name": "市辖区", "code": "540101" }, { "id": "2667", "name": "城关区", "code": "540102" }, { "id": "2668", "name": "堆龙德庆区", "code": "540103" }, { "id": "2669", "name": "林周县", "code": "540121" }, { "id": "2670", "name": "当雄县", "code": "540122" }, { "id": "2671", "name": "尼木县", "code": "540123" }, { "id": "2672", "name": "曲水县", "code": "540124" }, { "id": "2673", "name": "达孜县", "code": "540126" }, { "id": "2674", "name": "墨竹工卡县", "code": "540127" }] }, { "id": "287", "name": "日喀则市", "code": "540200", "children": [{ "id": "2675", "name": "桑珠孜区", "code": "540202" }, { "id": "2676", "name": "南木林县", "code": "540221" }, { "id": "2677", "name": "江孜县", "code": "540222" }, { "id": "2678", "name": "定日县", "code": "540223" }, { "id": "2679", "name": "萨迦县", "code": "540224" }, { "id": "2680", "name": "拉孜县", "code": "540225" }, { "id": "2681", "name": "昂仁县", "code": "540226" }, { "id": "2682", "name": "谢通门县", "code": "540227" }, { "id": "2683", "name": "白朗县", "code": "540228" }, { "id": "2684", "name": "仁布县", "code": "540229" }, { "id": "2685", "name": "康马县", "code": "540230" }, { "id": "2686", "name": "定结县", "code": "540231" }, { "id": "2687", "name": "仲巴县", "code": "540232" }, { "id": "2688", "name": "亚东县", "code": "540233" }, { "id": "2689", "name": "吉隆县", "code": "540234" }, { "id": "2690", "name": "聂拉木县", "code": "540235" }, { "id": "2691", "name": "萨嘎县", "code": "540236" }, { "id": "2692", "name": "岗巴县", "code": "540237" }] }, { "id": "288", "name": "昌都市", "code": "540300", "children": [{ "id": "2693", "name": "卡若区", "code": "540302" }, { "id": "2694", "name": "江达县", "code": "540321" }, { "id": "2695", "name": "贡觉县", "code": "540322" }, { "id": "2696", "name": "类乌齐县", "code": "540323" }, { "id": "2697", "name": "丁青县", "code": "540324" }, { "id": "2698", "name": "察雅县", "code": "540325" }, { "id": "2699", "name": "八宿县", "code": "540326" }, { "id": "2700", "name": "左贡县", "code": "540327" }, { "id": "2701", "name": "芒康县", "code": "540328" }, { "id": "2702", "name": "洛隆县", "code": "540329" }, { "id": "2703", "name": "边坝县", "code": "540330" }] }, { "id": "289", "name": "林芝市", "code": "540400", "children": [{ "id": "2704", "name": "巴宜区", "code": "540402" }, { "id": "2705", "name": "工布江达县", "code": "540421" }, { "id": "2706", "name": "米林县", "code": "540422" }, { "id": "2707", "name": "墨脱县", "code": "540423" }, { "id": "2708", "name": "波密县", "code": "540424" }, { "id": "2709", "name": "察隅县", "code": "540425" }, { "id": "2710", "name": "朗县", "code": "540426" }] }, { "id": "290", "name": "山南市", "code": "540500", "children": [{ "id": "2711", "name": "市辖区", "code": "540501" }, { "id": "2712", "name": "乃东区", "code": "540502" }, { "id": "2713", "name": "扎囊县", "code": "540521" }, { "id": "2714", "name": "贡嘎县", "code": "540522" }, { "id": "2715", "name": "桑日县", "code": "540523" }, { "id": "2716", "name": "琼结县", "code": "540524" }, { "id": "2717", "name": "曲松县", "code": "540525" }, { "id": "2718", "name": "措美县", "code": "540526" }, { "id": "2719", "name": "洛扎县", "code": "540527" }, { "id": "2720", "name": "加查县", "code": "540528" }, { "id": "2721", "name": "隆子县", "code": "540529" }, { "id": "2722", "name": "错那县", "code": "540530" }, { "id": "2723", "name": "浪卡子县", "code": "540531" }] }, { "id": "291", "name": "那曲地区", "code": "542400", "children": [{ "id": "2724", "name": "那曲县", "code": "542421" }, { "id": "2725", "name": "嘉黎县", "code": "542422" }, { "id": "2726", "name": "比如县", "code": "542423" }, { "id": "2727", "name": "聂荣县", "code": "542424" }, { "id": "2728", "name": "安多县", "code": "542425" }, { "id": "2729", "name": "申扎县", "code": "542426" }, { "id": "2730", "name": "索县", "code": "542427" }, { "id": "2731", "name": "班戈县", "code": "542428" }, { "id": "2732", "name": "巴青县", "code": "542429" }, { "id": "2733", "name": "尼玛县", "code": "542430" }, { "id": "2734", "name": "双湖县", "code": "542431" }] }, { "id": "292", "name": "阿里地区", "code": "542500", "children": [{ "id": "2735", "name": "普兰县", "code": "542521" }, { "id": "2736", "name": "札达县", "code": "542522" }, { "id": "2737", "name": "噶尔县", "code": "542523" }, { "id": "2738", "name": "日土县", "code": "542524" }, { "id": "2739", "name": "革吉县", "code": "542525" }, { "id": "2740", "name": "改则县", "code": "542526" }, { "id": "2741", "name": "措勤县", "code": "542527" }] }] }, { "id": "27", "name": "陕西省", "code": "610000", "children": [{ "id": "293", "name": "西安市", "code": "610100", "children": [{ "id": "2742", "name": "市辖区", "code": "610101" }, { "id": "2743", "name": "新城区", "code": "610102" }, { "id": "2744", "name": "碑林区", "code": "610103" }, { "id": "2745", "name": "莲湖区", "code": "610104" }, { "id": "2746", "name": "灞桥区", "code": "610111" }, { "id": "2747", "name": "未央区", "code": "610112" }, { "id": "2748", "name": "雁塔区", "code": "610113" }, { "id": "2749", "name": "阎良区", "code": "610114" }, { "id": "2750", "name": "临潼区", "code": "610115" }, { "id": "2751", "name": "长安区", "code": "610116" }, { "id": "2752", "name": "高陵区", "code": "610117" }, { "id": "2753", "name": "蓝田县", "code": "610122" }, { "id": "2754", "name": "周至县", "code": "610124" }, { "id": "2755", "name": "户县", "code": "610125" }] }, { "id": "294", "name": "铜川市", "code": "610200", "children": [{ "id": "2756", "name": "市辖区", "code": "610201" }, { "id": "2757", "name": "王益区", "code": "610202" }, { "id": "2758", "name": "印台区", "code": "610203" }, { "id": "2759", "name": "耀州区", "code": "610204" }, { "id": "2760", "name": "宜君县", "code": "610222" }] }, { "id": "295", "name": "宝鸡市", "code": "610300", "children": [{ "id": "2761", "name": "市辖区", "code": "610301" }, { "id": "2762", "name": "渭滨区", "code": "610302" }, { "id": "2763", "name": "金台区", "code": "610303" }, { "id": "2764", "name": "陈仓区", "code": "610304" }, { "id": "2765", "name": "凤翔县", "code": "610322" }, { "id": "2766", "name": "岐山县", "code": "610323" }, { "id": "2767", "name": "扶风县", "code": "610324" }, { "id": "2768", "name": "眉县", "code": "610326" }, { "id": "2769", "name": "陇县", "code": "610327" }, { "id": "2770", "name": "千阳县", "code": "610328" }, { "id": "2771", "name": "麟游县", "code": "610329" }, { "id": "2772", "name": "凤县", "code": "610330" }, { "id": "2773", "name": "太白县", "code": "610331" }] }, { "id": "296", "name": "咸阳市", "code": "610400", "children": [{ "id": "2774", "name": "市辖区", "code": "610401" }, { "id": "2775", "name": "秦都区", "code": "610402" }, { "id": "2776", "name": "杨陵区", "code": "610403" }, { "id": "2777", "name": "渭城区", "code": "610404" }, { "id": "2778", "name": "三原县", "code": "610422" }, { "id": "2779", "name": "泾阳县", "code": "610423" }, { "id": "2780", "name": "乾县", "code": "610424" }, { "id": "2781", "name": "礼泉县", "code": "610425" }, { "id": "2782", "name": "永寿县", "code": "610426" }, { "id": "2783", "name": "彬县", "code": "610427" }, { "id": "2784", "name": "长武县", "code": "610428" }, { "id": "2785", "name": "旬邑县", "code": "610429" }, { "id": "2786", "name": "淳化县", "code": "610430" }, { "id": "2787", "name": "武功县", "code": "610431" }, { "id": "2788", "name": "兴平市", "code": "610481" }] }, { "id": "297", "name": "渭南市", "code": "610500", "children": [{ "id": "2789", "name": "市辖区", "code": "610501" }, { "id": "2790", "name": "临渭区", "code": "610502" }, { "id": "2791", "name": "华州区", "code": "610503" }, { "id": "2792", "name": "潼关县", "code": "610522" }, { "id": "2793", "name": "大荔县", "code": "610523" }, { "id": "2794", "name": "合阳县", "code": "610524" }, { "id": "2795", "name": "澄城县", "code": "610525" }, { "id": "2796", "name": "蒲城县", "code": "610526" }, { "id": "2797", "name": "白水县", "code": "610527" }, { "id": "2798", "name": "富平县", "code": "610528" }, { "id": "2799", "name": "韩城市", "code": "610581" }, { "id": "2800", "name": "华阴市", "code": "610582" }] }, { "id": "298", "name": "延安市", "code": "610600", "children": [{ "id": "2801", "name": "市辖区", "code": "610601" }, { "id": "2802", "name": "宝塔区", "code": "610602" }, { "id": "2803", "name": "安塞区", "code": "610603" }, { "id": "2804", "name": "延长县", "code": "610621" }, { "id": "2805", "name": "延川县", "code": "610622" }, { "id": "2806", "name": "子长县", "code": "610623" }, { "id": "2807", "name": "志丹县", "code": "610625" }, { "id": "2808", "name": "吴起县", "code": "610626" }, { "id": "2809", "name": "甘泉县", "code": "610627" }, { "id": "2810", "name": "富县", "code": "610628" }, { "id": "2811", "name": "洛川县", "code": "610629" }, { "id": "2812", "name": "宜川县", "code": "610630" }, { "id": "2813", "name": "黄龙县", "code": "610631" }, { "id": "2814", "name": "黄陵县", "code": "610632" }] }, { "id": "299", "name": "汉中市", "code": "610700", "children": [{ "id": "2815", "name": "市辖区", "code": "610701" }, { "id": "2816", "name": "汉台区", "code": "610702" }, { "id": "2817", "name": "南郑县", "code": "610721" }, { "id": "2818", "name": "城固县", "code": "610722" }, { "id": "2819", "name": "洋县", "code": "610723" }, { "id": "2820", "name": "西乡县", "code": "610724" }, { "id": "2821", "name": "勉县", "code": "610725" }, { "id": "2822", "name": "宁强县", "code": "610726" }, { "id": "2823", "name": "略阳县", "code": "610727" }, { "id": "2824", "name": "镇巴县", "code": "610728" }, { "id": "2825", "name": "留坝县", "code": "610729" }, { "id": "2826", "name": "佛坪县", "code": "610730" }] }, { "id": "300", "name": "榆林市", "code": "610800", "children": [{ "id": "2827", "name": "市辖区", "code": "610801" }, { "id": "2828", "name": "榆阳区", "code": "610802" }, { "id": "2829", "name": "横山区", "code": "610803" }, { "id": "2830", "name": "神木县", "code": "610821" }, { "id": "2831", "name": "府谷县", "code": "610822" }, { "id": "2832", "name": "靖边县", "code": "610824" }, { "id": "2833", "name": "定边县", "code": "610825" }, { "id": "2834", "name": "绥德县", "code": "610826" }, { "id": "2835", "name": "米脂县", "code": "610827" }, { "id": "2836", "name": "佳县", "code": "610828" }, { "id": "2837", "name": "吴堡县", "code": "610829" }, { "id": "2838", "name": "清涧县", "code": "610830" }, { "id": "2839", "name": "子洲县", "code": "610831" }] }, { "id": "301", "name": "安康市", "code": "610900", "children": [{ "id": "2840", "name": "市辖区", "code": "610901" }, { "id": "2841", "name": "汉滨区", "code": "610902" }, { "id": "2842", "name": "汉阴县", "code": "610921" }, { "id": "2843", "name": "石泉县", "code": "610922" }, { "id": "2844", "name": "宁陕县", "code": "610923" }, { "id": "2845", "name": "紫阳县", "code": "610924" }, { "id": "2846", "name": "岚皋县", "code": "610925" }, { "id": "2847", "name": "平利县", "code": "610926" }, { "id": "2848", "name": "镇坪县", "code": "610927" }, { "id": "2849", "name": "旬阳县", "code": "610928" }, { "id": "2850", "name": "白河县", "code": "610929" }] }, { "id": "302", "name": "商洛市", "code": "611000", "children": [{ "id": "2851", "name": "市辖区", "code": "611001" }, { "id": "2852", "name": "商州区", "code": "611002" }, { "id": "2853", "name": "洛南县", "code": "611021" }, { "id": "2854", "name": "丹凤县", "code": "611022" }, { "id": "2855", "name": "商南县", "code": "611023" }, { "id": "2856", "name": "山阳县", "code": "611024" }, { "id": "2857", "name": "镇安县", "code": "611025" }, { "id": "2858", "name": "柞水县", "code": "611026" }] }] }, { "id": "28", "name": "甘肃省", "code": "620000", "children": [{ "id": "303", "name": "兰州市", "code": "620100", "children": [{ "id": "2859", "name": "市辖区", "code": "620101" }, { "id": "2860", "name": "城关区", "code": "620102" }, { "id": "2861", "name": "七里河区", "code": "620103" }, { "id": "2862", "name": "西固区", "code": "620104" }, { "id": "2863", "name": "安宁区", "code": "620105" }, { "id": "2864", "name": "红古区", "code": "620111" }, { "id": "2865", "name": "永登县", "code": "620121" }, { "id": "2866", "name": "皋兰县", "code": "620122" }, { "id": "2867", "name": "榆中县", "code": "620123" }] }, { "id": "304", "name": "嘉峪关市", "code": "620200", "children": [{ "id": "2868", "name": "市辖区", "code": "620201" }] }, { "id": "305", "name": "金昌市", "code": "620300", "children": [{ "id": "2869", "name": "市辖区", "code": "620301" }, { "id": "2870", "name": "金川区", "code": "620302" }, { "id": "2871", "name": "永昌县", "code": "620321" }] }, { "id": "306", "name": "白银市", "code": "620400", "children": [{ "id": "2872", "name": "市辖区", "code": "620401" }, { "id": "2873", "name": "白银区", "code": "620402" }, { "id": "2874", "name": "平川区", "code": "620403" }, { "id": "2875", "name": "靖远县", "code": "620421" }, { "id": "2876", "name": "会宁县", "code": "620422" }, { "id": "2877", "name": "景泰县", "code": "620423" }] }, { "id": "307", "name": "天水市", "code": "620500", "children": [{ "id": "2878", "name": "市辖区", "code": "620501" }, { "id": "2879", "name": "秦州区", "code": "620502" }, { "id": "2880", "name": "麦积区", "code": "620503" }, { "id": "2881", "name": "清水县", "code": "620521" }, { "id": "2882", "name": "秦安县", "code": "620522" }, { "id": "2883", "name": "甘谷县", "code": "620523" }, { "id": "2884", "name": "武山县", "code": "620524" }, { "id": "2885", "name": "张家川回族自治县", "code": "620525" }] }, { "id": "308", "name": "武威市", "code": "620600", "children": [{ "id": "2886", "name": "市辖区", "code": "620601" }, { "id": "2887", "name": "凉州区", "code": "620602" }, { "id": "2888", "name": "民勤县", "code": "620621" }, { "id": "2889", "name": "古浪县", "code": "620622" }, { "id": "2890", "name": "天祝藏族自治县", "code": "620623" }] }, { "id": "309", "name": "张掖市", "code": "620700", "children": [{ "id": "2891", "name": "市辖区", "code": "620701" }, { "id": "2892", "name": "甘州区", "code": "620702" }, { "id": "2893", "name": "肃南裕固族自治县", "code": "620721" }, { "id": "2894", "name": "民乐县", "code": "620722" }, { "id": "2895", "name": "临泽县", "code": "620723" }, { "id": "2896", "name": "高台县", "code": "620724" }, { "id": "2897", "name": "山丹县", "code": "620725" }] }, { "id": "310", "name": "平凉市", "code": "620800", "children": [{ "id": "2898", "name": "市辖区", "code": "620801" }, { "id": "2899", "name": "崆峒区", "code": "620802" }, { "id": "2900", "name": "泾川县", "code": "620821" }, { "id": "2901", "name": "灵台县", "code": "620822" }, { "id": "2902", "name": "崇信县", "code": "620823" }, { "id": "2903", "name": "华亭县", "code": "620824" }, { "id": "2904", "name": "庄浪县", "code": "620825" }, { "id": "2905", "name": "静宁县", "code": "620826" }] }, { "id": "311", "name": "酒泉市", "code": "620900", "children": [{ "id": "2906", "name": "市辖区", "code": "620901" }, { "id": "2907", "name": "肃州区", "code": "620902" }, { "id": "2908", "name": "金塔县", "code": "620921" }, { "id": "2909", "name": "瓜州县", "code": "620922" }, { "id": "2910", "name": "肃北蒙古族自治县", "code": "620923" }, { "id": "2911", "name": "阿克塞哈萨克族自治县", "code": "620924" }, { "id": "2912", "name": "玉门市", "code": "620981" }, { "id": "2913", "name": "敦煌市", "code": "620982" }] }, { "id": "312", "name": "庆阳市", "code": "621000", "children": [{ "id": "2914", "name": "市辖区", "code": "621001" }, { "id": "2915", "name": "西峰区", "code": "621002" }, { "id": "2916", "name": "庆城县", "code": "621021" }, { "id": "2917", "name": "环县", "code": "621022" }, { "id": "2918", "name": "华池县", "code": "621023" }, { "id": "2919", "name": "合水县", "code": "621024" }, { "id": "2920", "name": "正宁县", "code": "621025" }, { "id": "2921", "name": "宁县", "code": "621026" }, { "id": "2922", "name": "镇原县", "code": "621027" }] }, { "id": "313", "name": "定西市", "code": "621100", "children": [{ "id": "2923", "name": "市辖区", "code": "621101" }, { "id": "2924", "name": "安定区", "code": "621102" }, { "id": "2925", "name": "通渭县", "code": "621121" }, { "id": "2926", "name": "陇西县", "code": "621122" }, { "id": "2927", "name": "渭源县", "code": "621123" }, { "id": "2928", "name": "临洮县", "code": "621124" }, { "id": "2929", "name": "漳县", "code": "621125" }, { "id": "2930", "name": "岷县", "code": "621126" }] }, { "id": "314", "name": "陇南市", "code": "621200", "children": [{ "id": "2931", "name": "市辖区", "code": "621201" }, { "id": "2932", "name": "武都区", "code": "621202" }, { "id": "2933", "name": "成县", "code": "621221" }, { "id": "2934", "name": "文县", "code": "621222" }, { "id": "2935", "name": "宕昌县", "code": "621223" }, { "id": "2936", "name": "康县", "code": "621224" }, { "id": "2937", "name": "西和县", "code": "621225" }, { "id": "2938", "name": "礼县", "code": "621226" }, { "id": "2939", "name": "徽县", "code": "621227" }, { "id": "2940", "name": "两当县", "code": "621228" }] }, { "id": "315", "name": "临夏回族自治州", "code": "622900", "children": [{ "id": "2941", "name": "临夏市", "code": "622901" }, { "id": "2942", "name": "临夏县", "code": "622921" }, { "id": "2943", "name": "康乐县", "code": "622922" }, { "id": "2944", "name": "永靖县", "code": "622923" }, { "id": "2945", "name": "广河县", "code": "622924" }, { "id": "2946", "name": "和政县", "code": "622925" }, { "id": "2947", "name": "东乡族自治县", "code": "622926" }, { "id": "2948", "name": "积石山保安族东乡族撒拉族自治县", "code": "622927" }] }, { "id": "316", "name": "甘南藏族自治州", "code": "623000", "children": [{ "id": "2949", "name": "合作市", "code": "623001" }, { "id": "2950", "name": "临潭县", "code": "623021" }, { "id": "2951", "name": "卓尼县", "code": "623022" }, { "id": "2952", "name": "舟曲县", "code": "623023" }, { "id": "2953", "name": "迭部县", "code": "623024" }, { "id": "2954", "name": "玛曲县", "code": "623025" }, { "id": "2955", "name": "碌曲县", "code": "623026" }, { "id": "2956", "name": "夏河县", "code": "623027" }] }] }, { "id": "29", "name": "青海省", "code": "630000", "children": [{ "id": "317", "name": "西宁市", "code": "630100", "children": [{ "id": "2957", "name": "市辖区", "code": "630101" }, { "id": "2958", "name": "城东区", "code": "630102" }, { "id": "2959", "name": "城中区", "code": "630103" }, { "id": "2960", "name": "城西区", "code": "630104" }, { "id": "2961", "name": "城北区", "code": "630105" }, { "id": "2962", "name": "大通回族土族自治县", "code": "630121" }, { "id": "2963", "name": "湟中县", "code": "630122" }, { "id": "2964", "name": "湟源县", "code": "630123" }] }, { "id": "318", "name": "海东市", "code": "630200", "children": [{ "id": "2965", "name": "乐都区", "code": "630202" }, { "id": "2966", "name": "平安区", "code": "630203" }, { "id": "2967", "name": "民和回族土族自治县", "code": "630222" }, { "id": "2968", "name": "互助土族自治县", "code": "630223" }, { "id": "2969", "name": "化隆回族自治县", "code": "630224" }, { "id": "2970", "name": "循化撒拉族自治县", "code": "630225" }] }, { "id": "319", "name": "海北藏族自治州", "code": "632200", "children": [{ "id": "2971", "name": "门源回族自治县", "code": "632221" }, { "id": "2972", "name": "祁连县", "code": "632222" }, { "id": "2973", "name": "海晏县", "code": "632223" }, { "id": "2974", "name": "刚察县", "code": "632224" }] }, { "id": "320", "name": "黄南藏族自治州", "code": "632300", "children": [{ "id": "2975", "name": "同仁县", "code": "632321" }, { "id": "2976", "name": "尖扎县", "code": "632322" }, { "id": "2977", "name": "泽库县", "code": "632323" }, { "id": "2978", "name": "河南蒙古族自治县", "code": "632324" }] }, { "id": "321", "name": "海南藏族自治州", "code": "632500", "children": [{ "id": "2979", "name": "共和县", "code": "632521" }, { "id": "2980", "name": "同德县", "code": "632522" }, { "id": "2981", "name": "贵德县", "code": "632523" }, { "id": "2982", "name": "兴海县", "code": "632524" }, { "id": "2983", "name": "贵南县", "code": "632525" }] }, { "id": "322", "name": "果洛藏族自治州", "code": "632600", "children": [{ "id": "2984", "name": "玛沁县", "code": "632621" }, { "id": "2985", "name": "班玛县", "code": "632622" }, { "id": "2986", "name": "甘德县", "code": "632623" }, { "id": "2987", "name": "达日县", "code": "632624" }, { "id": "2988", "name": "久治县", "code": "632625" }, { "id": "2989", "name": "玛多县", "code": "632626" }] }, { "id": "323", "name": "玉树藏族自治州", "code": "632700", "children": [{ "id": "2990", "name": "玉树市", "code": "632701" }, { "id": "2991", "name": "杂多县", "code": "632722" }, { "id": "2992", "name": "称多县", "code": "632723" }, { "id": "2993", "name": "治多县", "code": "632724" }, { "id": "2994", "name": "囊谦县", "code": "632725" }, { "id": "2995", "name": "曲麻莱县", "code": "632726" }] }, { "id": "324", "name": "海西蒙古族藏族自治州", "code": "632800", "children": [{ "id": "2996", "name": "格尔木市", "code": "632801" }, { "id": "2997", "name": "德令哈市", "code": "632802" }, { "id": "2998", "name": "乌兰县", "code": "632821" }, { "id": "2999", "name": "都兰县", "code": "632822" }, { "id": "3000", "name": "天峻县", "code": "632823" }] }] }, { "id": "30", "name": "宁夏回族自治区", "code": "640000", "children": [{ "id": "325", "name": "银川市", "code": "640100", "children": [{ "id": "3001", "name": "市辖区", "code": "640101" }, { "id": "3002", "name": "兴庆区", "code": "640104" }, { "id": "3003", "name": "西夏区", "code": "640105" }, { "id": "3004", "name": "金凤区", "code": "640106" }, { "id": "3005", "name": "永宁县", "code": "640121" }, { "id": "3006", "name": "贺兰县", "code": "640122" }, { "id": "3007", "name": "灵武市", "code": "640181" }] }, { "id": "326", "name": "石嘴山市", "code": "640200", "children": [{ "id": "3008", "name": "市辖区", "code": "640201" }, { "id": "3009", "name": "大武口区", "code": "640202" }, { "id": "3010", "name": "惠农区", "code": "640205" }, { "id": "3011", "name": "平罗县", "code": "640221" }] }, { "id": "327", "name": "吴忠市", "code": "640300", "children": [{ "id": "3012", "name": "市辖区", "code": "640301" }, { "id": "3013", "name": "利通区", "code": "640302" }, { "id": "3014", "name": "红寺堡区", "code": "640303" }, { "id": "3015", "name": "盐池县", "code": "640323" }, { "id": "3016", "name": "同心县", "code": "640324" }, { "id": "3017", "name": "青铜峡市", "code": "640381" }] }, { "id": "328", "name": "固原市", "code": "640400", "children": [{ "id": "3018", "name": "市辖区", "code": "640401" }, { "id": "3019", "name": "原州区", "code": "640402" }, { "id": "3020", "name": "西吉县", "code": "640422" }, { "id": "3021", "name": "隆德县", "code": "640423" }, { "id": "3022", "name": "泾源县", "code": "640424" }, { "id": "3023", "name": "彭阳县", "code": "640425" }] }, { "id": "329", "name": "中卫市", "code": "640500", "children": [{ "id": "3024", "name": "市辖区", "code": "640501" }, { "id": "3025", "name": "沙坡头区", "code": "640502" }, { "id": "3026", "name": "中宁县", "code": "640521" }, { "id": "3027", "name": "海原县", "code": "640522" }] }] }, { "id": "31", "name": "新疆维吾尔自治区", "code": "650000", "children": [{ "id": "330", "name": "乌鲁木齐市", "code": "650100", "children": [{ "id": "3028", "name": "市辖区", "code": "650101" }, { "id": "3029", "name": "天山区", "code": "650102" }, { "id": "3030", "name": "沙依巴克区", "code": "650103" }, { "id": "3031", "name": "新市区", "code": "650104" }, { "id": "3032", "name": "水磨沟区", "code": "650105" }, { "id": "3033", "name": "头屯河区", "code": "650106" }, { "id": "3034", "name": "达坂城区", "code": "650107" }, { "id": "3035", "name": "米东区", "code": "650109" }, { "id": "3036", "name": "乌鲁木齐县", "code": "650121" }] }, { "id": "331", "name": "克拉玛依市", "code": "650200", "children": [{ "id": "3037", "name": "市辖区", "code": "650201" }, { "id": "3038", "name": "独山子区", "code": "650202" }, { "id": "3039", "name": "克拉玛依区", "code": "650203" }, { "id": "3040", "name": "白碱滩区", "code": "650204" }, { "id": "3041", "name": "乌尔禾区", "code": "650205" }] }, { "id": "332", "name": "吐鲁番市", "code": "650400", "children": [{ "id": "3042", "name": "高昌区", "code": "650402" }, { "id": "3043", "name": "鄯善县", "code": "650421" }, { "id": "3044", "name": "托克逊县", "code": "650422" }] }, { "id": "333", "name": "哈密市", "code": "650500", "children": [{ "id": "3045", "name": "伊州区", "code": "650502" }, { "id": "3046", "name": "巴里坤哈萨克自治县", "code": "650521" }, { "id": "3047", "name": "伊吾县", "code": "650522" }] }, { "id": "334", "name": "昌吉回族自治州", "code": "652300", "children": [{ "id": "3048", "name": "昌吉市", "code": "652301" }, { "id": "3049", "name": "阜康市", "code": "652302" }, { "id": "3050", "name": "呼图壁县", "code": "652323" }, { "id": "3051", "name": "玛纳斯县", "code": "652324" }, { "id": "3052", "name": "奇台县", "code": "652325" }, { "id": "3053", "name": "吉木萨尔县", "code": "652327" }, { "id": "3054", "name": "木垒哈萨克自治县", "code": "652328" }] }, { "id": "335", "name": "博尔塔拉蒙古自治州", "code": "652700", "children": [{ "id": "3055", "name": "博乐市", "code": "652701" }, { "id": "3056", "name": "阿拉山口市", "code": "652702" }, { "id": "3057", "name": "精河县", "code": "652722" }, { "id": "3058", "name": "温泉县", "code": "652723" }] }, { "id": "336", "name": "巴音郭楞蒙古自治州", "code": "652800", "children": [{ "id": "3059", "name": "库尔勒市", "code": "652801" }, { "id": "3060", "name": "轮台县", "code": "652822" }, { "id": "3061", "name": "尉犁县", "code": "652823" }, { "id": "3062", "name": "若羌县", "code": "652824" }, { "id": "3063", "name": "且末县", "code": "652825" }, { "id": "3064", "name": "焉耆回族自治县", "code": "652826" }, { "id": "3065", "name": "和静县", "code": "652827" }, { "id": "3066", "name": "和硕县", "code": "652828" }, { "id": "3067", "name": "博湖县", "code": "652829" }] }, { "id": "337", "name": "阿克苏地区", "code": "652900", "children": [{ "id": "3068", "name": "阿克苏市", "code": "652901" }, { "id": "3069", "name": "温宿县", "code": "652922" }, { "id": "3070", "name": "库车县", "code": "652923" }, { "id": "3071", "name": "沙雅县", "code": "652924" }, { "id": "3072", "name": "新和县", "code": "652925" }, { "id": "3073", "name": "拜城县", "code": "652926" }, { "id": "3074", "name": "乌什县", "code": "652927" }, { "id": "3075", "name": "阿瓦提县", "code": "652928" }, { "id": "3076", "name": "柯坪县", "code": "652929" }] }, { "id": "338", "name": "克孜勒苏柯尔克孜自治州", "code": "653000", "children": [{ "id": "3077", "name": "阿图什市", "code": "653001" }, { "id": "3078", "name": "阿克陶县", "code": "653022" }, { "id": "3079", "name": "阿合奇县", "code": "653023" }, { "id": "3080", "name": "乌恰县", "code": "653024" }] }, { "id": "339", "name": "喀什地区", "code": "653100", "children": [{ "id": "3081", "name": "喀什市", "code": "653101" }, { "id": "3082", "name": "疏附县", "code": "653121" }, { "id": "3083", "name": "疏勒县", "code": "653122" }, { "id": "3084", "name": "英吉沙县", "code": "653123" }, { "id": "3085", "name": "泽普县", "code": "653124" }, { "id": "3086", "name": "莎车县", "code": "653125" }, { "id": "3087", "name": "叶城县", "code": "653126" }, { "id": "3088", "name": "麦盖提县", "code": "653127" }, { "id": "3089", "name": "岳普湖县", "code": "653128" }, { "id": "3090", "name": "伽师县", "code": "653129" }, { "id": "3091", "name": "巴楚县", "code": "653130" }, { "id": "3092", "name": "塔什库尔干塔吉克自治县", "code": "653131" }] }, { "id": "340", "name": "和田地区", "code": "653200", "children": [{ "id": "3093", "name": "和田市", "code": "653201" }, { "id": "3094", "name": "和田县", "code": "653221" }, { "id": "3095", "name": "墨玉县", "code": "653222" }, { "id": "3096", "name": "皮山县", "code": "653223" }, { "id": "3097", "name": "洛浦县", "code": "653224" }, { "id": "3098", "name": "策勒县", "code": "653225" }, { "id": "3099", "name": "于田县", "code": "653226" }, { "id": "3100", "name": "民丰县", "code": "653227" }] }, { "id": "341", "name": "伊犁哈萨克自治州", "code": "654000", "children": [{ "id": "3101", "name": "伊宁市", "code": "654002" }, { "id": "3102", "name": "奎屯市", "code": "654003" }, { "id": "3103", "name": "霍尔果斯市", "code": "654004" }, { "id": "3104", "name": "伊宁县", "code": "654021" }, { "id": "3105", "name": "察布查尔锡伯自治县", "code": "654022" }, { "id": "3106", "name": "霍城县", "code": "654023" }, { "id": "3107", "name": "巩留县", "code": "654024" }, { "id": "3108", "name": "新源县", "code": "654025" }, { "id": "3109", "name": "昭苏县", "code": "654026" }, { "id": "3110", "name": "特克斯县", "code": "654027" }, { "id": "3111", "name": "尼勒克县", "code": "654028" }] }, { "id": "342", "name": "塔城地区", "code": "654200", "children": [{ "id": "3112", "name": "塔城市", "code": "654201" }, { "id": "3113", "name": "乌苏市", "code": "654202" }, { "id": "3114", "name": "额敏县", "code": "654221" }, { "id": "3115", "name": "沙湾县", "code": "654223" }, { "id": "3116", "name": "托里县", "code": "654224" }, { "id": "3117", "name": "裕民县", "code": "654225" }, { "id": "3118", "name": "和布克赛尔蒙古自治县", "code": "654226" }] }, { "id": "343", "name": "阿勒泰地区", "code": "654300", "children": [{ "id": "3119", "name": "阿勒泰市", "code": "654301" }, { "id": "3120", "name": "布尔津县", "code": "654321" }, { "id": "3121", "name": "富蕴县", "code": "654322" }, { "id": "3122", "name": "福海县", "code": "654323" }, { "id": "3123", "name": "哈巴河县", "code": "654324" }, { "id": "3124", "name": "青河县", "code": "654325" }, { "id": "3125", "name": "吉木乃县", "code": "654326" }] }, { "id": "344", "name": "自治区直辖县级行政区划", "code": "659000", "children": [{ "id": "3126", "name": "石河子市", "code": "659001" }, { "id": "3127", "name": "阿拉尔市", "code": "659002" }, { "id": "3128", "name": "图木舒克市", "code": "659003" }, { "id": "3129", "name": "五家渠市", "code": "659004" }, { "id": "3130", "name": "铁门关市", "code": "659006" }] }] }, { "id": "32", "name": "台湾省", "code": "710000", "children": [{ "id": "345", "name": "台湾", "code": "710000", "children": [{ "id": "3131", "name": "台湾", "code": "710000" }] }] }, { "id": "33", "name": "香港特别行政区", "code": "810000", "children": [{ "id": "346", "name": "香港", "code": "810000", "children": [{ "id": "3132", "name": "香港", "code": "810000" }] }] }, { "id": "34", "name": "澳门特别行政区", "code": "820000", "children": [{ "id": "347", "name": "澳门", "code": "820000", "children": [{ "id": "3133", "name": "澳门", "code": "820000" }] }] }];
module.exports = {
  zones_tree: zones_tree };

/***/ }),

/***/ 330:
/*!******************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/components/uni-popup/popup.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _message = _interopRequireDefault(__webpack_require__(/*! ./message.js */ 331));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}
// 定义 type 类型:弹出类型：top/bottom/center
var config = {
  // 顶部弹出
  top: 'top',
  // 底部弹出
  bottom: 'bottom',
  // 居中弹出
  center: 'center',
  // 消息提示
  message: 'top',
  // 对话框
  dialog: 'center',
  // 分享
  share: 'bottom' };var _default =


{
  data: function data() {
    return {
      config: config };

  },
  mixins: [_message.default] };exports.default = _default;

/***/ }),

/***/ 331:
/*!********************************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/components/uni-popup/message.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = {
  created: function created() {
    if (this.type === 'message') {
      // 不显示遮罩
      this.maskShow = false;
      // 获取子组件对象
      this.childrenMsg = null;
    }
  },
  methods: {
    customOpen: function customOpen() {
      if (this.childrenMsg) {
        this.childrenMsg.open();
      }
    },
    customClose: function customClose() {
      if (this.childrenMsg) {
        this.childrenMsg.close();
      }
    } } };exports.default = _default;

/***/ }),

/***/ 4:
/*!***********************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/pages.json ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ 471:
/*!*******************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/common/tim/user.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var userList = [{
  user: 'a',
  userId: '1',
  userSig: 'eJyrVgrxCdYrSy1SslIy0jNQ0gHzM1NS80oy0zLBwoZQweKU7MSCgswUJStDEwMDYwsjA3MTiExqRUFmUSpQ3NTU1MjAwAAiWpKZCxazNDYxtDCyNISakpkONDPQIDXDP6DErFw7xSzL3NzdMqqkIswtJDgtMbMooCzPLNfD2StG3zWsOMDQ01apFgAy4i*X',
  img: 'https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=1735490596,2760195857&fm=26&gp=0.jpg' },

{
  user: 'user1',
  userId: 'user1',
  img: 'https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2262632647,543198910&fm=26&gp=0.jpg',
  userSig: 'eJwtzM0KgkAYheF7mXXIN384Ci2khLQpksx9MJN*ZDGNFkV074m6PM*B90tKfQxe1pOYsADIYtxo7L3HC4787Kyn89GZ69k5NCSmAoArBqGYHvt26O3gUkoGAJP2eBst4oIqkGquYD10mzrJqu3a5y2t2mLTZmmi7aHQu4i7dPXYf3LWaJmHZXRakt8fDLcwbg__' },

{
  user: 'user2',
  userId: 'user2',
  img: 'https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=366135374,1364401596&fm=26&gp=0.jpg',
  userSig: 'eJwtzMEKgkAUheF3udtC7oxjjkKLahFSVpg9gDGjXUSxGRUpevdEXZ7vwP*F9Hx3em0gBO4grKdNStct5TRxZ7Xhy2FVmTUNKQiZQHQlR1-Mjx4aMnp0z-M4Is7aUjVZ4AomGfpLhYqxmzxun11tn-FJRhv-nb*qygayO5ikGDBK3UtcXMt9362OYgu-PyCUMVA_' },

{
  user: 'user3',
  userId: 'user3',
  img: 'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=275868592,2250122918&fm=26&gp=0.jpg',
  userSig: 'eJwtzNsKgkAUheF3mevQPSechG6EAqlA6AAT3giOtanxMJoY0bsn6uX6Fvxfcj6cvN44EhLmAVlNG3NTdljgxO-WOL4cbf7M6hpzElIBwBWDQMyPGWp0ZnQpJQOAWTu0k625oIpytVTwPnb1kcU2UZncP3ZYDFvd6r6qbtfoIpLmA469yiZIfWoh9eMN*f0BgOQx1Q__' },

{
  user: 'user4',
  userId: '5',
  img: 'https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2473035870,2692619587&fm=26&gp=0.jpg',
  userSig: 'eJyrVgrxCdYrSy1SslIy0jNQ0gHzM1NS80oy0zLBwqZQweKU7MSCgswUJStDEwMDYwsjA3MTiExqRUFmUSpQ3NTU1MjAwAAiWpKZCxazNDYxtDA2NIWakpkONDMwvSi4qkK7IK-KLS0wvyAjwzHdPTA8yavQUdszoFy7osTfvaQ0KDCiKjLfVqkWAC3sMNQ_' },

{
  user: 'user5',
  userId: '6',
  img: 'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=3293099503,606929711&fm=26&gp=0.jpg',
  userSig: 'eJyrVgrxCdYrSy1SslIy0jNQ0gHzM1NS80oy0zLBwmZQweKU7MSCgswUJStDEwMDYwsjA3MTiExqRUFmUSpQ3NTU1MjAwAAiWpKZCxazNDYxtDA2MYKakpkONLM83CLSyafQPbfAPCnHINTTLSDTJLfQo9DS2Cc3wzHHzK-IIqXYMtjHybHYVqkWAAlfL2A_' },

{
  user: 'user6',
  userId: '7',
  img: 'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1643922863,2228588017&fm=26&gp=0.jpg',
  userSig: 'eJwtzLEKgzAUheF3yVz0ahITBZe00EUnM7oUTeViK0maWqH03SvqeL4D-5foqolm40lB0gjIadvYmyngHTcWB7768WYt9qRIGACVKQi2P2ax6M3qnPMUAHYN*NwspyyRNJNHBYe16V0yBiqn3GTVWVlXva9t-GhjUecXVX-EvDjd0KHjWpmuJL8-ZZ0v7Q__' },

{
  user: 'user7',
  userId: '8',
  img: 'https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1179876196,102524513&fm=26&gp=0.jpg',
  userSig: 'eJyrVgrxCdYrSy1SslIy0jNQ0gHzM1NS80oy0zLBwhZQweKU7MSCgswUJStDEwMDYwsjA3MTiExqRUFmUSpQ3NTU1MjAwAAiWpKZCxazNDYxtDC2MIeakpkONLM4wj20PCQv0NfExCLXNCk9yDUiICzYRdujOKrYPKzcKMstuSzDycLHMjXZVqkWAAh-L1U_' },

{
  user: 'user8',
  userId: '9',
  img: 'https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=3206878631,547916318&fm=26&gp=0.jpg',
  userSig: 'eJwtzEELgjAYxvHvsmth7*ZmU*iix*oQdWjQRdm0V0nFDXFE3z1Rj8-vgf*XPC73YDQDSQgLgOyXjdq0DktcON7Q6ibve9QkoRwglAyOfH3M1ONgZhdCMABY1eFnsTjkVHKItgpWc1MN3e7dyTE7*6j1dXS1DbrudaA*t1VW3KaCpkzVKn0W-ER*f1cJMI4_' },

{
  user: 'user9',
  userId: '10',
  img: 'https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1779444511,689185070&fm=26&gp=0.jpg',
  userSig: 'eJyrVgrxCdYrSy1SslIy0jNQ0gHzM1NS80oy0zLBwoYw0eKU7MSCgswUJStDEwMDYwsjA3MTiExqRUFmUSpQ3NTU1MjAwAAiWpKZCxazNDYxtDAxsoSakpkONDRG3zjY1S-S1dHCK83CPUbfojgoLMDdPcM0yS2z0jnFz9ykyDFAuzS4ItU4ytNWqRYAZG4vOw__' }];var _default =






userList;exports.default = _default;

/***/ }),

/***/ 8:
/*!***********************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/service.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 2));
var _index = _interopRequireDefault(__webpack_require__(/*! ./store/index.js */ 9));
var _event = _interopRequireDefault(__webpack_require__(/*! common/event.js */ 11));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}
// 管理账号信息
var USERS_KEY = 'USERS_KEY';
var STATE_KEY = 'STATE_KEY';
// const IPurl = 'https://datixcx.com.aa.800123456.top/api/';
// const imgurl = 'https://datixcx.com.aa.800123456.top/';
var imgurl = 'https://yibeitong.com.aa.800123456.top/';
var IPurl = imgurl + 'api/';
// const IPurl='http://192.168.129.246/api/'
// const adminurl='https://datixcx.com.aa.800123456.top/admin/';
// appid:wx4c41cc50c5a53df9
// appid:wx49a560f7feac0feb   cj
/**
 * 请求头
 */
var header = {
  'content-type': 'application/x-www-form-urlencoded' };


/**
                                                          * 供外部post请求调用  
                                                          */
function post(url, params, onSuccess, onFailed) {
  console.log("请求方式：", "POST");
  request(url, params, "POST", onSuccess, onFailed);

}

/**
   * 供外部get请求调用
   */
function get(url, params, onSuccess, onFailed) {
  console.log("请求方式：", "GET");
  request(url, params, "GET", onSuccess, onFailed);
}

/**
   * function: 封装网络请求
   * @url URL地址
   * @params 请求参数
   * @method 请求方式：GET/POST
   * @onSuccess 成功回调
   * @onFailed  失败回调
   */

function request(url, params, method, onSuccess, onFailed) {
  console.log('请求url：' + url);

  console.log("请求头：", header);
  uni.request({
    url: IPurl + url,
    data: dealParams(params),
    method: method,
    header: header,
    success: function success(res) {
      uni.hideLoading();
      uni.stopPullDownRefresh();
      console.log('响应：', res.data);

      // if (res.data) {
      if (res.data.code == -1) {
        // if (params.login_type == 1) {
        // 	//一进来就登录失败
        // 	return

        // }
        // if (params.login_type == 2) {
        // 	//授权登录失败
        // 	uni.navigateBack()
        // 	return

        // }
        uni.showToast({
          icon: 'none',
          title: '请先授权登录' });

        _index.default.commit('logout');
        setTimeout(function () {
          uni.navigateTo({
            url: './pages/login/login?haslogin=false' });

        }, 1000);
        return;

      }

      /** start 根据需求 接口的返回状态码进行处理 */
      onSuccess(res);
      /** end 处理结束*/
      // }
    },
    fail: function fail(error) {

      uni.hideLoading();
      uni.stopPullDownRefresh();
      onFailed(error); //failure for other reasons
    } });

}

/**
   * function: 根据需求处理请求参数：添加固定参数配置等
   * @params 请求参数
   */
function dealParams(params) {
  console.log("请求参数:", params);
  return params;
}



var getUsers = function getUsers() {
  var ret = '';
  ret = uni.getStorageSync(USERS_KEY);
  if (!ret) {
    ret = '[]';
  }
  return JSON.parse(ret);
};

var addUser = function addUser(userInfo) {
  var users = getUsers();
  users.push({
    account: userInfo.account,
    password: userInfo.password });

  uni.setStorageSync(USERS_KEY, JSON.stringify(users));
};

var gologin = function gologin() {
  uni.navigateTo({
    url: '/pages/login_index/login_index' });

};

var jump = function jump(e) {
  // console.log(e.currentTarget.dataset.type)
  var datas = e.currentTarget.dataset;
  console.log(datas.login == true);

  if (datas.login == true) {
    if (!datas.haslogin) {
      uni.navigateTo({
        url: '../login/login' });

      return;
    }
  }
  if (datas.type == 'sp') {
    console.log(datas.spurl);
    _index.default.commit('spurl_fuc', datas.spurl);
    uni.navigateTo({
      url: datas.url });

    return;
  }
  if (datas.type == 2) {
    uni.switchTab({
      url: datas.url });

  } else if (datas.type == 3) {
    uni.redirectTo({
      url: datas.url });

  } else {
    uni.navigateTo({
      url: datas.url });

  }
};
var pveimg = function pveimg(e) {
  var current = e.currentTarget.dataset.src;
  var urls = e.currentTarget.dataset.array;

  var urls1 = [];
  if (urls) {
    urls1 = urls;

  } else {
    urls1[0] = current;
  }
  // console.log(urls1)
  uni.previewImage({
    current: current, // 当前显示图片的http链接
    urls: urls1 // 需要预览的图片http链接列表
  });

};
var call = function call(e) {
  console.log(e);
  // return
  if (e.currentTarget.dataset.tel) {
    // wx.makePhoneCall({
    // 	phoneNumber: e.currentTarget.dataset.tel+''
    // })
    uni.showModal({
      title: '提示',
      content: '是否拨打' + e.currentTarget.dataset.tel + '?',
      success: function success(res) {
        if (res.confirm) {
          wx.makePhoneCall({
            phoneNumber: e.currentTarget.dataset.tel + '' });

          console.log('用户点击确定');
        } else if (res.cancel) {
          console.log('用户点击取消');
        }
      } });

  }
};

var wxlogin = function wxlogin(num) {
  var that = this;
  // 获取用户信息
  if (num == 1) {
    uni.showLoading({
      title: '正在登录',
      mask: true });

  }
  uni.getSetting({
    success: function success(res) {
      console.log(res);
      if (res.authSetting['scope.userInfo'] == true) {
        // 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框
        console.log('已经授权');
        uni.getUserInfo({
          success: function success(res) {
            var userInfo = res.userInfo;
            console.log(userInfo);
            uni.setStorageSync('userInfo', res.userInfo);
            if (!userInfo) {

            } else {
              uni.login({
                success: function success(res) {

                  // 发送 res.code 到后台换取 openId, sessionKey, unionId
                  var uinfo = userInfo;
                  var data = {
                    code: res.code,
                    nickname: uinfo.nickName,
                    avatarurl: uinfo.avatarUrl,
                    type: 1 };

                  var rcode = res.code;
                  console.log(res.code);
                  uni.request({
                    url: IPurl + '/login',
                    data: data,
                    header: {
                      'content-type': 'application/x-www-form-urlencoded' },

                    dataType: 'json',
                    method: 'POST',
                    success: function success(res) {
                      uni.hideLoading();
                      console.log(res.data);

                      if (res.data.code == 1) {
                        uni.setStorageSync('token', res.data.data.userToken);
                        if (!res.data.data.phone) {
                          uni.showToast({
                            icon: 'none',
                            title: '请绑定手机号' });

                          setTimeout(function () {
                            if (num == 1) {

                              uni.redirectTo({
                                url: '/pages/login_tel/login_tel' });

                            } else {
                              uni.navigateTo({
                                url: '/pages/login_tel/login_tel' });


                            }
                          }, 1000);

                          return;
                        }
                        console.log('登录成功');
                        console.log(res.data);

                        _index.default.commit('logindata', res.data.data);
                        _index.default.commit('login', res.data.data.nickname);
                        uni.setStorageSync('loginmsg', res.data.data);

                        _event.default.trigger({
                          type: 'test',
                          page: '/pages/index/index',
                          //obj和test是举的例子，随意啥都行，这个传过去在on中的args中都可以获取到
                          obj: {},


                          test: {
                            'loginmsg': res.data.data },

                          success: function success(data) {
                            //data为on中返回的数据
                          } });

                        // im login



                        if (num == 1) {
                          uni.showToast({
                            icon: 'none',
                            title: '登录成功' });

                          setTimeout(function () {
                            uni.navigateBack();
                          }, 1000);
                        }
                      } else {
                        uni.removeStorageSync('userInfo');
                        uni.removeStorageSync('token');
                        uni.showToast({
                          icon: 'none',
                          title: '登录失败' });

                      }

                    },
                    fail: function fail() {
                      uni.hideLoading();
                      uni.showToast({
                        icon: 'none',
                        title: '登录失败' });

                    } });

                } });

            }
          } });


      } else {
        uni.hideLoading();
      }
    } });

};

var setUsermsg = function setUsermsg(data) {
  var jkurl = '/user/amendInfo';

  post(jkurl, data,
  function (res) {

    // if (res.data.code == 1) {
    if (res.data.code == 1) {
      var datas = res.data.data;
      // console.log(typeof datas)

      if (typeof datas == 'string') {
        datas = JSON.parse(datas);
      }
      wxlogin();
      uni.showToast({
        title: '操作成功' });


    } else {
      if (res.data.msg) {
        uni.showToast({
          icon: 'none',
          title: res.data.msg });

      } else {
        uni.showToast({
          icon: 'none',
          title: '操作失败' });

      }
    }
  },
  function (err) {
    that.btnkg = 0;

    uni.showToast({
      icon: 'none',
      title: '获取数据失败' });


  });

};


var wx_upload = function wx_upload(tximg) {
  return new Promise(function (resolve, reject) {
    uni.showLoading({
      mask: true,
      title: '正在上传' });

    uni.uploadFile({
      url: IPurl + 'user/upload_img',
      filePath: tximg,
      name: 'img',
      formData: {
        token: uni.getStorageSync('token') },

      // success: (uploadFileRes) => {
      // 	console.log(uploadFileRes.data);
      // 	var ndata = JSON.parse(uploadFileRes.data)
      // 	resolve(uploadFileRes)
      // },
      complete: function complete(res) {
        uni.hideLoading();
        uni.stopPullDownRefresh(); //慎用hideLoading,会关闭wx.showToast弹窗
        // console.log(`耗时${Date.now() - timeStart}`);
        console.log(res);
        if (res.statusCode == 200) {//请求成功
          var ndata = JSON.parse(res.data);
          if (ndata.code == -1) {
            _index.default.commit('logout');
            uni.navigateTo({
              url: '/pages/login/login' });

            return;
          } else if (ndata.code == 0) {
            if (ndata.msg) {

              uni.showToast({
                icon: 'none',
                title: ndata.msg });

            } else {

              uni.showToast({
                icon: 'none',
                title: '操作失败' });

            }
          }
          resolve(ndata);
        } else {
          reject(res);
        }
      } });

  });

};





// 配置接口请求的公共方法
var http = function http()






{var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},_ref$url = _ref.url,url = _ref$url === void 0 ? '' : _ref$url,_ref$param = _ref.param,param = _ref$param === void 0 ? {} : _ref$param,_ref$method = _ref.method,method = _ref$method === void 0 ? '' : _ref$method,_ref$header = _ref.header,header = _ref$header === void 0 ? { 'content-type': 'application/x-www-form-urlencoded' } : _ref$header;

  var timeStart = Date.now();
  return new Promise(function (resolve, reject) {
    console.log('请求url：' + getUrl(url));

    console.log("请求头：", header);
    console.log("param：", param);
    uni.request({
      url: getUrl(url),
      data: param,
      method: method,
      header: header,
      complete: function complete(res) {
        uni.hideLoading();
        uni.stopPullDownRefresh(); //慎用hideLoading,会关闭wx.showToast弹窗
        console.log("\u8017\u65F6".concat(Date.now() - timeStart));
        console.log(res);
        if (res.statusCode == 200) {//请求成功
          console.log(res);
          if (res.data.code == -1) {
            _index.default.commit('logout');
            uni.navigateTo({
              url: '/pages/login/login' });

            return;
          } else if (res.data.code == 0 && res.msg == '请先登录账号~') {
            uni.navigateTo({
              url: '/pages/login/login' });

            return;
          } else if (res.data.code == 0) {
            if (res.data.msg) {

              uni.showToast({
                icon: 'none',
                title: res.data.msg });

            } else {

              uni.showToast({
                icon: 'none',
                title: '操作失败' });

            }
          }
          resolve(res.data);
        } else {
          reject(res);
        }
      } });

  });
};
// 获取url
var getUrl = function getUrl(url) {
  if (!url) {
    return url;
  }
  if (url.slice(0, 1) == "/") {
    console.log(true);
    url = url.substr(1);
  }
  if (url.indexOf('://') == -1) {
    url = IPurl + url;
  }
  return url;
};
//暴露出去调用的方法


// get方法
var P_get = function P_get(url) {var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (!param.load_mode) {
    wx.showLoading({
      title: '请求中，请耐心等待...' });

  }
  return http({
    url: url,
    param: param,
    method: 'GET' });

};

var P_post = function P_post(url) {var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return http({
    url: url,
    param: param,
    method: "POST" });

};

var P_put = function P_put(url) {var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return http({
    url: url,
    param: param,
    method: 'put' });

};

var P_delete = function P_delete(url) {var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return http({
    url: url,
    param: param,
    method: 'put' });

};
// // 单个请求
// service.P_get('/cate/list').then(res => {
// 	console.log(res)
// }).catch(e => {
// 	console.log(e)
// })

// // 一个页面多个请求
// Promise.all([
//   service.P_get('/cate/list'),
//   service.P_get(`detail/${id}`)
// ]).then(result => {
//   console.log(result)
// }).catch(e => {
//   console.log(e)
// })
var getimg = function getimg(img) {
  if (!img) return;
  // console.log(imgurl+img)
  if (img.indexOf('://') == -1) {
    img = imgurl + img;
  }
  return img;
};
var getimgarr = function getimgarr(imgs, type) {
  if (!imgs) return;
  if (!type) {
    type = ',';
  }
  imgs = imgs.split(type);
  // console.log(imgurl+img)
  var newimgs = [];
  for (var i = 0; i < imgs.length; i++) {
    var img = imgs[i];
    if (img.indexOf('://') == -1) {
      img = imgurl + img;
    }
    newimgs.push(img);
  }
  // console.log(newimgs)
  return newimgs;
};
var gettime = function gettime(mj) {
  if (!mj) {
    return {};
  }
  // // console.log(mj.indexOf('今天')!=-1)
  // if(mj.indexOf('今天')!=-1){
  // 	return {
  // 		type:2,

  // 		time:mj
  // 	}
  // }
  // mj = mj.replace(/-/g,'/')
  var ntime = new Date(mj * 1000);
  // console.log(ntime)
  var n_year = ntime.getFullYear();
  var n_month = ntime.getMonth() + 1;
  var n_date = ntime.getDate();
  var n_hour = ntime.getHours();
  var n_minute = ntime.getMinutes();

  var time = new Date();
  var year = time.getFullYear();
  var month = time.getMonth() + 1;
  var date = time.getDate();
  var hour = time.getHours();
  var minute = time.getMinutes();
  // n_month=n_month<10? '0'+n_month:n_month
  n_date = n_date < 10 ? '0' + n_date : n_date;
  n_hour = n_hour < 10 ? '0' + n_hour : n_hour;
  n_minute = n_minute < 10 ? '0' + n_minute : n_minute;
  if (n_year == year) {

    return {
      type: 1,
      year: n_year,
      month: n_month,
      date: n_date,
      hour: n_hour,
      minute: n_minute,
      time: '今天 ' + n_hour + ':' + n_minute };

  } else {

    return {
      type: 2,
      year: n_year,
      month: n_month,
      date: n_date,
      hour: n_hour,
      minute: n_minute,
      time: n_year + '-' + n_month + '-' + n_date };

  }
};


var get_fwb = function get_fwb(str) {
  if (!str) {
    return;
  }
  str = str // .replace(/<p([\s\w"=\/\.:;]+)((?:(style="[^"]+")))/ig, '<p')
  .replace(/<p([\s\w"-=\/\.:;]+)((?:(class="[^"]+")))/ig, '<p $1').
  replace(/<p([\s\w"-=\/\.:;]+)/ig, '<p$1 class="xcx_fwb_p"')
  // .replace(/<div([\s\w"=\/\.:;]+)((?:(style="[^"]+")))/ig, '<div')
  .replace(/<div([\s\w"-=\/\.:;]+)((?:(class="[^"]+")))/ig, '<div $1').
  replace(/<div([\s\w"-=\/\.:;]+)/ig, '<div$1 class="xcx_fwb_div"')

  // .replace(/<img([\s\w"-=\/\.:;]+)((?:(height="[^"]+")))/ig, '<img $1')
  // .replace(/<img([\s\w"-=\/\.:;]+)((?:(width="[^"]+")))/ig, '<img $1')
  // .replace(/<img([\s\w"-=\/\.:;]+)((?:(style="[^"]+")))/ig, '<img $1')
  .replace(/<img([\s\w"-=\/\.:;]+)((?:(alt="[^"]+")))/ig, '<img $1').
  replace(/<img([\s\w"-=\/\.:;]+)((?:(class="[^"]+")))/ig, '<img $1').
  replace(/<img([\s\w"-=\/\.:;]+)/ig, '<img$1 class="xcx_fwb_img"');
  return str;
};
var getTel = function getTel(num, num1, num2) {
  num = num + '';
  var z = num.length - num2 - num1;
  console.log(z);
  var mg = '';
  for (var i = 0; i < z; i++) {
    mg += "*";
  }
  var str = num.substring(0, num1) + mg + num.substring(num.length - num2);
  return str;
};var _default =
{
  getUsers: getUsers,
  addUser: addUser,
  get: get,
  post: post,
  IPurl: IPurl,
  imgurl: imgurl,
  gologin: gologin,
  jump: jump,
  pveimg: pveimg,
  call: call,
  wxlogin: wxlogin,
  setUsermsg: setUsermsg,
  P_get: P_get,
  P_post: P_post,
  P_put: P_put,
  P_delete: P_delete,
  gettime: gettime,
  getimg: getimg,
  getimgarr: getimgarr,
  get_fwb: get_fwb,
  wx_upload: wx_upload,
  getTel: getTel };exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 9:
/*!***************************************************!*\
  !*** E:/phpStudy/WWW/68_yibeitong/store/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 2));
var _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 10));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}

_vue.default.use(_vuex.default);

var store = new _vuex.default.Store({
  state: {
    isLogin: false,
    isSDKReady: false, // TIM SDK 是否 ready
    conversationActive: {}, //聊天进行中的会话
    toUserId: '', //聊天对象id
    conversationList: [], //会话列表
    currentMessageList: [], //消息列表
    /**
     * 是否需要强制登录
     */
    forcedLogin: false,
    hasLogin: false,
    platform: '',
    userName: "游客",
    loginDatas: {
      avatarurl: 'http://51daiyan.test.upcdn.net/resource/api/img/20200716/3eb26483a34058663c1adf01cf90901d.png',
      nickname: '刘明',
      tel: '1786352362',
      gs: '智慧家物联网科技有限公司' },

    company: '',
    uid: '',
    phone: '',
    token: '',
    uuid: '' },

  mutations: {
    login: function login(state, userName) {
      state.userName = userName || '新用户';
      state.hasLogin = true;
      console.log(userName);
      console.log(state.userName);
    },
    logindata: function logindata(state, _logindata) {
      state.loginDatas = _logindata || '';
      _vue.default.set(state, 'loginDatas', _logindata);
      // state.company=logindata.company
      // state.uid= logindata.id
      // state.phone= logindata.phone
      // state.token= logindata.token
      console.log(_logindata);
      console.log(state.loginDatas);
    },
    setplatform: function setplatform(state, platform) {
      state.platform = platform || 'android';
    },
    logout: function logout(state) {
      state.userName = "游客";
      state.hasLogin = false;
    },

    //更新登录状态
    toggleIsLogin: function toggleIsLogin(state, isLogin) {
      state.isLogin = typeof isLogin === 'undefined' ? !state.isLogin : isLogin;
    },
    //更新TIMSDK状态
    toggleIsSDKReady: function toggleIsSDKReady(state, isSDKReady) {
      state.isSDKReady = typeof isSDKReady === 'undefined' ? !state.isSDKReady : isSDKReady;
    },
    //退出登录重置状态
    reset: function reset(state) {
      state.isLogin = false;
      state.isSDKReady = false;
    },
    //选择好友聊天--创建会话/拼接会话id
    createConversationActive: function createConversationActive(state, toUserId) {
      state.conversationActive.conversationID = 'C2C' + toUserId;
      console.log(toUserId);
      state.toUserId = toUserId;
      state.currentMessageList = [];
    },
    //选择已有会话聊天--更新选中会话详情
    updateConversationActive: function updateConversationActive(state, conversationItem) {
      state.conversationActive = Object.assign({}, conversationItem);
      if (conversationItem.type == 'GROUP') {
        state.toUserId = conversationItem.groupProfile.groupID;
      }
      if (conversationItem.type == 'C2C') {
        state.toUserId = conversationItem.userProfile.userID;
      }
      // state.toUserId = conversationItem.userProfile.userID

      state.currentMessageList = [];
    },
    //更新会话列表
    updateConversationList: function updateConversationList(state, newConversationList) {
      state.conversationList = newConversationList;
    },
    /**
        * 将消息插入当前会话列表
        * 调用时机：收/发消息事件触发时
        * @param {Object} state
        * @param {Message[]|Message} data
        * @returns
        */
    pushCurrentMessageList: function pushCurrentMessageList(state, data) {
      // 还没当前会话，则跳过
      if (Array.isArray(data)) {
        // 筛选出当前会话的消息
        var result = data.filter(function (item) {return item.conversationID === state.conversationActive.conversationID;});
        state.currentMessageList = [].concat(_toConsumableArray(state.currentMessageList), _toConsumableArray(result));
      } else if (data.conversationID === state.conversationActive.conversationID) {
        state.currentMessageList = [].concat(_toConsumableArray(state.currentMessageList), [data]);
      }
      console.log('1111');
      console.log(state.currentMessageList);
    },
    /**
        * 滑到顶部请求更多的历史消息
        * */
    unshiftCurrentMessageList: function unshiftCurrentMessageList(state, data) {
      console.log(data);
      if (data) {
        state.currentMessageList = [].concat(_toConsumableArray(data), _toConsumableArray(state.currentMessageList));
      }
    } } });var _default =



store;exports.default = _default;

/***/ })

}]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map